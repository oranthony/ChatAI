var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AiModelCommunicator.html",[0,0.556,1,1.027]],["body/interfaces/AiModelCommunicator.html",[0,0.856,1,2.04,2,1.598,3,0.158,4,0.14,5,0.14,6,1.375,7,1.375,8,0.894,9,1.419,10,2.17,11,1.591,12,1.355,13,1.664,14,1.742,15,1.355,16,0.158,17,0.629,18,1.859,19,0.666,20,2.17,21,1.355,22,0.491,23,3.068,24,0.666,25,0.02,26,0.736,27,2.128,28,3.068,29,0.411,30,0.338,31,0.31,32,0.435,33,0.662,34,0.363,35,0.667,36,0.701,37,0.736,38,0.939,39,0.773,40,0.488,41,0.852,42,1.591,43,0.116,44,1.664,45,1.971,46,0.939,47,1.477,48,1.171,49,1.355,50,1.355,51,1.355,52,1.515,53,1.355,54,0.347,55,1.443,56,1.704,57,1.591,58,0.411,59,2.067,60,2.07,61,1.116,62,1.355,63,0.939,64,0.939,65,0.939,66,0.939,67,0.894,68,0.852,69,0.939,70,1.355,71,1.23,72,0.939,73,0.939,74,1.355,75,0.939,76,1.23,77,0.939,78,0.939,79,0.894,80,0.894,81,0.811,82,0.939,83,0.852,84,0.939,85,0.939,86,0.811,87,0.939,88,0.939,89,0.939,90,0.811,91,1.843,92,0.939,93,0.939,94,0.939,95,0.939,96,0.939,97,0.939,98,0.894,99,0.939,100,0.939,101,0.894,102,0.942,103,1.23,104,0.811,105,1.23,106,0.811,107,1.23,108,0.811,109,1.23,110,0.811,111,1.23,112,0.811,113,1.23,114,0.811,115,1.23,116,0.811,117,1.23,118,0.939,119,0.939,120,1.843,121,0.939,122,1.843,123,1.742,124,0.939,125,0.939,126,0.939,127,0.939,128,1.742,129,1.742,130,0.939,131,0.939,132,0.939,133,0.011,134,0.011]],["title/classes/AiModelCommunicatorCreator.html",[43,0.058,56,0.932]],["body/classes/AiModelCommunicatorCreator.html",[0,0.761,1,2.027,3,0.15,4,0.133,5,0.133,6,1.473,7,1.473,8,0.854,9,1.354,10,2.186,11,1.549,12,0.896,13,1.567,14,1.704,15,0.896,16,0.15,18,1.768,19,0.644,20,2.152,21,1.31,22,0.561,24,0.761,25,0.019,26,0.732,27,2.107,29,0.392,30,0.386,31,0.304,32,0.416,33,0.655,34,0.353,35,0.636,36,0.669,37,0.703,38,0.896,39,0.738,40,0.466,41,0.813,42,1.813,43,0.116,44,1.797,45,2.067,46,1.31,47,1.474,48,1.339,49,1.704,50,1.704,51,1.704,52,1.727,53,1.704,54,0.343,55,1.645,56,1.712,57,1.813,58,0.573,59,2.087,60,2.131,61,1.079,62,1.31,63,0.896,64,1.31,65,1.31,66,1.31,67,1.248,68,1.189,69,1.31,70,1.704,71,1.546,72,1.31,73,1.31,74,1.549,75,1.31,76,1.405,77,1.31,78,1.31,79,1.248,80,0.854,81,0.775,82,0.896,83,0.813,84,0.896,85,0.896,86,0.775,87,0.896,88,0.896,89,0.896,90,0.775,91,1.82,92,0.896,93,0.896,94,0.896,95,0.896,96,0.896,97,0.896,98,0.854,99,0.896,100,0.896,101,1.248,102,0.93,103,1.189,104,0.775,105,1.189,106,0.775,107,1.189,108,0.775,109,1.189,110,0.775,111,1.189,112,0.775,113,1.189,114,0.775,115,1.189,116,0.775,117,1.189,118,0.896,119,0.896,120,1.82,121,0.896,122,1.82,123,1.704,124,0.896,125,0.896,126,0.896,127,0.896,128,1.704,129,1.704,130,0.896,131,0.896,132,0.896,133,0.011,134,0.011,135,2.929,136,2.929,137,2.929]],["title/components/AiModelDetailComponent.html",[138,0.655,139,1.248]],["body/components/AiModelDetailComponent.html",[3,0.148,4,0.131,5,0.131,9,2.939,16,0.148,17,0.6,19,0.635,22,0.769,24,0.884,25,0.019,26,0.593,29,0.739,30,0.516,31,0.356,32,0.784,33,0.483,34,0.429,43,0.045,47,0.984,54,0.148,76,1.39,79,0.838,102,0.408,120,1.173,133,0.01,134,0.012,138,0.978,139,1.864,140,1.499,141,1.191,142,1.257,143,1.13,144,1.13,145,6.02,146,2.366,147,5.369,148,2.469,149,3.211,150,1.191,151,2.929,152,2.779,153,2.526,154,4.229,155,1.848,156,5.009,157,1.75,158,4.225,159,5.009,160,5.009,161,5.009,162,5.009,163,3.489,164,5.716,165,4.225,166,4.225,167,3.629,168,4.742,169,2.513,170,4.229,171,0.88,172,2.875,173,4.283,174,4.225,175,2.19,176,2.875,177,4.225,178,2.875,179,5.009,180,2.075,181,4.225,182,2.875,183,5.521,184,3.629,185,4.742,186,2.875,187,2.002,188,2.875,189,2.875,190,2.875,191,2.875,192,2.875,193,2.875,194,2.875,195,1.843,196,1.71,197,2.071,198,0.69,199,0.924,200,2.202,201,2.875,202,2.002,203,2.875,204,1.843,205,2.469,206,1.409,207,2.875,208,5.009,209,2.202,210,1.71,211,2.875,212,2.875,213,1.843,214,2.202,215,2.875,216,2.202,217,1.864,218,2.875,219,2.875,220,4.225,221,2.469,222,2.708,223,2.002,224,2.875,225,2.875,226,2.875,227,2.875,228,2.875,229,2.875,230,2.875,231,2.875,232,2.875,233,2.202,234,2.202,235,2.875,236,2.875,237,2.875,238,2.875,239,4.225,240,4.225,241,4.225,242,4.225,243,4.225,244,2.295,245,1.954,246,2.572,247,2.875,248,2.609,249,2.875,250,1.71,251,2.72,252,2.346,253,2.609,254,2.708,255,2.17,256,4.229,257,3.396,258,2.061,259,2.469,260,1.409,261,2.469,262,4.225,263,2.316,264,1.954,265,1.597,266,1.33,267,1.409,268,3.311,269,2.469,270,3.489,271,3.489,272,2.875,273,4.302,274,4.302,275,5.009,276,2.469,277,2.202,278,2.469,279,2.875,280,2.875,281,2.346,282,3.489,283,2.002,284,1.848,285,2.875,286,2.875,287,2.875,288,2.875,289,1.954,290,4.225,291,2.875,292,2.469,293,1.71,294,2.469,295,2.002,296,1.497,297,2.875,298,2.875,299,1.073,300,1.75,301,1.75,302,1.191,303,2.287,304,1.191,305,1.191,306,0.971,307,1.191,308,0.924,309,0.924,310,1.75,311,0.971,312,0.838,313,1.75,314,0.924,315,1.191,316,0.971,317,0.971,318,0.971,319,1.191,320,0.971,321,1.191,322,0.971,323,1.191,324,0.924,325,0.838,326,0.838,327,0.971,328,1.191,329,0.971,330,1.13,331,1.191,332,1.191]],["title/components/AppComponent.html",[138,0.655,306,1.248]],["body/components/AppComponent.html",[3,0.221,4,0.196,5,0.196,16,0.221,17,0.793,22,0.619,25,0.019,26,0.415,30,0.426,31,0.287,33,0.598,34,0.3,43,0.068,54,0.221,58,0.748,133,0.014,134,0.014,138,1.099,139,1.454,140,1.983,141,1.784,142,1.883,143,1.692,144,1.692,146,1.317,150,1.784,151,3.11,152,2.951,153,1.607,155,2.444,157,2.316,198,1.033,217,1.454,244,2.317,246,2.444,248,2.242,253,2.242,255,2.885,257,3.545,258,2.086,260,2.11,263,1.991,264,1.991,283,2.999,284,1.883,293,4.15,299,1.607,300,2.316,301,2.316,302,1.784,303,2.721,304,1.784,305,1.784,306,2.217,307,1.784,308,1.384,309,2.187,310,2.316,311,1.454,312,1.255,313,2.316,314,1.384,315,1.784,316,1.454,317,1.454,318,1.454,319,1.784,320,1.454,321,1.784,322,1.454,323,1.784,324,1.384,325,1.984,326,1.809,327,1.454,328,1.784,329,1.454,330,1.692,331,1.784,332,1.784,333,3.698,334,3.104,335,6.206,336,5.589,337,6.206,338,1.276,339,5.992,340,4.859,341,4.281,342,4.281,343,4.306,344,4.801,345,4.306,346,3.698,347,1.991,348,3.104,349,2.11,350,2.999,351,1.991,352,2.242,353,3.336,354,3.298,355,2.999,356,3.298]],["title/modules/AppModule.html",[357,2.576,358,2.576]],["body/modules/AppModule.html",[3,0.186,4,0.164,5,0.164,25,0.019,34,0.537,35,1.081,43,0.057,52,1.054,54,0.186,133,0.012,134,0.012,139,2.239,146,1.522,147,2.769,152,1.421,196,2.151,198,0.867,258,1.856,299,1.35,306,2.443,308,2.132,311,2.239,314,2.132,316,2.239,318,2.239,320,2.239,322,2.239,324,2.132,326,1.657,327,2.239,329,2.239,357,2.518,358,5.34,359,2.318,360,2.518,361,4.882,362,4.882,363,4.271,364,2.769,365,3.105,366,3.105,367,3.105,368,3.105,369,4.253,370,4.271,371,3.105,372,3.105,373,3.615,374,4.271,375,4.271,376,4.973,377,4.973,378,3.464,379,2.318,380,3.615,381,3.615,382,4.973,383,3.615,384,3.615,385,4.271,386,3.105,387,4.973,388,3.615,389,4.973,390,4.973,391,4.973,392,2.769,393,3.105,394,2.518,395,4.271,396,5.685,397,2.769,398,3.615,399,2.769,400,3.615,401,3.105,402,2.518,403,3.105,404,4.973,405,3.105,406,4.973,407,3.615,408,4.271,409,4.973,410,3.615,411,4.973,412,3.615,413,4.973,414,3.615,415,4.973,416,3.105,417,3.615,418,2.769,419,3.615,420,3.615,421,2.769,422,4.973,423,3.615,424,2.769,425,3.615,426,3.615,427,3.615,428,3.615,429,2.59,430,3.615,431,3.105,432,3.105,433,3.105,434,3.615,435,2.518,436,2.518,437,3.615,438,2.518,439,2.518,440,4.973,441,2.959,442,2.151,443,3.615,444,2.518,445,2.518,446,3.615,447,3.464,448,3.615,449,2.518,450,3.105,451,3.615,452,3.615,453,3.615,454,3.615,455,3.615,456,3.615,457,3.615,458,4.271,459,3.615,460,3.615,461,3.615,462,3.615,463,3.615,464,3.615,465,3.615,466,3.615,467,3.615,468,3.615]],["title/modules/AppRoutingModule.html",[357,2.576,369,2.371]],["body/modules/AppRoutingModule.html",[3,0.274,4,0.243,5,0.243,25,0.019,34,0.506,43,0.084,54,0.274,61,1.345,133,0.016,134,0.016,138,1.211,198,1.28,308,2.054,309,1.715,314,2.054,324,2.054,325,1.556,326,1.994,339,6.091,340,4.452,359,3.422,364,4.088,369,4.097,374,4.584,375,5.489,393,4.584,394,3.718,395,5.489,401,4.584,402,3.718,403,4.584,469,5.338,470,5.338,471,6.391,472,4.765,473,4.584,474,5.338,475,5.338]],["title/components/ChatbotContainerComponent.html",[138,0.655,308,1.188]],["body/components/ChatbotContainerComponent.html",[3,0.112,4,0.156,5,0.1,6,0.579,7,0.908,13,1.121,16,0.112,17,0.488,19,0.516,22,0.779,24,0.832,25,0.019,26,0.653,29,0.698,30,0.49,31,0.351,32,0.821,33,0.702,34,0.473,35,0.746,36,0.5,37,1.327,39,0.552,40,0.952,43,0.035,44,0.908,47,0.43,48,0.908,54,0.112,56,1.394,58,0.74,68,1.177,81,0.579,90,1.121,102,0.821,104,1.121,106,0.579,108,1.121,110,0.579,133,0.009,134,0.009,138,1.172,139,0.739,140,1.219,141,1.988,142,0.957,143,0.86,144,0.86,146,2.026,150,0.907,151,2.776,152,2.634,153,2.299,154,3.676,155,1.502,157,1.423,163,3.343,170,3.676,171,0.67,175,2.855,180,2.16,192,1.789,198,0.525,199,0.704,204,1.404,205,1.88,206,1.073,209,1.677,210,1.303,213,1.404,214,1.677,216,1.677,217,0.739,222,3.948,223,1.525,233,1.677,234,1.677,244,2.471,245,1.588,246,2.809,248,2.207,250,1.303,251,1.012,255,2.049,258,1.282,263,1.96,264,1.012,265,1.216,266,1.588,267,1.073,281,1.216,284,1.502,289,1.588,296,2.5,299,0.817,300,1.423,301,1.423,302,0.907,303,1.988,304,0.907,305,0.907,306,0.739,307,0.907,308,1.542,309,2.197,310,1.423,311,0.739,312,0.638,313,1.423,314,0.704,315,0.907,316,0.739,317,1.159,318,0.739,319,0.907,320,0.739,321,0.907,322,0.739,323,0.907,324,0.704,325,0.638,326,0.638,327,0.739,328,0.907,329,0.739,330,1.35,331,0.907,332,0.907,338,1.321,347,1.588,348,2.666,349,1.683,350,2.952,351,1.012,352,1.14,353,2.077,394,4.928,429,1.14,449,1.525,450,1.88,476,6.077,477,1.677,478,3.64,479,2.95,480,2.931,481,3.948,482,4.238,483,4.238,484,3.64,485,4.238,486,3.64,487,2.521,488,2.5,489,2.952,490,4.43,491,3.435,492,2.95,493,4.122,494,2.95,495,2.631,496,4.122,497,2.189,498,3.246,499,2.855,500,3.84,501,2.95,502,3.435,503,2.189,504,2.95,505,2.189,506,1.88,507,2.95,508,2.189,509,2.95,510,1.88,511,2.189,512,1.88,513,1.88,514,1.88,515,2.95,516,2.189,517,1.88,518,1.88,519,2.189,520,2.189,521,1.88,522,2.392,523,3.326,524,2.95,525,3.631,526,2.189,527,1.88,528,2.189,529,1.525,530,1.88,531,1.404,532,2.189,533,1.88,534,1.303,535,1.216,536,1.14,537,1.216,538,1.35,539,1.14,540,1.525,541,1.404,542,2.631,543,1.404,544,1.525,545,1.303,546,1.525,547,2.189,548,1.525,549,1.525,550,1.525,551,1.525,552,2.189,553,0.957,554,1.216,555,1.677,556,2.189,557,1.404,558,2.354,559,1.88,560,2.392,561,1.502,562,1.88,563,3.102,564,2.189,565,2.95,566,1.677,567,1.303,568,1.88,569,2.95,570,1.677,571,3.676,572,1.525,573,2.631,574,1.88,575,1.88,576,2.631,577,1.525,578,1.88,579,1.14,580,1.88,581,2.896,582,1.404,583,2.95,584,1.88,585,1.88,586,1.88,587,1.88,588,1.88,589,1.88,590,1.88,591,1.88,592,1.88,593,2.95,594,2.95,595,1.88,596,2.631,597,2.189,598,1.88,599,1.88,600,1.88,601,1.88,602,1.88,603,2.95,604,2.631,605,1.88,606,2.189,607,1.14,608,1.88,609,1.88,610,1.88,611,1.88,612,2.95,613,1.88,614,2.631,615,1.404,616,1.404,617,1.88,618,1.88,619,1.88,620,1.88,621,1.88,622,1.677,623,1.88,624,1.88,625,1.404,626,2.189,627,1.88,628,1.303,629,1.88,630,2.189,631,1.88,632,1.404,633,1.677,634,1.073,635,1.88,636,1.88,637,1.88,638,1.88,639,2.95,640,1.88,641,1.88,642,2.631,643,2.189,644,1.88,645,2.95,646,1.88,647,1.404,648,1.88,649,1.88,650,1.88,651,3.64,652,1.677,653,3.64,654,2.189,655,3.64,656,2.189,657,2.189,658,2.189,659,2.189,660,1.88,661,1.303,662,1.14,663,1.88,664,2.189,665,1.88,666,2.952,667,2.631,668,1.88,669,2.631,670,1.88,671,1.677,672,1.88,673,1.303,674,1.404,675,2.855,676,2.95,677,3.343,678,2.631,679,2.95,680,2.95,681,4.122,682,2.95,683,1.677,684,1.677,685,1.216,686,2.631,687,1.525,688,1.88,689,2.95,690,1.88,691,2.95,692,1.88,693,1.88]],["title/injectables/ChatbotEffects.html",[445,2.576,694,1.188]],["body/injectables/ChatbotEffects.html",[3,0.243,4,0.216,5,0.216,16,0.243,17,0.844,22,0.658,25,0.019,29,0.634,30,0.361,31,0.243,32,0.673,33,0.626,34,0.517,37,1.741,39,1.194,40,1.114,43,0.075,54,0.243,58,0.634,133,0.015,134,0.015,171,1.819,198,1.137,199,1.524,312,2.085,338,1.083,429,2.469,444,3.302,445,4.14,480,2.839,500,4.654,538,2.552,539,2.469,540,3.302,543,4.162,545,2.821,634,2.913,694,1.91,695,2.324,696,4.072,697,5.577,698,4.072,699,6.144,700,4.741,701,5.577,702,5.105,703,5.105,704,5.105,705,5.944,706,5.105,707,5.105,708,5.105,709,4.741,710,4.072,711,4.741,712,3.302,713,4.072,714,4.072,715,3.302,716,3.302,717,4.741,718,3.632]],["title/classes/ConcreteBlenderbot3BCommunicator.html",[43,0.058,105,1.027]],["body/classes/ConcreteBlenderbot3BCommunicator.html",[0,0.782,1,2.04,3,0.158,4,0.14,5,0.14,6,1.506,7,1.506,8,0.895,10,2.151,11,1.356,12,0.94,13,1.597,14,1.591,15,0.94,16,0.158,17,0.629,18,1.84,19,0.666,20,2.171,21,1.356,22,0.576,24,0.666,25,0.02,26,0.734,27,2.128,29,0.411,30,0.338,31,0.292,32,0.436,33,0.662,34,0.363,35,0.667,36,0.701,37,0.737,38,0.94,39,0.774,40,0.488,41,0.852,42,1.591,43,0.116,44,1.664,45,1.972,46,0.94,47,1.477,48,1.172,49,1.356,50,1.356,51,1.356,52,1.516,53,1.356,54,0.347,55,1.444,56,1.704,57,1.591,58,0.593,59,2.078,60,2.07,61,1.117,62,1.356,63,0.94,64,0.94,65,0.94,66,0.94,67,0.895,68,0.852,69,0.94,70,1.356,71,1.231,72,0.94,73,0.94,74,1.356,75,0.94,76,1.231,77,0.94,78,0.94,79,0.895,80,0.895,81,0.812,82,0.94,83,0.852,84,0.94,85,0.94,86,0.812,87,0.94,88,0.94,89,0.94,90,0.812,91,1.844,92,0.94,93,0.94,94,0.94,95,0.94,96,0.94,97,0.94,98,0.895,99,0.94,100,0.94,101,1.292,102,0.943,103,1.231,104,0.812,105,1.444,106,0.812,107,1.231,108,0.812,109,1.231,110,0.812,111,1.231,112,0.812,113,1.231,114,0.812,115,1.231,116,0.812,117,1.231,118,0.94,119,0.94,120,1.878,121,0.94,122,1.844,123,1.743,124,1.356,125,0.94,126,0.94,127,0.94,128,1.743,129,1.743,130,0.94,131,0.94,132,0.94,133,0.011,134,0.011,338,0.701,719,3.071,720,3.071,721,3.071]],["title/classes/ConcreteBlenderbot3BCommunicatorCreator.html",[43,0.058,104,0.978]],["body/classes/ConcreteBlenderbot3BCommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,1.149,105,1.206,106,0.79,107,1.206,108,0.79,109,1.206,110,0.79,111,1.206,112,0.79,113,1.206,114,0.79,115,1.206,116,0.79,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,723,2.987,724,1.556,725,1.556]],["title/classes/ConcreteBlenderbotCommunicator.html",[43,0.058,103,1.027]],["body/classes/ConcreteBlenderbotCommunicator.html",[0,0.853,1,2.038,3,0.157,4,0.139,5,0.139,6,1.501,7,1.501,8,0.889,9,1.41,10,2.168,11,1.35,12,0.933,13,1.66,14,1.737,15,0.933,16,0.157,17,0.626,18,1.837,19,0.663,20,2.168,21,1.35,22,0.574,24,0.663,25,0.02,26,0.734,27,2.125,29,0.408,30,0.336,31,0.292,32,0.433,33,0.661,34,0.362,35,0.663,36,0.697,37,0.732,38,0.933,39,0.768,40,0.485,41,0.847,42,1.585,43,0.116,44,1.66,45,1.968,46,0.933,47,1.476,48,1.166,49,1.35,50,1.35,51,1.35,52,1.654,53,1.35,54,0.347,55,1.438,56,1.701,57,1.585,58,0.59,59,2.077,60,2.067,61,1.111,62,1.35,63,0.933,64,0.933,65,0.933,66,0.933,67,0.889,68,0.847,69,0.933,70,1.35,71,1.224,72,0.933,73,0.933,74,1.35,75,0.933,76,1.224,77,0.933,78,0.933,79,0.889,80,0.889,81,0.807,82,0.933,83,0.847,84,0.933,85,0.933,86,0.807,87,0.933,88,0.933,89,0.933,90,0.807,91,1.84,92,0.933,93,0.933,94,0.933,95,0.933,96,0.933,97,0.933,98,0.889,99,0.933,100,0.933,101,1.285,102,0.941,103,1.438,104,0.807,105,1.224,106,0.807,107,1.224,108,0.807,109,1.224,110,0.807,111,1.224,112,0.807,113,1.224,114,0.807,115,1.224,116,0.807,117,1.224,118,1.35,119,1.35,120,1.875,121,1.35,122,1.84,123,1.737,124,0.933,125,0.933,126,0.933,127,0.933,128,1.737,129,1.737,130,0.933,131,0.933,132,0.933,133,0.011,134,0.011,338,0.697,726,3.05,727,3.05,728,3.05]],["title/classes/ConcreteBlenderbotCommunicatorCreator.html",[43,0.058,90,0.978]],["body/classes/ConcreteBlenderbotCommunicatorCreator.html",[0,0.758,1,2.025,3,0.149,4,0.132,5,0.132,6,0.769,7,0.769,8,0.847,9,1.345,10,2.211,11,1.303,12,0.89,13,1.73,14,1.698,15,0.89,16,0.149,18,1.765,19,0.64,20,2.149,21,1.303,22,0.558,24,0.758,25,0.019,26,0.732,27,2.104,29,0.389,30,0.384,31,0.328,32,0.413,33,0.654,34,0.352,35,0.632,36,0.664,37,0.697,38,0.89,39,0.732,40,0.462,41,0.807,42,1.698,43,0.115,44,1.765,45,2.064,46,0.89,47,1.47,48,1.127,49,1.543,50,1.543,51,1.543,52,1.469,53,1.303,54,0.343,55,1.541,56,1.769,57,1.808,58,0.389,59,2.086,60,2.128,61,1.073,62,1.303,63,0.89,64,1.303,65,1.303,66,1.303,67,1.241,68,1.183,69,1.303,70,1.698,71,1.541,72,1.303,73,1.303,74,1.698,75,1.303,76,1.541,77,1.303,78,1.303,79,1.241,80,0.847,81,0.769,82,0.89,83,0.807,84,0.89,85,1.303,86,1.127,87,1.303,88,1.303,89,1.303,90,1.127,91,1.853,92,1.303,93,1.303,94,1.303,95,1.303,96,1.303,97,1.303,98,1.241,99,1.303,100,1.303,101,1.469,102,0.929,103,1.183,104,0.769,105,1.183,106,0.769,107,1.183,108,0.769,109,1.183,110,0.769,111,1.183,112,0.769,113,1.183,114,0.769,115,1.183,116,0.769,117,1.183,118,0.89,119,0.89,120,1.816,121,0.89,122,1.816,123,1.698,124,0.89,125,0.89,126,0.89,127,0.89,128,1.698,129,1.698,130,0.89,131,0.89,132,0.89,133,0.011,134,0.011,722,2.331,724,1.514,725,1.514,729,2.907]],["title/classes/ConcreteDialogptCommunicator.html",[43,0.058,109,1.027]],["body/classes/ConcreteDialogptCommunicator.html",[0,0.782,1,2.04,3,0.158,4,0.14,5,0.14,6,1.506,7,1.506,8,0.895,10,2.151,11,1.356,12,0.94,13,1.597,14,1.591,15,0.94,16,0.158,17,0.629,18,1.84,19,0.666,20,2.171,21,1.356,22,0.576,24,0.666,25,0.02,26,0.734,27,2.128,29,0.411,30,0.338,31,0.292,32,0.436,33,0.662,34,0.363,35,0.667,36,0.701,37,0.737,38,0.94,39,0.774,40,0.488,41,0.852,42,1.591,43,0.116,44,1.664,45,1.972,46,0.94,47,1.477,48,1.172,49,1.356,50,1.356,51,1.356,52,1.516,53,1.356,54,0.347,55,1.444,56,1.704,57,1.591,58,0.593,59,2.078,60,2.07,61,1.117,62,1.356,63,0.94,64,0.94,65,0.94,66,0.94,67,0.895,68,0.852,69,0.94,70,1.356,71,1.231,72,0.94,73,0.94,74,1.356,75,0.94,76,1.231,77,0.94,78,0.94,79,0.895,80,0.895,81,0.812,82,0.94,83,0.852,84,0.94,85,0.94,86,0.812,87,0.94,88,0.94,89,0.94,90,0.812,91,1.844,92,0.94,93,0.94,94,0.94,95,0.94,96,0.94,97,0.94,98,0.895,99,0.94,100,0.94,101,1.292,102,0.943,103,1.231,104,0.812,105,1.231,106,0.812,107,1.231,108,0.812,109,1.444,110,0.812,111,1.231,112,0.812,113,1.231,114,0.812,115,1.231,116,0.812,117,1.231,118,0.94,119,0.94,120,1.878,121,0.94,122,1.844,123,1.743,124,0.94,125,0.94,126,1.356,127,0.94,128,1.743,129,1.743,130,0.94,131,0.94,132,0.94,133,0.011,134,0.011,338,0.701,730,3.071,731,3.071,732,3.071]],["title/classes/ConcreteDialogptCommunicatorCreator.html",[43,0.058,108,0.978]],["body/classes/ConcreteDialogptCommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,0.79,105,1.206,106,0.79,107,1.206,108,1.149,109,1.206,110,0.79,111,1.206,112,0.79,113,1.206,114,0.79,115,1.206,116,0.79,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,724,1.556,725,1.556,733,2.987]],["title/classes/ConcreteFalconCommunicator.html",[43,0.058,111,1.027]],["body/classes/ConcreteFalconCommunicator.html",[0,0.781,1,2.039,3,0.157,4,0.139,5,0.139,6,1.505,7,1.505,8,0.893,10,2.15,11,1.355,12,0.938,13,1.596,14,1.59,15,0.938,16,0.157,17,0.628,18,1.839,19,0.665,20,2.17,21,1.355,22,0.576,24,0.665,25,0.02,26,0.734,27,2.128,29,0.41,30,0.337,31,0.292,32,0.435,33,0.662,34,0.363,35,0.666,36,0.7,37,0.735,38,0.938,39,0.772,40,0.487,41,0.851,42,1.59,43,0.116,44,1.663,45,1.971,46,0.938,47,1.477,48,1.171,49,1.355,50,1.355,51,1.355,52,1.514,53,1.355,54,0.347,55,1.443,56,1.704,57,1.59,58,0.592,59,2.087,60,2.069,61,1.115,62,1.355,63,0.938,64,0.938,65,0.938,66,0.938,67,0.893,68,0.851,69,0.938,70,1.355,71,1.229,72,0.938,73,0.938,74,1.355,75,0.938,76,1.229,77,0.938,78,0.938,79,0.893,80,0.893,81,0.811,82,0.938,83,0.851,84,0.938,85,0.938,86,0.811,87,0.938,88,0.938,89,0.938,90,0.811,91,1.843,92,0.938,93,0.938,94,0.938,95,0.938,96,0.938,97,0.938,98,0.893,99,0.938,100,0.938,101,1.29,102,0.942,103,1.229,104,0.811,105,1.229,106,0.811,107,1.229,108,0.811,109,1.229,110,0.811,111,1.443,112,0.811,113,1.229,114,0.811,115,1.229,116,0.811,117,1.229,118,0.938,119,0.938,120,1.878,121,0.938,122,1.843,123,1.741,124,0.938,125,0.938,126,0.938,127,1.355,128,1.741,129,1.741,130,0.938,131,0.938,132,0.938,133,0.011,134,0.011,338,0.7,734,3.066,735,3.066,736,3.066]],["title/classes/ConcreteFalconCommunicatorCreator.html",[43,0.058,110,0.978]],["body/classes/ConcreteFalconCommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,0.79,105,1.206,106,0.79,107,1.206,108,0.79,109,1.206,110,1.149,111,1.206,112,0.79,113,1.206,114,0.79,115,1.206,116,0.79,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,724,1.556,725,1.556,737,2.987]],["title/classes/ConcreteLlamaCommunicator.html",[43,0.058,107,1.027]],["body/classes/ConcreteLlamaCommunicator.html",[0,0.782,1,2.04,3,0.158,4,0.14,5,0.14,6,1.506,7,1.506,8,0.895,10,2.151,11,1.356,12,0.94,13,1.597,14,1.591,15,0.94,16,0.158,17,0.629,18,1.84,19,0.666,20,2.171,21,1.356,22,0.576,24,0.666,25,0.02,26,0.734,27,2.128,29,0.411,30,0.338,31,0.292,32,0.436,33,0.662,34,0.363,35,0.667,36,0.701,37,0.737,38,0.94,39,0.774,40,0.488,41,0.852,42,1.591,43,0.116,44,1.664,45,1.972,46,0.94,47,1.477,48,1.172,49,1.356,50,1.356,51,1.356,52,1.516,53,1.356,54,0.347,55,1.444,56,1.704,57,1.591,58,0.593,59,2.078,60,2.07,61,1.117,62,1.356,63,0.94,64,0.94,65,0.94,66,0.94,67,0.895,68,0.852,69,0.94,70,1.356,71,1.231,72,0.94,73,0.94,74,1.356,75,0.94,76,1.231,77,0.94,78,0.94,79,0.895,80,0.895,81,0.812,82,0.94,83,0.852,84,0.94,85,0.94,86,0.812,87,0.94,88,0.94,89,0.94,90,0.812,91,1.844,92,0.94,93,0.94,94,0.94,95,0.94,96,0.94,97,0.94,98,0.895,99,0.94,100,0.94,101,1.292,102,0.943,103,1.231,104,0.812,105,1.231,106,0.812,107,1.444,108,0.812,109,1.231,110,0.812,111,1.231,112,0.812,113,1.231,114,0.812,115,1.231,116,0.812,117,1.231,118,0.94,119,0.94,120,1.878,121,0.94,122,1.844,123,1.743,124,0.94,125,1.356,126,0.94,127,0.94,128,1.743,129,1.743,130,0.94,131,0.94,132,0.94,133,0.011,134,0.011,338,0.701,738,3.071,739,3.071,740,3.071]],["title/classes/ConcreteLlamaCommunicatorCreator.html",[43,0.058,106,0.978]],["body/classes/ConcreteLlamaCommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,0.79,105,1.206,106,1.149,107,1.206,108,0.79,109,1.206,110,0.79,111,1.206,112,0.79,113,1.206,114,0.79,115,1.206,116,0.79,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,724,1.556,725,1.556,741,2.987]],["title/classes/ConcreteOpenjourneyCommunicator.html",[43,0.058,113,1.027]],["body/classes/ConcreteOpenjourneyCommunicator.html",[0,0.781,1,2.039,3,0.157,4,0.139,5,0.139,6,1.505,7,1.505,8,0.893,10,2.15,11,1.355,12,0.938,13,1.596,14,1.59,15,0.938,16,0.157,17,0.628,18,1.839,19,0.665,20,2.17,21,1.355,22,0.576,24,0.665,25,0.02,26,0.734,27,2.128,29,0.41,30,0.337,31,0.292,32,0.435,33,0.662,34,0.363,35,0.666,36,0.7,37,0.735,38,0.938,39,0.772,40,0.487,41,0.851,42,1.59,43,0.116,44,1.663,45,1.971,46,0.938,47,1.477,48,1.171,49,1.355,50,1.355,51,1.355,52,1.514,53,1.355,54,0.347,55,1.443,56,1.704,57,1.59,58,0.592,59,2.087,60,2.069,61,1.115,62,1.355,63,0.938,64,0.938,65,0.938,66,0.938,67,0.893,68,0.851,69,0.938,70,1.355,71,1.229,72,0.938,73,0.938,74,1.355,75,0.938,76,1.229,77,0.938,78,0.938,79,0.893,80,0.893,81,0.811,82,0.938,83,0.851,84,0.938,85,0.938,86,0.811,87,0.938,88,0.938,89,0.938,90,0.811,91,1.843,92,0.938,93,0.938,94,0.938,95,0.938,96,0.938,97,0.938,98,0.893,99,0.938,100,0.938,101,1.29,102,0.942,103,1.229,104,0.811,105,1.229,106,0.811,107,1.229,108,0.811,109,1.229,110,0.811,111,1.229,112,0.811,113,1.443,114,0.811,115,1.229,116,0.811,117,1.229,118,0.938,119,0.938,120,1.878,121,0.938,122,1.843,123,1.741,124,0.938,125,0.938,126,0.938,127,0.938,128,1.741,129,1.741,130,1.355,131,0.938,132,0.938,133,0.011,134,0.011,338,0.7,742,3.066,743,3.066,744,3.066]],["title/classes/ConcreteOpenjourneyCommunicatorCreator.html",[43,0.058,112,0.978]],["body/classes/ConcreteOpenjourneyCommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,0.79,105,1.206,106,0.79,107,1.206,108,0.79,109,1.206,110,0.79,111,1.206,112,1.149,113,1.206,114,0.79,115,1.206,116,0.79,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,724,1.556,725,1.556,745,2.987]],["title/classes/ConcreteStableDiffusion1_5Communicator.html",[43,0.058,117,1.027]],["body/classes/ConcreteStableDiffusion1_5Communicator.html",[0,0.781,1,2.039,3,0.157,4,0.139,5,0.139,6,1.505,7,1.505,8,0.893,10,2.15,11,1.355,12,0.938,13,1.596,14,1.59,15,0.938,16,0.157,17,0.628,18,1.839,19,0.665,20,2.17,21,1.355,22,0.576,24,0.665,25,0.02,26,0.734,27,2.128,29,0.41,30,0.337,31,0.292,32,0.435,33,0.662,34,0.363,35,0.666,36,0.7,37,0.735,38,0.938,39,0.772,40,0.487,41,0.851,42,1.59,43,0.116,44,1.663,45,1.971,46,0.938,47,1.477,48,1.171,49,1.355,50,1.355,51,1.355,52,1.514,53,1.355,54,0.347,55,1.443,56,1.704,57,1.59,58,0.592,59,2.087,60,2.069,61,1.115,62,1.355,63,0.938,64,0.938,65,0.938,66,0.938,67,0.893,68,0.851,69,0.938,70,1.355,71,1.229,72,0.938,73,0.938,74,1.355,75,0.938,76,1.229,77,0.938,78,0.938,79,0.893,80,0.893,81,0.811,82,0.938,83,0.851,84,0.938,85,0.938,86,0.811,87,0.938,88,0.938,89,0.938,90,0.811,91,1.843,92,0.938,93,0.938,94,0.938,95,0.938,96,0.938,97,0.938,98,0.893,99,0.938,100,0.938,101,1.29,102,0.942,103,1.229,104,0.811,105,1.229,106,0.811,107,1.229,108,0.811,109,1.229,110,0.811,111,1.229,112,0.811,113,1.229,114,0.811,115,1.229,116,0.811,117,1.443,118,0.938,119,0.938,120,1.878,121,0.938,122,1.843,123,1.741,124,0.938,125,0.938,126,0.938,127,0.938,128,1.741,129,1.741,130,0.938,131,0.938,132,1.355,133,0.011,134,0.011,338,0.7,746,3.066,747,3.066,748,3.066]],["title/classes/ConcreteStableDiffusion1_5CommunicatorCreator.html",[43,0.058,116,0.978]],["body/classes/ConcreteStableDiffusion1_5CommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,0.79,105,1.206,106,0.79,107,1.206,108,0.79,109,1.206,110,0.79,111,1.206,112,0.79,113,1.206,114,0.79,115,1.206,116,1.149,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,724,1.556,725,1.556,749,2.987]],["title/classes/ConcreteStableDiffusionXLCommunicator.html",[43,0.058,115,1.027]],["body/classes/ConcreteStableDiffusionXLCommunicator.html",[0,0.781,1,2.039,3,0.157,4,0.139,5,0.139,6,1.505,7,1.505,8,0.893,10,2.15,11,1.355,12,0.938,13,1.596,14,1.59,15,0.938,16,0.157,17,0.628,18,1.839,19,0.665,20,2.17,21,1.355,22,0.576,24,0.665,25,0.02,26,0.734,27,2.128,29,0.41,30,0.337,31,0.292,32,0.435,33,0.662,34,0.363,35,0.666,36,0.7,37,0.735,38,0.938,39,0.772,40,0.487,41,0.851,42,1.59,43,0.116,44,1.663,45,1.971,46,0.938,47,1.477,48,1.171,49,1.355,50,1.355,51,1.355,52,1.514,53,1.355,54,0.347,55,1.443,56,1.704,57,1.59,58,0.592,59,2.087,60,2.069,61,1.115,62,1.355,63,0.938,64,0.938,65,0.938,66,0.938,67,0.893,68,0.851,69,0.938,70,1.355,71,1.229,72,0.938,73,0.938,74,1.355,75,0.938,76,1.229,77,0.938,78,0.938,79,0.893,80,0.893,81,0.811,82,0.938,83,0.851,84,0.938,85,0.938,86,0.811,87,0.938,88,0.938,89,0.938,90,0.811,91,1.843,92,0.938,93,0.938,94,0.938,95,0.938,96,0.938,97,0.938,98,0.893,99,0.938,100,0.938,101,1.29,102,0.942,103,1.229,104,0.811,105,1.229,106,0.811,107,1.229,108,0.811,109,1.229,110,0.811,111,1.229,112,0.811,113,1.229,114,0.811,115,1.443,116,0.811,117,1.229,118,0.938,119,0.938,120,1.878,121,0.938,122,1.843,123,1.741,124,0.938,125,0.938,126,0.938,127,0.938,128,1.741,129,1.741,130,0.938,131,1.355,132,0.938,133,0.011,134,0.011,338,0.7,750,3.066,751,3.066,752,3.066]],["title/classes/ConcreteStableDiffusionXLCommunicatorCreator.html",[43,0.058,114,0.978]],["body/classes/ConcreteStableDiffusionXLCommunicatorCreator.html",[0,0.77,1,2.033,3,0.153,4,0.136,5,0.136,6,0.79,7,0.79,8,0.87,10,2.178,11,1.329,12,0.914,13,1.58,14,1.72,15,0.914,16,0.153,18,1.777,19,0.653,20,2.16,21,1.329,22,0.567,24,0.77,25,0.02,26,0.733,27,2.116,29,0.4,30,0.39,31,0.307,32,0.424,33,0.658,34,0.357,35,0.649,36,0.682,37,0.717,38,0.914,39,0.752,40,0.475,41,0.829,42,1.567,43,0.116,44,1.743,45,2.016,46,0.914,47,1.474,48,1.149,49,1.567,50,1.567,51,1.567,52,1.492,53,1.329,54,0.345,55,1.421,56,1.778,57,1.72,58,0.4,59,2.091,60,2.14,61,1.094,62,1.329,63,0.914,64,1.329,65,1.329,66,1.329,67,1.266,68,1.206,69,1.329,70,1.72,71,1.561,72,1.329,73,1.329,74,1.567,75,1.329,76,1.421,77,1.329,78,1.329,79,1.266,80,0.87,81,0.79,82,0.914,83,0.829,84,0.914,85,0.914,86,0.79,87,0.914,88,0.914,89,0.914,90,0.79,91,1.865,92,0.914,93,0.914,94,0.914,95,0.914,96,0.914,97,0.914,98,0.87,99,0.914,100,0.914,101,1.266,102,0.936,103,1.206,104,0.79,105,1.206,106,0.79,107,1.206,108,0.79,109,1.206,110,0.79,111,1.206,112,0.79,113,1.206,114,1.149,115,1.206,116,0.79,117,1.206,118,0.914,119,0.914,120,1.83,121,0.914,122,1.83,123,1.72,124,0.914,125,0.914,126,0.914,127,0.914,128,1.72,129,1.72,130,0.914,131,0.914,132,0.914,133,0.011,134,0.011,722,2.368,724,1.556,725,1.556,753,2.987]],["title/components/ErrorMessageComponent.html",[138,0.655,311,1.248]],["body/components/ErrorMessageComponent.html",[3,0.237,4,0.21,5,0.21,25,0.019,30,0.445,33,0.696,34,0.322,43,0.073,54,0.237,133,0.014,134,0.014,138,1.135,139,1.558,140,2.073,141,1.911,142,2.018,143,1.813,144,1.813,146,1.412,150,1.911,151,3.137,152,2.976,153,1.722,155,2.555,157,2.421,198,1.107,217,1.558,244,1.722,245,2.702,246,2.804,248,2.403,251,2.134,252,3.744,253,2.403,254,4.321,255,1.813,258,2.181,260,2.261,266,2.134,268,2.403,284,2.555,299,1.722,300,2.421,301,2.421,302,1.911,303,2.792,304,1.911,305,1.911,306,1.558,307,1.911,308,1.483,309,1.483,310,2.421,311,2.275,312,2.164,313,2.421,314,1.483,315,1.911,316,1.558,317,1.558,318,1.558,319,1.911,320,1.558,321,1.911,322,1.558,323,1.911,324,1.483,325,1.345,326,1.345,327,1.558,328,1.911,329,1.558,330,1.813,331,1.911,332,1.911,347,2.134,349,2.261,351,2.134,352,2.403,353,2.261,424,3.534,754,3.963,755,3.534,756,5.507,757,5.018,758,5.843,759,5.843,760,5.843,761,5.843,762,5.843,763,5.843,764,3.534,765,3.534,766,3.963,767,3.963,768,4.614,769,3.963,770,4.614]],["title/components/HomeComponent.html",[138,0.655,314,1.188]],["body/components/HomeComponent.html",[3,0.18,4,0.159,5,0.159,9,2.793,16,0.18,17,0.691,22,0.539,25,0.019,26,0.469,30,0.426,31,0.25,33,0.539,34,0.244,43,0.055,54,0.18,80,1.76,81,1.287,83,1.351,133,0.012,134,0.012,138,0.99,139,1.183,140,1.727,141,2.016,142,1.532,143,1.377,144,1.377,146,1.072,150,1.451,151,3.024,152,2.869,153,2.369,155,2.128,157,2.016,171,1.711,198,0.84,217,1.643,244,2.452,245,2.793,246,3.172,248,2.534,250,2.084,251,3.038,252,2.702,253,2.534,254,3.119,255,1.377,257,3.146,258,1.816,259,4.179,260,1.717,263,2.793,264,3.177,265,2.702,266,2.25,267,2.96,268,3.509,270,2.44,271,2.44,273,3.009,274,3.009,276,3.009,277,2.683,284,2.642,289,1.62,295,3.389,296,1.824,299,1.308,300,2.016,301,2.016,302,1.451,303,2.503,304,1.451,305,1.451,306,1.183,307,1.451,308,1.126,309,1.126,310,2.016,311,1.183,312,1.021,313,2.016,314,1.941,315,1.451,316,1.183,317,1.183,318,1.183,319,1.451,320,1.183,321,1.451,322,1.183,323,1.451,324,1.126,325,1.021,326,1.021,327,1.183,328,1.451,329,1.183,330,1.377,331,1.451,332,1.451,340,3.389,341,4.627,347,3.038,348,3.105,349,2.385,351,2.25,352,1.824,572,3.389,579,1.824,632,3.873,669,4.282,671,3.727,673,2.084,674,2.246,675,2.895,677,2.44,685,1.946,771,3.009,772,5.591,773,4.866,774,4.282,775,4.866,776,2.683,777,2.44,778,3.503,779,4.866,780,3.727,781,4.866,782,6.041,783,4.179,784,4.866,785,5.452,786,6.041,787,3.503,788,3.503,789,3.009,790,3.503,791,6.347,792,6.347,793,4.421,794,4.282,795,2.895,796,4.179,797,3.503,798,6.347,799,4.179,800,4.866,801,3.503,802,4.866,803,3.009,804,3.503,805,3.009,806,3.009,807,3.503,808,3.009,809,3.503,810,3.503,811,2.246,812,2.246,813,3.503,814,4.866,815,3.503,816,3.503,817,4.802,818,4.802,819,4.866,820,3.503,821,3.503,822,3.503,823,4.179,824,3.503,825,3.503]],["title/components/LoadingMessageComponent.html",[138,0.655,316,1.248]],["body/components/LoadingMessageComponent.html",[3,0.218,4,0.193,5,0.193,16,0.218,17,0.785,22,0.613,25,0.019,26,0.534,30,0.469,31,0.284,33,0.692,34,0.296,43,0.067,54,0.218,133,0.014,134,0.014,138,1.091,139,1.431,140,1.964,141,1.756,142,1.854,143,1.666,144,1.666,146,1.297,150,1.756,151,3.104,152,2.945,153,2.529,155,2.42,157,2.292,171,1.885,198,1.017,217,1.431,244,2.593,245,1.961,246,2.694,250,2.522,251,2.849,255,1.666,257,2.208,258,1.583,263,2.559,264,2.559,265,2.355,266,1.961,267,3.019,268,2.882,284,2.42,293,3.885,299,1.583,300,2.292,301,2.292,302,1.756,303,2.705,304,1.756,305,1.756,306,1.431,307,1.756,308,1.362,309,1.362,310,2.292,311,1.431,312,1.236,313,2.292,314,1.362,315,1.756,316,2.204,317,2.49,318,1.431,319,1.756,320,1.431,321,1.756,322,1.431,323,1.756,324,1.362,325,1.236,326,1.236,327,1.431,328,1.756,329,1.431,330,1.666,331,1.756,332,1.756,347,3.02,349,2.078,351,1.961,352,2.208,353,2.712,421,4.718,579,2.882,755,3.247,756,5.291,757,4.753,769,3.642,777,2.953,795,3.292,826,5.291,827,5.291,828,5.534,829,3.642,830,2.953,831,3.642,832,3.642,833,5.534,834,5.534,835,5.608,836,3.247,837,3.642,838,4.753,839,3.247,840,3.642,841,3.642,842,4.24,843,3.642,844,3.854,845,3.642]],["title/components/MessageBoxComponent.html",[138,0.655,318,1.248]],["body/components/MessageBoxComponent.html",[3,0.169,4,0.149,5,0.149,16,0.169,17,0.66,19,0.699,22,0.772,24,0.812,25,0.019,26,0.566,29,0.623,30,0.448,31,0.347,32,0.66,33,0.697,34,0.433,43,0.052,54,0.169,58,0.44,67,0.958,102,0.66,133,0.012,134,0.012,138,0.956,139,1.109,140,1.651,141,1.361,142,1.437,143,1.291,144,1.291,146,1.005,149,2.107,150,1.361,151,2.995,152,2.841,153,1.227,155,2.035,157,1.927,169,2.768,171,1.005,175,2.362,180,2.238,187,2.289,197,2.647,198,0.788,199,1.056,206,1.61,217,1.571,244,1.737,245,1.52,246,2.035,251,1.52,252,3.262,253,2.423,255,1.291,257,2.813,258,1.737,260,2.28,263,2.498,264,2.977,267,1.61,268,1.711,277,3.563,281,2.584,284,2.569,289,1.52,295,2.289,296,3.581,299,1.227,300,1.927,301,1.927,302,1.361,303,2.433,304,1.361,305,1.361,306,1.109,307,1.361,308,1.056,309,1.056,310,1.927,311,1.109,312,0.958,313,1.927,314,1.056,315,1.361,316,1.109,317,1.109,318,1.983,319,1.361,320,1.109,321,1.361,322,1.109,323,1.361,324,1.056,325,1.356,326,0.958,327,1.109,328,1.361,329,1.109,330,1.291,331,1.361,332,1.361,338,0.75,347,2.498,348,1.825,349,2.647,351,2.977,352,2.423,353,3.038,399,5.401,408,2.822,416,2.822,488,3.059,495,4.499,522,2.289,529,3.762,531,2.107,537,1.825,538,1.291,557,4.52,579,1.711,607,2.813,616,3.765,666,2.289,673,4.091,674,3.462,678,2.517,685,2.584,687,3.24,718,2.517,765,4.499,774,4.137,776,2.517,785,4.639,793,2.289,795,1.955,803,2.822,811,2.107,812,2.107,823,2.822,846,2.822,847,5.401,848,4.652,849,5.401,850,5.401,851,4.137,852,4.652,853,5.874,854,3.996,855,5.401,856,3.286,857,5.874,858,4.652,859,4.652,860,3.286,861,3.762,862,3.286,863,4.652,864,3.286,865,3.286,866,3.286,867,5.401,868,3.563,869,4.652,870,3.286,871,4.652,872,3.286,873,3.286,874,2.584,875,3.286,876,3.286,877,3.286,878,4.652,879,3.286,880,2.822,881,3.286,882,3.286,883,3.286,884,2.289,885,5.874,886,3.286,887,3.286,888,4.652,889,3.286,890,3.286,891,3.286,892,3.286,893,3.286,894,3.286,895,3.286,896,3.286,897,3.286,898,3.286,899,3.286,900,3.286,901,4.652,902,3.996,903,3.286,904,3.286,905,3.286,906,3.286,907,3.286,908,3.286,909,2.822]],["title/components/MessageListComponent.html",[138,0.655,320,1.248]],["body/components/MessageListComponent.html",[3,0.117,4,0.103,5,0.103,16,0.181,17,0.502,19,0.531,22,0.779,24,0.881,25,0.019,26,0.585,29,0.71,30,0.462,31,0.356,32,0.753,33,0.686,34,0.409,40,0.843,43,0.036,47,0.694,54,0.117,58,0.581,102,0.616,133,0.009,134,0.009,138,0.768,139,0.767,140,1.254,141,0.941,142,0.993,143,1.389,144,0.892,146,0.695,149,1.456,150,0.941,151,2.798,152,2.682,153,2.097,155,1.545,157,1.464,167,3.035,169,2.581,171,0.695,175,1.897,180,2.327,184,3.035,185,4.205,187,1.582,197,2.753,198,0.848,199,0.73,206,1.113,217,1.979,221,1.95,222,3.138,244,2.609,245,2.264,246,2.984,248,2.259,250,1.351,251,2.453,252,3.659,253,2.925,254,3.138,255,0.892,256,1.739,257,2.925,258,2.377,260,2.972,263,2.597,264,2.453,265,1.963,266,2.264,267,2.753,268,1.84,281,1.963,283,3.41,284,2.564,293,3.788,296,2.259,299,0.848,300,1.464,301,1.464,302,0.941,303,2.028,304,0.941,305,0.941,306,0.767,307,0.941,308,0.73,309,0.73,310,1.464,311,0.767,312,0.662,313,1.464,314,0.73,315,0.941,316,0.767,317,0.767,318,0.767,319,0.941,320,1.653,321,0.941,322,0.767,323,0.941,324,0.73,325,1.264,326,0.662,327,0.767,328,0.941,329,0.767,330,0.892,331,0.941,332,0.941,338,0.991,347,2.999,348,3.119,349,3.121,350,2.461,351,2.88,352,2.925,353,3.228,355,1.582,378,1.582,379,1.456,397,5.42,480,1.897,487,2.581,488,2.55,489,3.022,523,1.963,529,3.694,531,2.265,536,1.183,537,1.261,538,0.892,539,1.183,553,2.32,554,1.261,557,4.537,558,1.261,561,1.545,563,1.351,573,1.739,576,1.739,579,2.259,581,3.257,634,2.599,662,2.925,666,2.461,675,3.342,683,1.739,684,1.739,685,1.963,686,2.707,687,1.582,764,2.707,765,3.323,766,1.95,767,1.95,777,1.582,793,1.582,794,1.739,795,2.581,796,1.95,806,1.95,811,2.265,812,2.265,817,1.95,827,3.726,829,1.95,830,1.582,831,1.95,832,1.95,835,5.35,836,4.302,837,3.035,838,3.035,839,1.739,840,1.95,841,3.035,843,1.95,844,2.461,845,1.95,851,4.302,861,2.461,868,1.739,874,1.963,884,1.582,910,1.95,911,4.338,912,3.534,913,4.338,914,4.338,915,4.338,916,4.338,917,4.338,918,3.035,919,3.534,920,4.895,921,4.895,922,4.895,923,3.534,924,3.726,925,3.726,926,2.271,927,4.895,928,2.271,929,3.534,930,3.342,931,2.271,932,2.271,933,2.271,934,2.271,935,2.271,936,3.035,937,2.271,938,3.534,939,2.271,940,2.271,941,2.271,942,2.271,943,2.271,944,3.534,945,4.824,946,2.271,947,3.534,948,2.271,949,2.271,950,2.271,951,2.271,952,3.534,953,3.534,954,2.271,955,2.271,956,2.271,957,2.271,958,2.271,959,1.95,960,1.95,961,2.271,962,4.824,963,2.271,964,3.534,965,2.271,966,2.271,967,2.271,968,2.271,969,4.338,970,1.963,971,2.271,972,2.271,973,2.271,974,2.271,975,2.271,976,2.271,977,2.271,978,2.271,979,2.271,980,2.271,981,3.534,982,2.271,983,3.534,984,3.534,985,3.534,986,3.726,987,3.534,988,2.271,989,2.271,990,3.534,991,2.271,992,3.534,993,1.95,994,1.95,995,3.534,996,2.271,997,1.456,998,2.271,999,1.95,1000,2.271,1001,1.95,1002,2.271,1003,2.271,1004,2.271,1005,2.271,1006,2.271,1007,3.726,1008,2.271,1009,2.271,1010,2.271,1011,2.271,1012,2.271,1013,2.271,1014,2.271,1015,5.304,1016,2.271,1017,2.271,1018,2.271,1019,1.739]],["title/components/MessageSuggestionsComponent.html",[138,0.655,322,1.248]],["body/components/MessageSuggestionsComponent.html",[3,0.206,4,0.182,5,0.182,16,0.206,19,0.802,22,0.758,24,0.802,25,0.019,26,0.673,29,0.714,30,0.487,31,0.342,32,0.757,33,0.699,34,0.418,43,0.063,54,0.206,58,0.536,102,0.569,120,1.481,133,0.013,134,0.013,138,1.061,139,1.353,140,1.893,141,1.661,143,1.576,144,1.576,146,1.227,149,3.842,150,1.661,151,3.082,152,2.924,153,1.496,157,2.209,168,5.487,169,3.173,171,1.227,180,2.209,197,3.131,198,0.962,206,1.965,217,1.353,244,2.553,255,1.576,258,1.991,299,1.496,300,2.209,301,2.209,302,1.661,303,2.647,304,1.661,305,1.661,306,1.353,307,1.661,308,1.288,309,1.714,310,2.209,311,1.353,312,1.168,313,2.209,314,1.288,315,1.661,316,1.353,317,1.353,318,1.353,319,1.661,320,1.353,321,1.661,322,2.157,323,1.661,324,1.288,325,1.554,326,1.554,327,1.353,328,1.661,329,1.353,330,1.576,331,1.661,332,1.661,338,0.916,392,3.071,449,4.862,480,1.753,489,4.174,498,4.893,499,3.801,523,3.548,525,4.45,529,4.764,555,3.071,557,4.475,561,1.753,577,2.792,581,2.227,582,2.57,607,2.778,662,2.088,861,3.715,874,2.962,924,5.147,925,5.147,930,3.173,959,3.443,1020,3.443,1021,5.333,1022,5.333,1023,5.333,1024,5.333,1025,4.009,1026,5.333,1027,4.009,1028,4.009,1029,4.009,1030,5.333,1031,4.009,1032,4.009,1033,5.147,1034,4.009,1035,4.009,1036,4.009,1037,3.443,1038,4.009,1039,4.009,1040,4.009,1041,3.443,1042,3.071,1043,4.009,1044,4.009]],["title/interfaces/Model.html",[0,0.556,146,1.132]],["body/interfaces/Model.html",[0,0.972,2,2.834,3,0.279,4,0.247,5,0.247,9,3.3,16,0.279,17,0.918,25,0.019,26,0.745,30,0.544,31,0.374,54,0.332,133,0.016,134,0.016,146,2.184,192,3.367,202,3.791,282,4.971,1045,4.168,1046,6.13,1047,6.13]],["title/injectables/ModelDetailsService.html",[173,2.576,694,1.188]],["body/injectables/ModelDetailsService.html",[3,0.278,4,0.246,5,0.246,16,0.278,19,0.969,22,0.714,24,0.814,25,0.019,29,0.725,30,0.413,31,0.278,32,0.769,34,0.48,43,0.086,47,1.064,54,0.278,59,1.911,133,0.016,134,0.016,171,1.658,173,4.491,175,3.011,195,4.569,196,3.223,198,1.3,199,1.741,200,5.274,206,2.655,334,3.009,694,2.072,695,2.655,1048,4.653,1049,7.126,1050,5.418,1051,5.418,1052,6.449,1053,5.418,1054,3.223,1055,5.418,1056,5.418]],["title/interfaces/Models.html",[0,0.556,192,1.926]],["body/interfaces/Models.html",[0,0.997,2,2.959,3,0.292,4,0.258,5,0.258,9,2.628,16,0.292,17,0.941,25,0.019,26,0.711,30,0.433,31,0.292,54,0.341,133,0.016,134,0.016,146,2.256,192,3.887,202,3.958,282,3.958,1045,4.352,1046,4.88,1047,4.88]],["title/injectables/NavigationService.html",[694,1.188,1057,2.371]],["body/injectables/NavigationService.html",[3,0.267,4,0.236,5,0.236,9,2.401,16,0.267,17,0.892,19,0.945,22,0.778,24,0.945,25,0.019,34,0.439,43,0.082,47,1.02,54,0.267,58,0.695,102,0.892,133,0.016,134,0.016,138,1.113,171,2.069,175,2.956,180,2.151,198,1.245,199,1.668,334,2.883,338,1.186,480,2.956,582,4.03,694,2.02,695,2.544,884,4.378,1054,3.089,1057,4.03,1058,4.459,1059,6.286,1060,6.286,1061,5.399,1062,6.286,1063,5.399,1064,6.281,1065,7.026,1066,7.026,1067,6.286,1068,5.192,1069,5.192,1070,5.192,1071,5.192,1072,5.192]],["title/components/PictureGenContainerComponent.html",[138,0.655,324,1.188]],["body/components/PictureGenContainerComponent.html",[3,0.107,4,0.151,5,0.095,6,0.553,7,0.877,13,1.088,16,0.107,17,0.47,19,0.498,22,0.778,24,0.855,25,0.019,26,0.647,29,0.726,30,0.492,31,0.351,32,0.837,33,0.704,34,0.457,35,0.455,36,0.478,39,0.527,40,0.937,43,0.033,44,0.877,47,0.651,48,0.877,54,0.107,56,1.367,58,0.726,68,0.92,81,0.553,102,0.807,112,1.088,114,1.088,116,1.088,133,0.008,134,0.008,138,1.16,139,0.707,140,1.176,141,1.939,142,0.915,143,0.823,144,0.823,146,2.004,150,0.867,151,2.748,152,2.607,153,2.122,154,3.585,155,1.45,157,1.373,163,3.26,170,3.585,171,0.64,175,2.823,180,2.113,192,1.726,198,0.502,199,0.672,206,1.026,209,1.603,210,1.245,213,1.342,214,2.539,216,1.603,217,0.707,222,3.892,223,1.458,233,1.603,234,1.603,244,2.445,245,1.533,246,2.775,248,2.143,250,1.245,251,0.968,255,2.005,258,1.237,263,1.903,264,0.968,265,1.162,266,1.533,267,1.026,281,1.162,284,1.45,289,1.533,296,2.438,299,0.781,300,1.373,301,1.373,302,0.867,303,1.939,304,0.867,305,0.867,306,0.707,307,0.867,308,0.672,309,1.827,310,1.373,311,0.707,312,0.61,313,1.373,314,0.672,315,0.867,316,0.707,317,1.119,318,0.707,319,0.867,320,0.707,321,0.867,322,0.707,323,0.867,324,1.504,325,1.718,326,2.204,327,0.707,328,0.867,329,0.707,330,1.303,331,0.867,332,0.867,338,1.298,347,1.533,348,2.6,349,1.624,350,2.867,351,0.968,352,1.09,353,2.017,402,4.92,429,1.09,441,1.972,442,1.245,477,1.603,478,3.535,479,2.847,480,2.901,481,3.892,484,3.535,486,3.535,487,2.448,488,2.438,489,2.867,490,4.355,492,2.847,493,4.02,494,2.847,495,2.539,496,4.02,498,3.152,499,2.785,500,3.78,501,2.847,504,2.847,506,1.798,507,2.847,509,2.847,510,1.798,512,1.798,513,1.798,514,1.798,517,1.798,518,1.798,521,1.798,522,2.309,523,3.372,524,2.847,525,3.553,527,1.798,533,1.798,534,1.245,535,1.162,536,1.09,537,1.162,538,1.303,539,1.09,541,1.342,544,1.458,545,1.245,546,1.458,548,1.458,549,1.458,550,1.458,551,1.458,553,2.047,554,1.162,555,1.603,558,2.286,559,1.798,560,2.309,561,1.45,562,1.798,563,3.035,565,2.847,566,1.603,567,1.245,568,1.798,569,2.847,570,1.603,571,3.585,572,1.458,573,3.152,574,1.798,575,1.798,576,2.539,577,1.458,578,1.798,579,1.09,580,1.798,581,3.014,582,1.342,583,2.847,584,1.798,585,1.798,586,1.798,587,1.798,588,1.798,589,1.798,590,1.798,591,1.798,592,1.798,593,2.847,594,2.847,595,1.798,596,2.539,598,1.798,599,1.798,600,1.798,601,2.847,602,1.798,603,2.847,604,2.539,605,1.798,607,2.143,608,1.798,609,1.798,610,1.798,611,1.798,612,2.847,613,1.798,614,2.539,615,1.342,616,1.342,617,1.798,618,1.798,619,1.798,620,1.798,621,1.798,622,1.603,623,1.798,624,1.798,625,1.342,627,1.798,628,1.245,629,1.798,631,1.798,632,1.342,633,1.603,634,1.026,635,1.798,636,1.798,637,1.798,638,1.798,639,2.847,640,1.798,641,1.798,642,2.539,644,1.798,645,2.847,646,1.798,647,1.342,648,1.798,649,1.798,650,1.798,651,3.535,653,3.535,655,3.535,660,1.798,661,1.245,662,1.09,663,1.798,665,1.798,666,2.867,667,2.539,668,1.798,669,2.539,670,1.798,671,1.603,672,1.798,673,1.245,674,1.342,675,3.035,676,2.847,677,3.26,678,2.539,679,2.847,680,2.847,681,4.02,682,2.847,683,1.603,684,1.603,685,1.162,686,2.539,687,1.458,688,1.798,689,2.847,690,1.798,691,2.847,692,1.798,693,1.798,780,1.603,918,2.847,936,2.847,1073,6.066,1074,4.116,1075,4.116,1076,4.116,1077,3.315,1078,2.093,1079,3.479,1080,3.315,1081,2.093,1082,2.093,1083,2.093,1084,2.093,1085,2.093,1086,2.847,1087,2.093,1088,2.093,1089,2.093,1090,2.093,1091,2.847,1092,3.315,1093,2.093,1094,1.458,1095,2.539,1096,1.458,1097,2.125,1098,1.603,1099,2.093,1100,2.093,1101,2.093,1102,1.798,1103,2.093,1104,2.093,1105,2.093,1106,2.093,1107,1.603,1108,2.093,1109,2.093,1110,2.093,1111,2.093,1112,2.093,1113,2.093]],["title/injectables/PictureGenEffects.html",[447,2.576,694,1.188]],["body/injectables/PictureGenEffects.html",[3,0.242,4,0.214,5,0.214,16,0.242,17,0.841,22,0.656,25,0.019,29,0.631,30,0.359,31,0.242,32,0.669,33,0.625,34,0.512,39,1.188,43,0.074,54,0.242,58,0.631,133,0.015,134,0.015,171,1.813,198,1.131,199,1.516,312,2.082,325,1.727,326,1.375,338,1.077,429,2.456,441,3.853,442,2.806,444,3.285,447,4.126,480,2.833,500,4.648,538,2.546,543,4.152,545,2.806,553,3.061,554,2.62,634,2.903,694,1.904,695,2.312,697,5.563,698,4.051,699,6.136,701,5.563,702,5.088,703,5.088,704,5.088,706,5.088,707,5.088,708,5.088,710,4.051,712,3.285,714,4.051,715,3.285,716,3.285,1079,4.648,1094,3.285,1097,4.152,1098,3.613,1114,4.051,1115,4.717,1116,5.924,1117,4.717]],["title/interfaces/PictureMessage.html",[0,0.556,553,1.617]],["body/interfaces/PictureMessage.html",[0,0.853,2,2.955,3,0.291,4,0.258,5,0.258,16,0.291,17,0.941,25,0.019,31,0.383,34,0.396,54,0.291,133,0.016,134,0.016,325,2.147,378,3.951,379,3.637,553,2.898,554,3.151,661,4.303,930,4.176,945,4.873,1118,4.345]],["title/injectables/PictureMessageService.html",[694,1.188,1079,2.371]],["body/injectables/PictureMessageService.html",[3,0.212,4,0.188,5,0.188,16,0.212,17,0.772,18,1.608,19,0.817,22,0.8,24,1.037,25,0.019,26,0.703,29,0.899,30,0.512,31,0.366,32,1.013,33,0.586,34,0.469,43,0.065,47,1.27,54,0.212,58,0.552,86,1.709,91,1.51,122,1.688,133,0.013,134,0.013,171,1.263,175,2.659,180,1.71,195,4.421,196,2.456,197,2.023,198,0.99,199,1.327,210,3.235,217,1.394,289,1.909,312,1.585,325,1.772,334,2.293,338,0.943,480,2.937,481,3.486,553,2.659,561,1.805,563,2.456,607,2.15,615,2.647,625,2.647,634,2.665,661,2.456,694,1.747,695,2.023,715,2.875,716,2.875,722,3.189,874,2.293,970,2.293,997,2.647,1054,2.456,1079,3.486,1094,4.501,1119,3.162,1120,4.628,1121,3.787,1122,4.165,1123,4.95,1124,4.657,1125,4.67,1126,4.657,1127,4.165,1128,3.162,1129,5.438,1130,4.165,1131,4.128,1132,4.128,1133,4.165,1134,4.128,1135,4.67,1136,4.128,1137,4.67,1138,3.546,1139,3.162,1140,3.162,1141,4.165,1142,3.546,1143,3.162,1144,3.546,1145,4.128,1146,3.546,1147,3.546,1148,4.165,1149,4.128,1150,3.162,1151,3.546,1152,3.546,1153,4.128,1154,4.128,1155,4.128,1156,5.438,1157,4.67,1158,3.546,1159,3.546,1160,4.128,1161,3.546,1162,3.546,1163,3.546,1164,3.546]],["title/injectables/ResourceService.html",[694,1.188,1120,2.371]],["body/injectables/ResourceService.html",[3,0.228,4,0.202,5,0.202,16,0.228,17,0.81,19,0.857,22,0.793,24,1.033,25,0.019,26,0.663,29,0.889,30,0.507,31,0.361,32,0.944,33,0.607,34,0.491,35,0.966,40,0.706,41,1.234,43,0.07,47,1.306,54,0.228,55,1.845,58,0.595,86,1.175,102,0.631,133,0.014,134,0.014,171,1.36,175,2.755,195,4.51,196,2.644,198,1.066,199,1.428,210,3.394,217,1.5,266,2.055,312,1.662,334,2.468,338,1.015,432,3.817,480,2.755,481,4.039,522,3.095,615,2.849,628,2.644,634,2.178,694,1.833,695,2.178,715,3.095,716,3.095,718,3.403,997,2.849,1054,2.644,1120,3.657,1121,4.388,1122,4.369,1123,5.091,1124,4.369,1126,5.091,1127,4.369,1128,3.403,1130,4.369,1133,4.369,1139,5.091,1140,4.369,1141,5.091,1143,4.369,1150,3.403,1157,4.899,1158,3.817,1159,3.817,1161,3.817,1162,3.817,1163,3.817,1164,3.817,1165,3.817,1166,5.704,1167,4.444,1168,5.704,1169,4.444,1170,4.444,1171,4.444,1172,4.444,1173,4.444,1174,4.444,1175,3.817,1176,4.444,1177,4.444,1178,4.444,1179,4.444,1180,4.444,1181,4.444,1182,4.444,1183,4.444,1184,4.444]],["title/components/SidenavComponent.html",[138,0.655,327,1.248]],["body/components/SidenavComponent.html",[3,0.142,4,0.126,5,0.187,16,0.142,17,0.583,19,0.618,22,0.784,24,0.87,25,0.019,26,0.523,29,0.371,30,0.373,31,0.312,32,0.393,33,0.472,34,0.404,43,0.044,54,0.142,58,0.775,61,0.698,133,0.01,134,0.01,138,0.868,139,0.935,140,1.458,141,1.147,142,1.211,143,1.088,144,1.088,146,0.847,149,1.775,150,1.147,151,2.909,152,2.76,153,1.034,155,1.797,157,1.702,171,0.847,180,2.399,198,0.986,199,0.89,206,1.357,217,2.178,244,1.829,245,1.281,246,2.932,248,1.442,251,2.983,252,3.216,253,2.552,254,3.141,255,2.384,256,4.647,257,3.543,258,2.162,260,2.657,261,4.208,263,2.806,264,2.983,265,2.282,266,1.9,267,2.973,268,3.432,269,2.378,270,1.929,271,1.929,282,4.59,283,2.862,284,2.882,292,3.529,293,3.609,294,2.378,295,1.929,296,1.442,299,1.034,300,1.702,301,1.702,302,1.147,303,2.246,304,1.147,305,1.147,306,0.935,307,1.147,308,0.89,309,0.89,310,1.702,311,0.935,312,0.807,313,1.702,314,0.89,315,1.147,316,0.935,317,0.935,318,0.935,319,1.147,320,0.935,321,1.147,322,0.935,323,1.147,324,0.89,325,0.807,326,0.807,327,1.83,328,1.147,329,0.935,330,1.088,331,1.147,332,1.147,338,1.323,340,2.862,341,3.147,347,2.678,348,2.721,349,2.401,351,1.281,353,2.838,354,3.147,355,2.862,356,3.147,385,2.378,386,2.378,490,3.753,530,2.378,531,1.775,579,2.823,581,1.538,616,3.141,642,3.147,662,3.16,675,3.225,685,1.538,774,3.753,776,2.121,777,1.929,789,2.378,793,2.862,794,3.147,795,3.225,799,3.529,811,2.634,812,2.634,818,2.378,830,1.929,836,3.147,839,3.753,844,3.776,868,2.121,909,2.378,970,2.282,986,4.656,997,1.775,1007,3.529,1019,4.811,1057,3.889,1061,6.032,1063,4.656,1091,3.529,1185,2.121,1186,6.067,1187,4.9,1188,4.109,1189,4.9,1190,4.9,1191,4.9,1192,4.9,1193,4.9,1194,4.9,1195,4.9,1196,4.9,1197,4.9,1198,5.421,1199,4.9,1200,4.9,1201,4.109,1202,4.9,1203,2.378,1204,4.109,1205,2.769,1206,4.109,1207,2.769,1208,2.769,1209,4.109,1210,2.769,1211,2.769,1212,2.769,1213,2.769,1214,2.769,1215,2.769,1216,2.769,1217,4.656,1218,2.769,1219,2.769,1220,2.769,1221,2.769,1222,2.769,1223,3.147,1224,2.378,1225,2.769,1226,2.769,1227,2.769,1228,2.769,1229,2.769,1230,2.769,1231,2.769,1232,2.769,1233,2.769,1234,2.769,1235,2.769,1236,5.421,1237,2.769,1238,2.769,1239,4.109,1240,2.769,1241,3.147,1242,7.386,1243,4.109,1244,2.769,1245,2.769,1246,2.769,1247,2.378,1248,5.421,1249,2.769,1250,2.769,1251,2.378,1252,2.769,1253,2.769,1254,2.769,1255,2.769,1256,2.769]],["title/interfaces/State.html",[0,0.556,538,1.453]],["body/interfaces/State.html",[0,0.673,2,2.331,3,0.23,4,0.204,5,0.204,16,0.23,17,0.814,25,0.019,26,0.61,30,0.437,31,0.342,33,0.432,34,0.481,36,1.022,40,1.153,54,0.354,61,1.776,102,0.635,133,0.014,134,0.014,204,2.87,309,1.842,317,1.511,429,2.331,435,3.118,436,3.992,442,3.41,487,4.263,488,3.895,523,2.486,534,3.761,535,3.702,536,3.589,537,2.486,538,2.985,539,2.331,548,3.118,549,3.118,550,3.118,551,3.118,558,2.486,561,1.958,567,2.663,632,2.87,647,4.652,652,3.429,662,2.331,713,3.845,930,3.761,970,2.486,1257,3.429,1258,5.399,1259,4.39,1260,4.477,1261,4.39,1262,4.477,1263,4.477,1264,3.992,1265,3.429,1266,3.429,1267,3.429,1268,3.845,1269,3.845,1270,4.39,1271,3.845,1272,3.845,1273,3.845,1274,4.477,1275,4.477]],["title/interfaces/State-1.html",[0,0.464,538,1.213,902,2.651]],["body/interfaces/State-1.html",[0,0.662,2,2.294,3,0.226,4,0.2,5,0.2,16,0.226,17,0.805,25,0.019,26,0.605,30,0.432,31,0.34,33,0.547,34,0.49,36,1.006,40,1.116,54,0.352,61,1.768,102,0.625,133,0.014,134,0.014,317,1.487,325,1.284,326,1.284,342,4.345,429,2.294,438,3.951,439,3.069,441,2.621,442,3.375,487,4.248,488,3.886,523,2.447,534,3.375,535,3.68,536,3.571,537,2.447,538,2.979,539,2.294,548,3.069,549,3.069,550,3.069,551,3.069,553,3.069,554,2.447,558,2.447,561,1.927,567,2.621,632,2.824,647,4.637,662,2.294,930,3.733,970,2.447,1096,3.069,1097,2.824,1098,3.374,1107,3.374,1258,5.376,1259,4.345,1261,4.345,1264,3.951,1265,3.374,1266,3.374,1267,3.374,1270,4.345,1276,3.374,1277,4.406,1278,3.784,1279,3.784,1280,3.784,1281,3.784,1282,3.784,1283,4.406,1284,4.406]],["title/injectables/SuggestionsService.html",[499,2.2,694,1.188]],["body/injectables/SuggestionsService.html",[3,0.208,4,0.184,5,0.184,9,1.871,16,0.208,17,0.762,19,0.806,22,0.76,24,0.608,25,0.019,26,0.661,29,0.541,30,0.308,31,0.208,32,0.574,33,0.517,34,0.42,36,0.924,43,0.064,54,0.208,58,0.858,59,1.903,71,1.123,83,1.78,102,0.91,133,0.013,134,0.013,138,1.135,140,2.275,144,2.109,169,3.192,171,1.842,180,1.676,197,2.629,198,0.97,199,1.3,213,3.439,217,1.811,244,2.828,309,2.144,325,1.944,326,1.944,334,2.247,338,1.464,480,2.998,499,3.192,515,3.474,525,4.193,541,2.593,560,3.737,561,2.804,563,3.192,581,2.98,582,4.654,604,4.109,607,3.135,614,4.109,616,4.277,694,1.724,695,1.982,874,2.98,884,3.737,999,4.608,1033,5.889,1037,4.608,1041,4.608,1042,4.109,1054,2.406,1064,5.73,1086,3.474,1148,3.098,1285,3.474,1286,5.506,1287,5.365,1288,5.365,1289,5.365,1290,5.365,1291,5.365,1292,5.365,1293,4.608,1294,6.411,1295,5.365,1296,5.365,1297,5.365,1298,6.02,1299,6.02,1300,6.02,1301,6.02,1302,4.045,1303,5.365,1304,6.671,1305,4.045,1306,5.365,1307,4.045,1308,5.365,1309,4.045,1310,4.045,1311,4.045,1312,5.365,1313,4.045,1314,4.045,1315,4.045,1316,4.045,1317,4.045]],["title/interfaces/TextMessage.html",[0,0.556,40,0.588]],["body/interfaces/TextMessage.html",[0,0.857,2,2.969,3,0.293,4,0.259,5,0.259,16,0.293,17,0.943,25,0.019,26,0.678,31,0.384,40,1.056,54,0.293,133,0.016,134,0.016,289,3.412,539,2.969,661,4.31,930,4.184,1118,4.366]],["title/injectables/TextMessageService.html",[37,0.887,694,1.188]],["body/injectables/TextMessageService.html",[3,0.218,4,0.193,5,0.193,16,0.218,17,0.787,18,1.631,19,0.833,22,0.804,24,1.045,25,0.019,26,0.7,29,0.907,30,0.517,31,0.369,32,1.005,33,0.534,34,0.485,35,0.924,36,0.971,37,1.329,40,0.98,41,1.18,43,0.067,47,1.212,54,0.218,58,0.569,86,1.466,91,1.539,122,1.712,133,0.014,134,0.014,171,1.3,175,2.424,180,1.761,187,2.96,195,4.456,196,2.528,197,2.083,198,1.019,199,1.366,210,2.528,217,1.435,289,3.022,312,1.615,334,2.36,338,0.971,480,2.964,481,3.553,540,4.552,561,1.859,563,2.528,607,2.213,615,2.724,628,2.528,634,2.083,661,2.528,694,1.781,695,2.083,722,3.215,874,2.36,970,2.36,997,2.724,1054,2.528,1119,3.255,1120,4.653,1121,3.86,1122,4.245,1123,5.006,1124,4.245,1125,4.76,1126,4.724,1127,4.245,1128,3.255,1130,4.245,1133,3.255,1135,4.76,1137,4.76,1138,3.65,1139,3.255,1140,3.255,1141,4.245,1142,3.65,1143,3.255,1144,3.65,1146,3.65,1147,3.65,1148,3.255,1150,3.255,1151,3.65,1152,3.65,1175,3.65,1318,5.542,1319,4.25,1320,4.25,1321,4.25,1322,4.25,1323,4.25,1324,4.25,1325,4.25,1326,4.25]],["title/components/TitleTopBarComponent.html",[138,0.655,329,1.248]],["body/components/TitleTopBarComponent.html",[3,0.185,4,0.164,5,0.164,16,0.185,19,0.746,22,0.752,24,0.746,25,0.019,26,0.655,29,0.665,30,0.466,31,0.34,32,0.705,33,0.548,34,0.396,43,0.057,54,0.185,58,0.483,102,0.512,133,0.012,134,0.012,138,1.006,139,1.218,140,1.762,141,1.495,142,1.578,143,1.418,144,1.418,146,2.078,150,1.495,151,3.037,152,2.881,153,1.347,155,2.172,157,2.057,163,3.955,164,4.877,169,2.955,171,1.104,175,2.483,180,2.057,197,2.998,198,0.866,199,1.159,206,1.768,217,1.676,223,3.459,244,1.347,245,1.669,246,1.578,251,2.297,252,2.758,253,2.586,255,2.881,257,2.586,258,2.83,260,1.768,263,2.297,264,1.669,266,1.669,267,2.434,268,3.186,270,2.513,271,2.513,281,2.004,289,1.669,293,3.378,296,1.879,299,1.347,300,2.057,301,2.057,302,1.495,303,2.534,304,1.495,305,1.495,306,1.218,307,1.495,308,1.159,309,1.159,310,2.057,311,1.218,312,1.052,313,2.057,314,1.159,315,1.495,316,1.218,317,1.218,318,1.218,319,1.495,320,1.218,321,1.495,322,1.218,323,1.495,324,1.159,325,1.052,326,1.052,327,1.218,328,1.495,329,2.065,330,2.232,331,1.495,332,1.495,338,0.824,347,2.297,351,1.669,353,2.783,354,2.764,355,2.513,356,2.764,418,5.3,571,2.764,577,2.513,579,1.879,667,2.764,673,2.147,674,2.313,677,3.459,764,2.764,795,3.378,805,3.099,808,3.099,811,2.313,812,2.313,844,2.513,854,4.265,861,3.955,874,3.154,993,3.099,994,3.099,1019,2.764,1057,4.25,1203,3.099,1247,3.099,1251,3.099,1327,5.943,1328,3.099,1329,5.679,1330,4.966,1331,4.966,1332,6.118,1333,5.679,1334,4.966,1335,3.608,1336,3.608,1337,3.608,1338,4.966,1339,3.608,1340,3.608,1341,3.608,1342,3.608,1343,3.608,1344,6.118,1345,4.966,1346,4.966,1347,6.118,1348,3.608,1349,4.966,1350,6.118,1351,4.966,1352,3.608,1353,3.608,1354,3.608,1355,3.608,1356,3.608,1357,4.966,1358,3.608]],["title/coverage.html",[1359,4.338]],["body/coverage.html",[0,0.974,1,0.85,5,0.139,6,1.934,7,1.934,8,2.131,25,0.019,31,0.157,35,0.961,37,0.735,40,0.487,43,0.115,56,0.772,90,0.81,102,0.435,103,0.85,104,0.81,105,0.85,106,0.81,107,0.85,108,0.81,109,0.85,110,0.81,111,0.85,112,0.81,113,0.85,114,0.81,115,0.85,116,0.81,117,0.85,133,0.011,134,0.011,138,1.244,139,1.034,145,2.631,146,1.846,147,2.346,148,2.631,173,2.133,192,1.595,200,2.346,202,3.082,204,2.836,258,1.651,306,1.034,308,0.984,311,1.034,314,0.984,316,1.034,318,1.034,320,1.034,322,1.034,324,0.984,326,1.971,327,1.034,329,1.034,333,2.631,394,2.133,397,2.346,399,2.346,402,2.133,418,2.346,421,2.346,424,2.346,435,2.133,436,2.133,438,2.133,439,2.133,441,4.219,445,2.133,447,2.133,449,2.133,458,5.807,476,2.631,477,3.389,499,1.822,535,2.457,536,2.304,538,1.739,539,1.595,540,2.133,541,2.836,542,3.389,543,2.836,544,3.082,545,2.632,546,3.082,553,1.339,554,1.701,557,3.33,596,5.833,675,4.622,694,2.132,696,2.631,712,3.082,754,2.631,755,3.389,771,2.631,826,2.631,846,2.631,910,2.631,1020,2.631,1045,3.389,1048,2.631,1057,1.964,1058,2.631,1073,2.631,1079,1.964,1094,2.133,1095,3.389,1096,3.082,1097,4.546,1114,2.631,1118,3.389,1119,3.389,1120,1.964,1165,2.631,1185,3.389,1223,2.346,1257,4.965,1264,3.082,1276,4.965,1285,2.631,1327,2.631,1328,2.631,1359,2.631,1360,3.063,1361,3.063,1362,3.063,1363,6.287,1364,4.424,1365,4.424,1366,6.762,1367,6.762,1368,3.063,1369,3.063,1370,3.063,1371,3.063,1372,4.424,1373,4.424,1374,3.063,1375,3.063,1376,3.063,1377,7.625,1378,3.063,1379,3.063,1380,3.063,1381,3.8,1382,3.063,1383,3.063,1384,3.063,1385,5.182,1386,4.424,1387,5.182,1388,5.4,1389,5.4,1390,3.063,1391,3.063]],["title/dependencies.html",[360,3.099,1392,2.651]],["body/dependencies.html",[25,0.019,133,0.016,134,0.016,198,1.336,199,1.789,360,3.878,378,4.565,379,4.202,392,4.265,405,4.782,429,3.413,431,4.782,444,3.878,473,4.782,1393,5.568,1394,7.557,1395,5.568,1396,6.554,1397,5.568,1398,5.568,1399,5.568,1400,6.965,1401,5.568,1402,5.568,1403,5.568,1404,5.568,1405,5.568]],["title/index.html",[16,0.159,1102,2.651,1406,3.087]],["body/index.html",[4,0.204,13,1.188,25,0.017,29,0.769,31,0.325,33,0.665,40,0.714,43,0.091,44,1.824,45,1.309,55,1.595,71,1.247,76,1.247,98,1.309,102,0.815,133,0.014,134,0.014,138,0.796,140,2.039,143,1.766,146,1.938,153,1.677,192,2.34,197,2.202,199,1.846,213,3.683,244,2.364,255,1.766,260,2.202,278,3.859,281,2.496,289,2.657,309,2.217,312,1.309,317,1.517,325,1.309,330,1.766,344,3.859,346,3.859,433,4.934,500,2.881,531,2.881,538,1.766,553,1.965,558,2.496,560,3.13,561,2.77,567,2.673,572,3.13,581,3.517,607,2.34,622,3.442,625,3.683,628,3.971,673,2.673,780,3.442,783,4.934,880,3.859,960,3.859,962,3.859,1001,4.934,1042,5.113,1241,3.442,1286,3.859,1293,3.859,1407,4.493,1408,4.493,1409,5.745,1410,5.745,1411,4.934,1412,3.859,1413,6.333,1414,4.493,1415,4.493,1416,6.333,1417,3.859,1418,3.859,1419,4.493,1420,4.493,1421,4.493,1422,4.493,1423,4.493,1424,4.493,1425,4.493,1426,4.493,1427,4.493,1428,4.493,1429,4.493,1430,4.493,1431,4.493,1432,4.493,1433,4.493,1434,4.493,1435,4.493,1436,5.745,1437,5.745,1438,4.493,1439,4.493,1440,4.493,1441,4.493,1442,6.333,1443,4.493,1444,4.493,1445,4.493,1446,5.745,1447,4.493,1448,4.493,1449,6.898,1450,4.493,1451,4.493,1452,4.493,1453,4.493,1454,4.493,1455,4.493,1456,4.493,1457,5.745,1458,4.493,1459,4.493,1460,4.493,1461,4.493,1462,4.493,1463,4.493,1464,4.493,1465,5.745,1466,5.745,1467,4.493,1468,5.745,1469,4.493,1470,4.493,1471,5.745,1472,4.493,1473,5.745,1474,4.493,1475,4.493,1476,5.745,1477,4.493,1478,4.493,1479,4.493,1480,4.493,1481,4.493,1482,4.493,1483,4.493,1484,4.493,1485,4.493,1486,4.493]],["title/modules.html",[359,3.238]],["body/modules.html",[25,0.017,133,0.017,134,0.017,358,4.154,359,3.823,369,3.823,379,3.823,570,4.568,1487,5.964,1488,5.964,1489,6.82,1490,5.964]],["title/overview.html",[1491,4.338]],["body/overview.html",[2,2.65,25,0.019,101,1.483,133,0.015,134,0.015,139,2.262,140,1.806,299,1.9,306,2.488,308,2.153,311,2.262,314,2.153,316,2.262,318,2.262,320,2.262,322,2.262,324,2.153,327,2.262,329,2.262,357,3.545,358,5.441,359,3.262,360,3.545,361,4.371,362,4.371,363,4.371,364,3.898,365,4.371,366,4.371,367,4.371,368,4.371,369,4.296,370,5.334,371,4.371,372,4.371,472,3.545,695,2.494,1381,4.371,1491,4.371,1492,5.089,1493,5.089,1494,5.089,1495,5.089,1496,5.089]],["title/properties.html",[17,0.631,1392,2.651]],["body/properties.html",[17,0.855,25,0.018,133,0.017,134,0.017,1497,6.024,1498,6.024]],["title/routes.html",[472,3.518]],["body/routes.html",[25,0.017,133,0.017,134,0.017,472,4.217]],["title/miscellaneous/typealiases.html",[1499,2.15,1500,4.449]],["body/miscellaneous/typealiases.html",[16,0.295,25,0.018,31,0.373,133,0.017,134,0.017,488,3.477,534,4.198,535,3.919,536,3.675,537,3.191,1499,4.002,1501,5.746,1502,7.263,1503,7.393,1504,7.056]],["title/miscellaneous/variables.html",[1499,2.15,1505,3.821]],["body/miscellaneous/variables.html",[16,0.139,18,1.066,25,0.019,26,0.389,30,0.307,31,0.374,35,1.163,40,0.955,48,1.693,58,1.009,102,0.572,133,0.01,134,0.01,153,1.998,204,3.432,222,2.584,284,1.763,309,1.931,312,1.56,317,1.361,326,1.815,338,1.723,342,4.603,435,2.808,436,3.361,438,3.361,439,2.808,441,2.398,442,2.398,487,3.575,488,3.334,523,2.239,534,3.185,535,3.556,536,3.471,538,2.911,541,3.432,542,4.1,543,3.432,544,3.728,545,3.185,546,3.728,553,1.763,558,2.239,561,1.763,566,4.1,567,2.398,625,3.432,628,3.185,633,3.088,634,1.976,647,4.104,652,2.067,662,2.1,685,2.239,712,3.728,830,2.808,851,4.1,970,2.239,1095,4.1,1096,3.728,1097,2.584,1107,2.067,1121,2.808,1185,2.067,1217,2.318,1223,3.088,1224,2.318,1241,4.1,1257,2.067,1258,4.1,1259,3.088,1261,3.088,1264,4.186,1265,3.088,1266,3.088,1267,3.088,1268,2.318,1269,2.318,1270,4.1,1271,2.318,1272,2.318,1273,2.318,1276,4.77,1278,2.318,1279,2.318,1280,2.318,1281,2.318,1282,2.318,1385,2.318,1387,5.162,1388,2.318,1389,2.318,1411,4.598,1412,5.162,1417,4.598,1418,5.499,1499,1.88,1505,2.318,1506,5.729,1507,6.764,1508,6.01,1509,6.01,1510,6.01,1511,2.699,1512,5.729,1513,6.664,1514,6.664,1515,5.729,1516,4.031,1517,4.031,1518,5.353,1519,5.353,1520,5.353,1521,7.185,1522,6.402,1523,6.01,1524,4.031,1525,4.031,1526,4.031,1527,4.031,1528,4.031,1529,4.031,1530,4.031,1531,4.031,1532,4.031,1533,4.031,1534,4.031,1535,4.031,1536,5.353,1537,4.031,1538,4.031,1539,4.031,1540,4.031,1541,4.031,1542,4.031,1543,4.031,1544,4.031,1545,4.031,1546,4.031,1547,4.031,1548,4.031,1549,4.031,1550,4.031,1551,4.031,1552,4.031,1553,4.031,1554,4.031,1555,4.031,1556,4.031,1557,4.031,1558,4.031,1559,4.031,1560,5.353,1561,4.031,1562,4.031,1563,4.031]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":675,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1498,"title":{},"body":{"properties.html":{}}}],["0.12",{"_index":1351,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["0.14.0",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["0.24",{"_index":807,"title":{},"body":{"components/HomeComponent.html":{}}}],["0.8",{"_index":682,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["0.849",{"_index":1010,"title":{},"body":{"components/MessageListComponent.html":{}}}],["0.95rem",{"_index":275,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["0/1",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":677,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["1",{"_index":902,"title":{"interfaces/State-1.html":{}},"body":{"components/MessageBoxComponent.html":{}}}],["1.0",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.05rem",{"_index":804,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.15rem",{"_index":841,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["1.25rem",{"_index":769,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/LoadingMessageComponent.html":{}}}],["1.2rem",{"_index":818,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{}}}],["1.5",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.7rem",{"_index":1247,"title":{},"body":{"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["1.8rem",{"_index":269,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/SidenavComponent.html":{}}}],["1/21",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1367,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":796,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageListComponent.html":{}}}],["100",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100px",{"_index":766,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["100vh",{"_index":1009,"title":{},"body":{"components/MessageListComponent.html":{}}}],["10px",{"_index":277,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{}}}],["12",{"_index":1493,"title":{},"body":{"overview.html":{}}}],["1279.98px",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{}}}],["1280px",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{}}}],["12dvh",{"_index":1252,"title":{},"body":{"components/SidenavComponent.html":{}}}],["12px",{"_index":678,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["14",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["1599px",{"_index":690,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["15dvh",{"_index":1253,"title":{},"body":{"components/SidenavComponent.html":{}}}],["15px",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["16.2.10",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["1600px",{"_index":692,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["16px",{"_index":803,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{}}}],["17",{"_index":1495,"title":{},"body":{"overview.html":{}}}],["17.0.1",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["17.0.4",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["18px",{"_index":995,"title":{},"body":{"components/MessageListComponent.html":{}}}],["194",{"_index":681,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["1fr",{"_index":671,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["1px",{"_index":1347,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["1rem",{"_index":797,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":1492,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["2.9rem",{"_index":1256,"title":{},"body":{"components/SidenavComponent.html":{}}}],["2.jpg",{"_index":778,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.png",{"_index":832,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["20",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":283,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["214",{"_index":287,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["231",{"_index":814,"title":{},"body":{"components/HomeComponent.html":{}}}],["241",{"_index":802,"title":{},"body":{"components/HomeComponent.html":{}}}],["24252d",{"_index":839,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["24px",{"_index":991,"title":{},"body":{"components/MessageListComponent.html":{}}}],["25",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["25px",{"_index":254,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["25vw",{"_index":249,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["270px",{"_index":800,"title":{},"body":{"components/HomeComponent.html":{}}}],["280px",{"_index":280,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["290px",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["2fr",{"_index":788,"title":{},"body":{"components/HomeComponent.html":{}}}],["2px",{"_index":994,"title":{},"body":{"components/MessageListComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["3",{"_index":278,"title":{},"body":{"components/AiModelDetailComponent.html":{},"index.html":{}}}],["3/4",{"_index":1365,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1005,"title":{},"body":{"components/MessageListComponent.html":{}}}],["30px",{"_index":1019,"title":{},"body":{"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["320px",{"_index":820,"title":{},"body":{"components/HomeComponent.html":{}}}],["330px",{"_index":247,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["34",{"_index":691,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["35px",{"_index":799,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{}}}],["36",{"_index":1350,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["38px",{"_index":840,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["3b",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3px",{"_index":808,"title":{},"body":{"components/HomeComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["4",{"_index":1381,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["40",{"_index":693,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["400",{"_index":1352,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["400m",{"_index":1412,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["4091",{"_index":1423,"title":{},"body":{"index.html":{}}}],["40px",{"_index":261,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/SidenavComponent.html":{}}}],["424px",{"_index":297,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["42px",{"_index":845,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["450px",{"_index":817,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageListComponent.html":{}}}],["45px",{"_index":765,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{}}}],["480px",{"_index":688,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["48px",{"_index":838,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["4px",{"_index":679,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["5",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50px",{"_index":1244,"title":{},"body":{"components/SidenavComponent.html":{}}}],["535px",{"_index":843,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["550px",{"_index":1012,"title":{},"body":{"components/MessageListComponent.html":{}}}],["55px",{"_index":844,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["5px",{"_index":294,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/SidenavComponent.html":{}}}],["5vh",{"_index":1254,"title":{},"body":{"components/SidenavComponent.html":{}}}],["600px",{"_index":815,"title":{},"body":{"components/HomeComponent.html":{}}}],["60px",{"_index":259,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{}}}],["650px",{"_index":767,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["7",{"_index":1496,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1224,"title":{},"body":{"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["700px",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["713c3c",{"_index":770,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["72px",{"_index":819,"title":{},"body":{"components/HomeComponent.html":{}}}],["75",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["75px",{"_index":1255,"title":{},"body":{"components/SidenavComponent.html":{}}}],["7b",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1494,"title":{},"body":{"overview.html":{}}}],["80",{"_index":298,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["86px",{"_index":988,"title":{},"body":{"components/MessageListComponent.html":{}}}],["88de6998d3b5",{"_index":1425,"title":{},"body":{"index.html":{}}}],["8d8c8c",{"_index":842,"title":{},"body":{"components/LoadingMessageComponent.html":{}}}],["8px",{"_index":809,"title":{},"body":{"components/HomeComponent.html":{}}}],["959.98px",{"_index":816,"title":{},"body":{"components/HomeComponent.html":{}}}],["960px",{"_index":821,"title":{},"body":{"components/HomeComponent.html":{}}}],["972px",{"_index":689,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["99",{"_index":286,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["9px",{"_index":676,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["_chatbotfeaturekey",{"_index":1274,"title":{},"body":{"interfaces/State.html":{}}}],["_ngzone",{"_index":859,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["_picturegenfeaturekey",{"_index":1283,"title":{},"body":{"interfaces/State-1.html":{}}}],["absolute",{"_index":1007,"title":{},"body":{"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["abstract",{"_index":55,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/ResourceService.html":{},"index.html":{}}}],["access",{"_index":960,"title":{},"body":{"components/MessageListComponent.html":{},"index.html":{}}}],["according",{"_index":648,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["action",{"_index":632,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{}}}],["actions",{"_index":699,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["active",{"_index":1250,"title":{},"body":{"components/SidenavComponent.html":{}}}],["actual_component",{"_index":332,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["actually",{"_index":97,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["add",{"_index":625,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["addanswerai",{"_index":543,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addansweraierror",{"_index":712,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adding",{"_index":1441,"title":{},"body":{"index.html":{}}}],["addmessagetolist",{"_index":1077,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["addmessagetolist(message",{"_index":1080,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["adds",{"_index":663,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["addusermessagetolist",{"_index":491,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["addusermessagetolist(message",{"_index":502,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["adduserquestion",{"_index":544,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":763,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["ai",{"_index":153,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["aimodelcommunicator",{"_index":1,"title":{"interfaces/AiModelCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["aimodelcommunicatorcreator",{"_index":56,"title":{"classes/AiModelCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["aimodelcommunicatorcreator:17",{"_index":725,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:29",{"_index":724,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:48",{"_index":729,"title":{},"body":{"classes/ConcreteBlenderbotCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:54",{"_index":723,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:60",{"_index":741,"title":{},"body":{"classes/ConcreteLlamaCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:66",{"_index":733,"title":{},"body":{"classes/ConcreteDialogptCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:72",{"_index":737,"title":{},"body":{"classes/ConcreteFalconCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:78",{"_index":745,"title":{},"body":{"classes/ConcreteOpenjourneyCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:84",{"_index":753,"title":{},"body":{"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["aimodelcommunicatorcreator:90",{"_index":749,"title":{},"body":{"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{}}}],["aimodeldetailcomponent",{"_index":139,"title":{"components/AiModelDetailComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aimodelname",{"_index":647,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["aiprofileicon",{"_index":827,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["aliases",{"_index":1501,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":795,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["alive",{"_index":610,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["allow",{"_index":1286,"title":{},"body":{"injectables/SuggestionsService.html":{},"index.html":{}}}],["allows",{"_index":1059,"title":{},"body":{"injectables/NavigationService.html":{}}}],["already",{"_index":620,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["alt.svg",{"_index":1229,"title":{},"body":{"components/SidenavComponent.html":{}}}],["always",{"_index":227,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["america",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/animations",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/text",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"components/MessageBoxComponent.html":{}}}],["angular/common",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/MessageSuggestionsComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":196,"title":{},"body":{"components/AiModelDetailComponent.html":{},"modules/AppModule.html":{},"injectables/ModelDetailsService.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["angular/compiler",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":198,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["angular/material/form",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"components/SidenavComponent.html":{}}}],["angular/platform",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/MessageListComponent.html":{},"interfaces/PictureMessage.html":{},"dependencies.html":{}}}],["angular/router",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["answer",{"_index":634,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{},"miscellaneous/variables.html":{}}}],["answers",{"_index":565,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["api",{"_index":628,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1121,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":18,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":152,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["app.component",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":306,"title":{"components/AppComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1483,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1179,"title":{},"body":{"injectables/ResourceService.html":{}}}],["applied",{"_index":883,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["appmodule",{"_index":358,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":369,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1408,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":1205,"title":{},"body":{"components/SidenavComponent.html":{}}}],["array",{"_index":599,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["arrived",{"_index":964,"title":{},"body":{"components/MessageListComponent.html":{}}}],["asign",{"_index":1106,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["asigned",{"_index":643,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["ask",{"_index":633,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["askanswerai",{"_index":545,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/home",{"_index":1228,"title":{},"body":{"components/SidenavComponent.html":{}}}],["assets/logo",{"_index":777,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["assets/send.png",{"_index":876,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["assets/user",{"_index":973,"title":{},"body":{"components/MessageListComponent.html":{}}}],["assign",{"_index":216,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["author",{"_index":1046,"title":{},"body":{"interfaces/Model.html":{},"interfaces/Models.html":{}}}],["authorization",{"_index":1176,"title":{},"body":{"injectables/ResourceService.html":{}}}],["auto",{"_index":281,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["automatically",{"_index":1484,"title":{},"body":{"index.html":{}}}],["autosize",{"_index":849,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["available",{"_index":570,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"modules.html":{}}}],["b3f2",{"_index":1424,"title":{},"body":{"index.html":{}}}],["background",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["bar",{"_index":330,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["bar.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.html",{"_index":1330,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.scss",{"_index":1329,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.ts",{"_index":1328,"title":{},"body":{"components/TitleTopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:11",{"_index":1337,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.ts:12",{"_index":1335,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.ts:13",{"_index":1336,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.ts:16",{"_index":1334,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.ts:22",{"_index":1340,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1339,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["bar/title",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{}}}],["base",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":234,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["bearer",{"_index":1177,"title":{},"body":{"injectables/ResourceService.html":{}}}],["behavior",{"_index":977,"title":{},"body":{"components/MessageListComponent.html":{}}}],["behaviorsubject",{"_index":1070,"title":{},"body":{"injectables/NavigationService.html":{}}}],["between",{"_index":1288,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["bfe0",{"_index":1422,"title":{},"body":{"index.html":{}}}],["bg.png",{"_index":1226,"title":{},"body":{"components/SidenavComponent.html":{}}}],["black",{"_index":1016,"title":{},"body":{"components/MessageListComponent.html":{}}}],["blender_bot",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blender_bot_3b",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blenderbot",{"_index":1411,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["blenderbot3bapiurl",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blenderbot3bcommunicator",{"_index":482,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["blenderbot3bmodel",{"_index":159,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["blenderbotapiurl",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blenderbotcommunicator",{"_index":483,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["blenderbotmodel",{"_index":160,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["blob",{"_index":1156,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["block",{"_index":256,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["bold",{"_index":1251,"title":{},"body":{"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["boolean",{"_index":930,"title":{},"body":{"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/PictureMessage.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/TextMessage.html":{}}}],["bootstrap",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["bot",{"_index":782,"title":{},"body":{"components/HomeComponent.html":{}}}],["bottom",{"_index":260,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["box",{"_index":673,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["box'},{'name",{"_index":319,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["box.component",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["box.component.html",{"_index":848,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.scss",{"_index":847,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts",{"_index":846,"title":{},"body":{"components/MessageBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:13",{"_index":860,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:14",{"_index":862,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:17",{"_index":870,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:20",{"_index":872,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:22",{"_index":873,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:23",{"_index":858,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:30",{"_index":866,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:35",{"_index":865,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box.component.ts:45",{"_index":864,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["box/message",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"components/MessageBoxComponent.html":{},"coverage.html":{}}}],["break",{"_index":655,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["browse",{"_index":1489,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"components/MessageListComponent.html":{},"interfaces/PictureMessage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["builder",{"_index":642,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["bundle",{"_index":1427,"title":{},"body":{"index.html":{}}}],["business",{"_index":70,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["button",{"_index":785,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{}}}],["button:hover",{"_index":810,"title":{},"body":{"components/HomeComponent.html":{}}}],["bw",{"_index":831,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["c0c0c0",{"_index":908,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["c4c4c4",{"_index":1348,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["call",{"_index":80,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{}}}],["calls",{"_index":1465,"title":{},"body":{"index.html":{}}}],["captain",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":651,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["cast",{"_index":615,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["castmessageaspicturemessage",{"_index":918,"title":{},"body":{"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["castmessageaspicturemessage(message",{"_index":936,"title":{},"body":{"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["castmessageaspicturemessage(message).picture",{"_index":984,"title":{},"body":{"components/MessageListComponent.html":{}}}],["castmessageastextmessage",{"_index":919,"title":{},"body":{"components/MessageListComponent.html":{}}}],["castmessageastextmessage(message",{"_index":938,"title":{},"body":{"components/MessageListComponent.html":{}}}],["castmessageastextmessage(message).text",{"_index":985,"title":{},"body":{"components/MessageListComponent.html":{}}}],["cat",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catcherror",{"_index":716,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["catcherror((error",{"_index":707,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["catcherror(this.handleerror",{"_index":1164,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["cdktextareaautosize",{"_index":867,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["cdref",{"_index":929,"title":{},"body":{"components/MessageListComponent.html":{}}}],["center",{"_index":267,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["change",{"_index":76,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"index.html":{}}}],["changed",{"_index":968,"title":{},"body":{"components/MessageListComponent.html":{}}}],["changedetectorref",{"_index":927,"title":{},"body":{"components/MessageListComponent.html":{}}}],["changes",{"_index":187,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"injectables/TextMessageService.html":{}}}],["changes[\"messagelist\"].currentvalue",{"_index":965,"title":{},"body":{"components/MessageListComponent.html":{}}}],["changes[\"messagelist\"].previousvalue",{"_index":966,"title":{},"body":{"components/MessageListComponent.html":{}}}],["changes['selectedmodelname'].currentvalue",{"_index":225,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["changes['selectedmodelname'].previousvalue",{"_index":224,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["changeselectedmodel",{"_index":165,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["changeselectedmodel(modelname",{"_index":177,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["chat",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{}}}],["chatai",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["chatbot",{"_index":309,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chatbot.actions",{"_index":713,"title":{},"body":{"injectables/ChatbotEffects.html":{},"interfaces/State.html":{}}}],["chatbot.reducer",{"_index":711,"title":{},"body":{"injectables/ChatbotEffects.html":{}}}],["chatbotactions",{"_index":1263,"title":{},"body":{"interfaces/State.html":{}}}],["chatbotcontainercomponent",{"_index":308,"title":{"components/ChatbotContainerComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatboteffects",{"_index":445,"title":{"injectables/ChatbotEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/ChatbotEffects.html":{},"coverage.html":{}}}],["chatbotfeature",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chatbotfeature.reducer",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["chatbotfeaturekey",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chatbotreducer",{"_index":1275,"title":{},"body":{"interfaces/State.html":{}}}],["check",{"_index":1346,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["child",{"_index":1292,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["children",{"_index":1430,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1313,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["choosenmodel",{"_index":1333,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["class",{"_index":43,"title":{"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":101,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"overview.html":{}}}],["cli",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["click",{"_index":603,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["clicks",{"_index":619,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["close",{"_index":986,"title":{},"body":{"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["closed",{"_index":1246,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closefullscreenpicture",{"_index":920,"title":{},"body":{"components/MessageListComponent.html":{}}}],["closemobiledrawer",{"_index":1196,"title":{},"body":{"components/SidenavComponent.html":{}}}],["closenav",{"_index":1197,"title":{},"body":{"components/SidenavComponent.html":{}}}],["cluster_appmodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":284,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":794,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["columns:100",{"_index":672,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["combine",{"_index":1458,"title":{},"body":{"index.html":{}}}],["come",{"_index":1453,"title":{},"body":{"index.html":{}}}],["common/services/navigation.service",{"_index":1220,"title":{},"body":{"components/SidenavComponent.html":{}}}],["commonmodule",{"_index":1032,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["communicate",{"_index":1293,"title":{},"body":{"injectables/SuggestionsService.html":{},"index.html":{}}}],["communication",{"_index":1287,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["communicator",{"_index":7,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["component",{"_index":138,"title":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":304,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["components",{"_index":140,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/ai",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["components/error",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["components/loading",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["components/message",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["concrete",{"_index":13,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"index.html":{}}}],["concreteblenderbot3bcommunicator",{"_index":105,"title":{"classes/ConcreteBlenderbot3BCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concreteblenderbot3bcommunicatorcreator",{"_index":104,"title":{"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concreteblenderbotcommunicator",{"_index":103,"title":{"classes/ConcreteBlenderbotCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concreteblenderbotcommunicatorcreator",{"_index":90,"title":{"classes/ConcreteBlenderbotCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretedialogptcommunicator",{"_index":109,"title":{"classes/ConcreteDialogptCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretedialogptcommunicatorcreator",{"_index":108,"title":{"classes/ConcreteDialogptCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretefalconcommunicator",{"_index":111,"title":{"classes/ConcreteFalconCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretefalconcommunicatorcreator",{"_index":110,"title":{"classes/ConcreteFalconCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretellamacommunicator",{"_index":107,"title":{"classes/ConcreteLlamaCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretellamacommunicatorcreator",{"_index":106,"title":{"classes/ConcreteLlamaCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concreteopenjourneycommunicator",{"_index":113,"title":{"classes/ConcreteOpenjourneyCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concreteopenjourneycommunicatorcreator",{"_index":112,"title":{"classes/ConcreteOpenjourneyCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["concretestablediffusion1_5communicator",{"_index":117,"title":{"classes/ConcreteStableDiffusion1_5Communicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretestablediffusion1_5communicatorcreator",{"_index":116,"title":{"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["concretestablediffusionxlcommunicator",{"_index":115,"title":{"classes/ConcreteStableDiffusionXLCommunicator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["concretestablediffusionxlcommunicatorcreator",{"_index":114,"title":{"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["conresponding",{"_index":641,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["console.log(\"1",{"_index":1232,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(\"close",{"_index":982,"title":{},"body":{"components/MessageListComponent.html":{}}}],["console.log(\"ismobilesize",{"_index":1240,"title":{},"body":{"components/SidenavComponent.html":{}}}],["console.log(\"service",{"_index":1315,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["console.log(\"value",{"_index":967,"title":{},"body":{"components/MessageListComponent.html":{}}}],["console.log(changes",{"_index":963,"title":{},"body":{"components/MessageListComponent.html":{}}}],["console.log(error",{"_index":1183,"title":{},"body":{"injectables/ResourceService.html":{}}}],["console.log(json.stringify({inputs",{"_index":128,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["console.log(this.issuggestionsshowed",{"_index":1039,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["console.log(this.screenheight",{"_index":1238,"title":{},"body":{"components/SidenavComponent.html":{}}}],["const",{"_index":61,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"modules/AppRoutingModule.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{}}}],["constructor",{"_index":171,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["constructor(_ngzone",{"_index":856,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["constructor(actions",{"_index":698,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["constructor(cdref",{"_index":926,"title":{},"body":{"components/MessageListComponent.html":{}}}],["constructor(elementref",{"_index":1025,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["constructor(http",{"_index":1050,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["constructor(httpclient",{"_index":1128,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["constructor(modeldetailsservice",{"_index":172,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["constructor(navigationservice",{"_index":1203,"title":{},"body":{"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["constructor(picturemessageservice",{"_index":1078,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["constructor(private",{"_index":206,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["constructor(protected",{"_index":1150,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["constructor(textmessageservice",{"_index":497,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["contain",{"_index":1014,"title":{},"body":{"components/MessageListComponent.html":{}}}],["container",{"_index":244,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["container'},{'name",{"_index":310,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["container.component",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["container.component.html",{"_index":479,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.scss",{"_index":478,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts",{"_index":477,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:102",{"_index":508,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:107",{"_index":1084,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:110",{"_index":511,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:115",{"_index":1085,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:130",{"_index":505,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:135",{"_index":1083,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:139",{"_index":503,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:144",{"_index":1081,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:149",{"_index":1082,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:24",{"_index":1093,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:25",{"_index":528,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:26",{"_index":1087,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:27",{"_index":516,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:29",{"_index":1088,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:30",{"_index":519,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:32",{"_index":1089,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:33",{"_index":520,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:35",{"_index":1090,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:36",{"_index":526,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["container.component.ts:38",{"_index":527,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:41",{"_index":518,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:44",{"_index":512,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:45",{"_index":514,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:46",{"_index":513,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:47",{"_index":517,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:51",{"_index":521,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:53",{"_index":501,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:80",{"_index":506,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container.component.ts:87",{"_index":510,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["container/chatbot",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"coverage.html":{}}}],["container/picture",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["containername",{"_index":484,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["containers/chatbot",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["containers/picture",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["containersname",{"_index":541,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containersname.chatbot",{"_index":515,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/SuggestionsService.html":{}}}],["containersname.picturegen",{"_index":1086,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{}}}],["contains",{"_index":68,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{}}}],["content",{"_index":266,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["conversation",{"_index":573,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["conversationalmodelsname",{"_index":204,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["conversationalmodelsname.blender_bot",{"_index":652,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["conversationalmodelsname.blender_bot_3b",{"_index":656,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["conversationalmodelsname.dialogpt",{"_index":658,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["conversations",{"_index":1267,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":69,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["corresponding",{"_index":233,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["cover",{"_index":1013,"title":{},"body":{"components/MessageListComponent.html":{}}}],["coverage",{"_index":1359,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":81,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["createaction('[chatbot",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[picturegen",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":701,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["createfeature",{"_index":1259,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector",{"_index":1260,"title":{},"body":{"interfaces/State.html":{}}}],["createreducer",{"_index":1261,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":660,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["createselector",{"_index":1262,"title":{},"body":{"interfaces/State.html":{}}}],["createusermessage",{"_index":492,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["createusermessage(message",{"_index":504,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["creating",{"_index":67,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{}}}],["creator",{"_index":42,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["creator's",{"_index":49,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["creators",{"_index":85,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["cta",{"_index":798,"title":{},"body":{"components/HomeComponent.html":{}}}],["current",{"_index":231,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["cursor",{"_index":811,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["custom",{"_index":1469,"title":{},"body":{"index.html":{}}}],["d8d8d8",{"_index":903,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["data",{"_index":213,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{},"index.html":{}}}],["datasize",{"_index":1047,"title":{},"body":{"interfaces/Model.html":{},"interfaces/Models.html":{}}}],["dda1a1",{"_index":768,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["declarations",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declares",{"_index":11,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["decoration",{"_index":290,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["decorator",{"_index":1434,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":868,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["dedicated",{"_index":636,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["deep",{"_index":1289,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["default",{"_index":58,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["demo",{"_index":1419,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":360,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1180,"title":{},"body":{"injectables/ResourceService.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"components/HomeComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"injectables/SuggestionsService.html":{}}}],["design",{"_index":1435,"title":{},"body":{"index.html":{}}}],["despite",{"_index":64,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["destroyed",{"_index":584,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["detail",{"_index":154,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["detail'},{'name",{"_index":305,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["detail.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["detail.component.html",{"_index":158,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.scss",{"_index":156,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts",{"_index":148,"title":{},"body":{"components/AiModelDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:15",{"_index":176,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:16",{"_index":193,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:17",{"_index":194,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":190,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":189,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":191,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":174,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":188,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":186,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":178,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail.component.ts:59",{"_index":182,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["detail/ai",{"_index":147,"title":{},"body":{"components/AiModelDetailComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["details",{"_index":203,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["details.service",{"_index":201,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["details.service.ts",{"_index":1048,"title":{},"body":{"injectables/ModelDetailsService.html":{},"coverage.html":{}}}],["details.service.ts:12",{"_index":1053,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["details.service.ts:8",{"_index":1051,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["details.ts",{"_index":1045,"title":{},"body":{"interfaces/Model.html":{},"interfaces/Models.html":{},"coverage.html":{}}}],["detect",{"_index":221,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageListComponent.html":{}}}],["dev",{"_index":1480,"title":{},"body":{"index.html":{}}}],["development",{"_index":1475,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialogpt",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialogptcommunicator",{"_index":485,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["dialogptmodel",{"_index":161,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["dialogpturl",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":79,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["diffusion",{"_index":1418,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dipslayed",{"_index":1266,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":793,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["directive",{"_index":302,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["directives",{"_index":331,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["dismiss",{"_index":890,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["dispatch",{"_index":631,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["display",{"_index":263,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["display:grid",{"_index":668,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["displayed",{"_index":558,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distill",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distinctuntilchanged",{"_index":957,"title":{},"body":{"components/MessageListComponent.html":{}}}],["documentation",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":143,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["down",{"_index":560,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{},"index.html":{}}}],["drawer",{"_index":1063,"title":{},"body":{"injectables/NavigationService.html":{},"components/SidenavComponent.html":{}}}],["driven",{"_index":1407,"title":{},"body":{"index.html":{}}}],["dropdown",{"_index":1357,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["due",{"_index":1325,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["dynamic",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":1449,"title":{},"body":{"index.html":{}}}],["effect",{"_index":637,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["effects",{"_index":1464,"title":{},"body":{"index.html":{}}}],["effectsmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([chatboteffects",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":301,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["elementref",{"_index":529,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{}}}],["end",{"_index":989,"title":{},"body":{"components/MessageListComponent.html":{}}}],["endpoint",{"_index":1444,"title":{},"body":{"index.html":{}}}],["enter",{"_index":896,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["env",{"_index":1222,"title":{},"body":{"components/SidenavComponent.html":{}}}],["environment",{"_index":35,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apikey",{"_index":1143,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["environment.apiurl",{"_index":125,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.blenderbot3bapiurl",{"_index":124,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.blenderbotapiurl",{"_index":121,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.dialogpturl",{"_index":126,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.falconurl",{"_index":127,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.openjourneyurl",{"_index":130,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.stablediffusion1_5url",{"_index":132,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environment.stablediffusionxlurl",{"_index":131,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["environments/environment",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"injectables/ResourceService.html":{}}}],["error",{"_index":312,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["errormessagecomponent",{"_index":311,"title":{"components/ErrorMessageComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessagestate",{"_index":534,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["even",{"_index":95,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["event",{"_index":616,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{}}}],["event.preventdefault",{"_index":899,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["eventemitter",{"_index":861,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["ex",{"_index":1036,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["expand",{"_index":877,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["expdanded",{"_index":1249,"title":{},"body":{"components/SidenavComponent.html":{}}}],["export",{"_index":54,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["exports",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":91,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["extension",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["f0f0f0",{"_index":665,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["f3f5f7",{"_index":992,"title":{},"body":{"components/MessageListComponent.html":{}}}],["f6f6f7",{"_index":1248,"title":{},"body":{"components/SidenavComponent.html":{}}}],["facebook",{"_index":783,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["factory",{"_index":44,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"index.html":{}}}],["factory.ts",{"_index":8,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"coverage.html":{}}}],["factory.ts:101",{"_index":23,"title":{},"body":{"interfaces/AiModelCommunicator.html":{}}}],["factory.ts:102",{"_index":28,"title":{},"body":{"interfaces/AiModelCommunicator.html":{}}}],["factory.ts:110",{"_index":726,"title":{},"body":{"classes/ConcreteBlenderbotCommunicator.html":{}}}],["factory.ts:112",{"_index":727,"title":{},"body":{"classes/ConcreteBlenderbotCommunicator.html":{}}}],["factory.ts:116",{"_index":728,"title":{},"body":{"classes/ConcreteBlenderbotCommunicator.html":{}}}],["factory.ts:122",{"_index":719,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicator.html":{}}}],["factory.ts:124",{"_index":720,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicator.html":{}}}],["factory.ts:128",{"_index":721,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicator.html":{}}}],["factory.ts:134",{"_index":738,"title":{},"body":{"classes/ConcreteLlamaCommunicator.html":{}}}],["factory.ts:136",{"_index":739,"title":{},"body":{"classes/ConcreteLlamaCommunicator.html":{}}}],["factory.ts:140",{"_index":740,"title":{},"body":{"classes/ConcreteLlamaCommunicator.html":{}}}],["factory.ts:146",{"_index":730,"title":{},"body":{"classes/ConcreteDialogptCommunicator.html":{}}}],["factory.ts:148",{"_index":731,"title":{},"body":{"classes/ConcreteDialogptCommunicator.html":{}}}],["factory.ts:15",{"_index":135,"title":{},"body":{"classes/AiModelCommunicatorCreator.html":{}}}],["factory.ts:152",{"_index":732,"title":{},"body":{"classes/ConcreteDialogptCommunicator.html":{}}}],["factory.ts:158",{"_index":734,"title":{},"body":{"classes/ConcreteFalconCommunicator.html":{}}}],["factory.ts:160",{"_index":735,"title":{},"body":{"classes/ConcreteFalconCommunicator.html":{}}}],["factory.ts:164",{"_index":736,"title":{},"body":{"classes/ConcreteFalconCommunicator.html":{}}}],["factory.ts:17",{"_index":137,"title":{},"body":{"classes/AiModelCommunicatorCreator.html":{}}}],["factory.ts:171",{"_index":742,"title":{},"body":{"classes/ConcreteOpenjourneyCommunicator.html":{}}}],["factory.ts:173",{"_index":743,"title":{},"body":{"classes/ConcreteOpenjourneyCommunicator.html":{}}}],["factory.ts:177",{"_index":744,"title":{},"body":{"classes/ConcreteOpenjourneyCommunicator.html":{}}}],["factory.ts:184",{"_index":750,"title":{},"body":{"classes/ConcreteStableDiffusionXLCommunicator.html":{}}}],["factory.ts:186",{"_index":751,"title":{},"body":{"classes/ConcreteStableDiffusionXLCommunicator.html":{}}}],["factory.ts:190",{"_index":752,"title":{},"body":{"classes/ConcreteStableDiffusionXLCommunicator.html":{}}}],["factory.ts:197",{"_index":746,"title":{},"body":{"classes/ConcreteStableDiffusion1_5Communicator.html":{}}}],["factory.ts:199",{"_index":747,"title":{},"body":{"classes/ConcreteStableDiffusion1_5Communicator.html":{}}}],["factory.ts:203",{"_index":748,"title":{},"body":{"classes/ConcreteStableDiffusion1_5Communicator.html":{}}}],["factory.ts:29",{"_index":136,"title":{},"body":{"classes/AiModelCommunicatorCreator.html":{}}}],["factorymethod",{"_index":60,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["failed",{"_index":568,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["falcon",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["falconurl",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":662,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":270,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["favorite",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feature",{"_index":1426,"title":{},"body":{"index.html":{}}}],["features",{"_index":1416,"title":{},"body":{"index.html":{}}}],["field",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"components/MessageBoxComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{}}}],["files",{"_index":1486,"title":{},"body":{"index.html":{}}}],["fill",{"_index":594,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["fit",{"_index":764,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/MessageListComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["fix",{"_index":1324,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["fixed",{"_index":998,"title":{},"body":{"components/MessageListComponent.html":{}}}],["flex",{"_index":264,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["float",{"_index":990,"title":{},"body":{"components/MessageListComponent.html":{}}}],["following",{"_index":1438,"title":{},"body":{"index.html":{}}}],["font",{"_index":268,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["form",{"_index":900,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["forminput",{"_index":850,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["formsmodule",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":238,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["fromservermodel",{"_index":1122,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["fromservermodel(json",{"_index":1130,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["full",{"_index":979,"title":{},"body":{"components/MessageListComponent.html":{}}}],["fullpagepicture",{"_index":1011,"title":{},"body":{"components/MessageListComponent.html":{}}}],["fullpagepicturecontainer",{"_index":1006,"title":{},"body":{"components/MessageListComponent.html":{}}}],["fullscreenpictureurl",{"_index":913,"title":{},"body":{"components/MessageListComponent.html":{}}}],["function",{"_index":1154,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["gen",{"_index":326,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"components/SidenavComponent.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen.actions",{"_index":1098,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/State-1.html":{}}}],["gen.actions.ts",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gen.effects",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["gen.effects.ts",{"_index":1114,"title":{},"body":{"injectables/PictureGenEffects.html":{},"coverage.html":{}}}],["gen.effects.ts:11",{"_index":1115,"title":{},"body":{"injectables/PictureGenEffects.html":{}}}],["gen.effects.ts:18",{"_index":1117,"title":{},"body":{"injectables/PictureGenEffects.html":{}}}],["gen/picture",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":572,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{},"index.html":{}}}],["generated",{"_index":996,"title":{},"body":{"components/MessageListComponent.html":{}}}],["generator",{"_index":1092,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["generics",{"_index":1466,"title":{},"body":{"index.html":{}}}],["getaianswer",{"_index":697,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["getapiurl",{"_index":20,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["getheaders",{"_index":1126,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["getjson",{"_index":1049,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["getmodelbyname",{"_index":166,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["getmodelbyname(modelname",{"_index":181,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["getopennavdrawerevent",{"_index":1065,"title":{},"body":{"injectables/NavigationService.html":{}}}],["getresourceurl",{"_index":1123,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["getscreensize",{"_index":1198,"title":{},"body":{"components/SidenavComponent.html":{}}}],["getting",{"_index":1406,"title":{"index.html":{}},"body":{}}],["gilroy",{"_index":271,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["given",{"_index":235,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["global",{"_index":644,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["graph",{"_index":1490,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":669,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["grow",{"_index":901,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["handle",{"_index":522,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/ResourceService.html":{}}}],["handleerror",{"_index":1127,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["handleerror(error",{"_index":1140,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["handling",{"_index":1429,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1454,"title":{},"body":{"index.html":{}}}],["hashlocationstrategy",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["hasnewmessagearrived",{"_index":914,"title":{},"body":{"components/MessageListComponent.html":{}}}],["headers",{"_index":1157,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["height",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["help",{"_index":781,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":999,"title":{},"body":{"components/MessageListComponent.html":{},"injectables/SuggestionsService.html":{}}}],["hero",{"_index":791,"title":{},"body":{"components/HomeComponent.html":{}}}],["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",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hidden",{"_index":667,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["hide",{"_index":577,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["hides",{"_index":1101,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["holds",{"_index":580,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["home",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/SidenavComponent.html":{}}}],["home'},{'name",{"_index":315,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["home.component.html",{"_index":773,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":772,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":314,"title":{"components/HomeComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homecomponentcontainer",{"_index":786,"title":{},"body":{"components/HomeComponent.html":{}}}],["homeiconpath",{"_index":1189,"title":{},"body":{"components/SidenavComponent.html":{}}}],["host",{"_index":1450,"title":{},"body":{"index.html":{}}}],["hosted",{"_index":1414,"title":{},"body":{"index.html":{}}}],["hostlistener",{"_index":530,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["hostlistener('window:resize",{"_index":1209,"title":{},"body":{"components/SidenavComponent.html":{}}}],["hostlisteners",{"_index":1201,"title":{},"body":{"components/SidenavComponent.html":{}}}],["html",{"_index":300,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["http",{"_index":1052,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["http://localhost:4200",{"_index":1482,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":195,"title":{},"body":{"components/AiModelDetailComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["httpclientmodule",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1141,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["httpheaders",{"_index":1139,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["httpparams",{"_index":1173,"title":{},"body":{"injectables/ResourceService.html":{}}}],["httpresponse",{"_index":1174,"title":{},"body":{"injectables/ResourceService.html":{}}}],["https://api",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://chat.loroscio.com",{"_index":1415,"title":{},"body":{"index.html":{}}}],["https://github.com/oranthony/chatai/assets/6161861/46a48633",{"_index":1421,"title":{},"body":{"index.html":{}}}],["huggingface",{"_index":1181,"title":{},"body":{"injectables/ResourceService.html":{}}}],["i'm",{"_index":1433,"title":{},"body":{"index.html":{}}}],["icon",{"_index":293,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["identifier",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":617,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["if(this.modellist",{"_index":229,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["image",{"_index":1091,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["imagepath",{"_index":774,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/SidenavComponent.html":{}}}],["imagination",{"_index":779,"title":{},"body":{"components/HomeComponent.html":{}}}],["implement",{"_index":15,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["implementation",{"_index":53,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["implementations",{"_index":119,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["implements",{"_index":120,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageSuggestionsComponent.html":{}}}],["import",{"_index":34,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["imports",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["independent",{"_index":100,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirectly",{"_index":75,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["individually",{"_index":1460,"title":{},"body":{"index.html":{}}}],["inference",{"_index":1182,"title":{},"body":{"injectables/ResourceService.html":{}}}],["inference.huggingface.co/models/facebook/blenderbot",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inference.huggingface.co/models/microsoft/dialogpt",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inference.huggingface.co/models/prompthero/openjourney",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inference.huggingface.co/models/runwayml/stable",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inference.huggingface.co/models/stabilityai/stable",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inference.huggingface.co/models/tiiuae/falcon",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["info.json",{"_index":1056,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["information",{"_index":208,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["inherit",{"_index":295,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/SidenavComponent.html":{}}}],["inherited",{"_index":722,"title":{},"body":{"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["init",{"_index":228,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["initialstate",{"_index":1264,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":694,"title":{"injectables/ChatbotEffects.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}},"body":{"injectables/ChatbotEffects.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"coverage.html":{}}}],["injectables",{"_index":695,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"overview.html":{}}}],["inline",{"_index":250,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["input",{"_index":197,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["input:focus",{"_index":907,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["inputs",{"_index":169,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{}}}],["instantiate",{"_index":578,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["instead",{"_index":1000,"title":{},"body":{"components/MessageListComponent.html":{}}}],["instruct",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AiModelCommunicator.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"interfaces/PictureMessage.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/TextMessage.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"interfaces/PictureMessage.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/TextMessage.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"interfaces/PictureMessage.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/TextMessage.html":{},"overview.html":{}}}],["ios",{"_index":892,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["isanswer",{"_index":661,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{}}}],["isdevmode",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["isexpanded",{"_index":1190,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ismobiledraweropen",{"_index":1191,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ismobilesize",{"_index":1192,"title":{},"body":{"components/SidenavComponent.html":{}}}],["isnewconversation",{"_index":1258,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["ispicturefullscreen",{"_index":915,"title":{},"body":{"components/MessageListComponent.html":{}}}],["issuggestionshowned",{"_index":486,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["issuggestionsshowed",{"_index":924,"title":{},"body":{"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{}}}],["item",{"_index":789,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{}}}],["items",{"_index":579,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["json",{"_index":210,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["json.stringify(message",{"_index":123,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["json.stringify({inputs",{"_index":129,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["json[0].generated_text",{"_index":1326,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["justify",{"_index":265,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["key",{"_index":897,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["keyboard",{"_index":891,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["know",{"_index":1265,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":1442,"title":{},"body":{"index.html":{}}}],["large",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["later",{"_index":1445,"title":{},"body":{"index.html":{}}}],["launch",{"_index":243,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["leads",{"_index":613,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["left",{"_index":253,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["legend",{"_index":299,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"overview.html":{}}}],["length",{"_index":1452,"title":{},"body":{"index.html":{}}}],["letter",{"_index":1353,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["light",{"_index":276,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{}}}],["line",{"_index":898,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["lines",{"_index":881,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["link",{"_index":282,"title":{},"body":{"components/AiModelDetailComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"components/SidenavComponent.html":{}}}],["links",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":581,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"index.html":{}}}],["list'},{'name",{"_index":321,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["list.component",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["list.component.html",{"_index":912,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.scss",{"_index":911,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts",{"_index":910,"title":{},"body":{"components/MessageListComponent.html":{},"coverage.html":{}}}],["list.component.ts:17",{"_index":933,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:19",{"_index":932,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:22",{"_index":934,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:23",{"_index":935,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:24",{"_index":931,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:28",{"_index":954,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:30",{"_index":950,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:31",{"_index":951,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:32",{"_index":949,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:34",{"_index":948,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:35",{"_index":955,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:37",{"_index":942,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:46",{"_index":941,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:52",{"_index":928,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:60",{"_index":943,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:69",{"_index":946,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:74",{"_index":940,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:79",{"_index":937,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list.component.ts:83",{"_index":939,"title":{},"body":{"components/MessageListComponent.html":{}}}],["list/message",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"components/MessageListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":1504,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["llama",{"_index":1241,"title":{},"body":{"components/SidenavComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["llamaapiurl",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["llamamodel",{"_index":162,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["llm",{"_index":1457,"title":{},"body":{"index.html":{}}}],["load",{"_index":207,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["loaded",{"_index":215,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["loading",{"_index":317,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"components/TitleTopBarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loadingmessage",{"_index":834,"title":{},"body":{"components/LoadingMessageComponent.html":{}}}],["loadingmessagecomponent",{"_index":316,"title":{"components/LoadingMessageComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingmessagestate",{"_index":535,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":209,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["locationstrategy",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["log",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["logic",{"_index":71,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/SuggestionsService.html":{},"index.html":{}}}],["logo",{"_index":1243,"title":{},"body":{"components/SidenavComponent.html":{}}}],["logonly",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["main",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["make",{"_index":1001,"title":{},"body":{"components/MessageListComponent.html":{},"index.html":{}}}],["manage",{"_index":1459,"title":{},"body":{"index.html":{}}}],["management",{"_index":1437,"title":{},"body":{"index.html":{}}}],["manipulated",{"_index":1467,"title":{},"body":{"index.html":{}}}],["map",{"_index":715,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["map((answer",{"_index":706,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["map((json",{"_index":1162,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["margin",{"_index":257,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["mat",{"_index":292,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/SidenavComponent.html":{}}}],["matching",{"_index":134,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"components/SidenavComponent.html":{}}}],["max",{"_index":248,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["maxage",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["medium",{"_index":272,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["menu",{"_index":1344,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["message",{"_index":33,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["message'},{'name",{"_index":313,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["message.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["message.component.html",{"_index":757,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/LoadingMessageComponent.html":{}}}],["message.component.scss",{"_index":756,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/LoadingMessageComponent.html":{}}}],["message.component.ts",{"_index":755,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/LoadingMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:10",{"_index":828,"title":{},"body":{"components/LoadingMessageComponent.html":{}}}],["message.service",{"_index":39,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{}}}],["message.service.ts",{"_index":1119,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{},"coverage.html":{}}}],["message.service.ts:15",{"_index":1129,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["message.service.ts:16",{"_index":1318,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["message.service.ts:30",{"_index":1136,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["message.service.ts:31",{"_index":1321,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["message.text",{"_index":983,"title":{},"body":{"components/MessageListComponent.html":{}}}],["message.ts",{"_index":1118,"title":{},"body":{"interfaces/PictureMessage.html":{},"interfaces/TextMessage.html":{},"coverage.html":{}}}],["message/error",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorMessageComponent.html":{},"coverage.html":{}}}],["message/loading",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingMessageComponent.html":{},"coverage.html":{}}}],["messageboxcomponent",{"_index":318,"title":{"components/MessageBoxComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagelist",{"_index":487,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["messagelistcomponent",{"_index":320,"title":{"components/MessageListComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagelistcontainer",{"_index":987,"title":{},"body":{"components/MessageListComponent.html":{}}}],["messages",{"_index":563,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}}}],["messagestate",{"_index":488,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messagesuggestionscomponent",{"_index":322,"title":{"components/MessageSuggestionsComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagesuggestionslist",{"_index":489,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["metadata",{"_index":150,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["method",{"_index":45,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"index.html":{}}}],["methods",{"_index":19,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["middle",{"_index":1356,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["min",{"_index":245,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["miscellaneous",{"_index":1499,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":146,"title":{"interfaces/Model.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"index.html":{}}}],["model.name",{"_index":237,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["modeldetailsservice",{"_index":173,"title":{"injectables/ModelDetailsService.html":{}},"body":{"components/AiModelDetailComponent.html":{},"injectables/ModelDetailsService.html":{},"coverage.html":{}}}],["modellist",{"_index":163,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["modelname",{"_index":179,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["models",{"_index":192,"title":{"interfaces/Models.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{},"index.html":{}}}],["models/picture",{"_index":1145,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["models/text",{"_index":41,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["module",{"_index":357,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":359,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monkey",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":242,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["move",{"_index":1221,"title":{},"body":{"components/SidenavComponent.html":{}}}],["movies",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moz",{"_index":905,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["ms",{"_index":684,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["multimodal",{"_index":1456,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":614,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{}}}],["multiples",{"_index":880,"title":{},"body":{"components/MessageBoxComponent.html":{},"index.html":{}}}],["myscrollcontainer",{"_index":916,"title":{},"body":{"components/MessageListComponent.html":{}}}],["mysignal",{"_index":556,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["name",{"_index":30,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":569,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["nav",{"_index":1242,"title":{},"body":{"components/SidenavComponent.html":{}}}],["navigate",{"_index":1481,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1062,"title":{},"body":{"injectables/NavigationService.html":{}}}],["navigationservice",{"_index":1057,"title":{"injectables/NavigationService.html":{}},"body":{"injectables/NavigationService.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{}}}],["nested",{"_index":1291,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["new",{"_index":102,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/ResourceService.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1478,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":921,"title":{},"body":{"components/MessageListComponent.html":{}}}],["ngmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":167,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageListComponent.html":{}}}],["ngonchanges(changes",{"_index":184,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageListComponent.html":{}}}],["ngondestroy",{"_index":493,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["ngoninit",{"_index":168,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageSuggestionsComponent.html":{}}}],["ngrx",{"_index":1410,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"dependencies.html":{}}}],["ngzone",{"_index":857,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["none",{"_index":296,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["note",{"_index":57,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["notif",{"_index":1316,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["notification",{"_index":1037,"title":{},"body":{"components/MessageSuggestionsComponent.html":{},"injectables/SuggestionsService.html":{}}}],["notificationforchatbotcontainerreceived",{"_index":1298,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["notificationforpicturecontainerreceived",{"_index":1299,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["notificationtochatbotcontainer",{"_index":1300,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["notificationtopicturegencontainer",{"_index":1301,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["notify",{"_index":1041,"title":{},"body":{"components/MessageSuggestionsComponent.html":{},"injectables/SuggestionsService.html":{}}}],["notify(suggestion",{"_index":1303,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["now",{"_index":82,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["number",{"_index":1217,"title":{},"body":{"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":48,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["object.entries(conversationalmodelsname).foreach(([key",{"_index":597,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["object.entries(texttoimagemodelsname).foreach(([key",{"_index":1099,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["objects",{"_index":73,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["observable",{"_index":175,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["of(addansweraierror({errormessagestate",{"_index":708,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["oftype",{"_index":710,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["oftype(askanswerai",{"_index":703,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["on(chatbotactions.addanswerai",{"_index":1269,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(chatbotactions.addansweraierror",{"_index":1271,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(chatbotactions.adduserquestion",{"_index":1272,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(chatbotactions.askanswerai",{"_index":1268,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(chatbotactions.setaimodelname",{"_index":1273,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["on(picturegenactions.addanswerai",{"_index":1279,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["on(picturegenactions.addansweraierror",{"_index":1280,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["on(picturegenactions.adduserquestion",{"_index":1281,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["on(picturegenactions.askanswerai",{"_index":1278,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["on(picturegenactions.setaimodelname",{"_index":1282,"title":{},"body":{"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":214,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["onchoosenmodel",{"_index":494,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["onchoosenmodel(model",{"_index":507,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["oninit",{"_index":149,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/SidenavComponent.html":{}}}],["onkeydown",{"_index":852,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["onkeydown(event",{"_index":863,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["onselectedmodel",{"_index":1331,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["onselectedmodel(model",{"_index":1338,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["onsendmessage",{"_index":495,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["onsendmessage(message",{"_index":509,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["onsuggestionclick",{"_index":1024,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["onsuggestionclick(suggestion",{"_index":1030,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["open",{"_index":1060,"title":{},"body":{"injectables/NavigationService.html":{}}}],["open/closed",{"_index":1439,"title":{},"body":{"index.html":{}}}],["opened",{"_index":1245,"title":{},"body":{"components/SidenavComponent.html":{}}}],["openeventsubscription",{"_index":1193,"title":{},"body":{"components/SidenavComponent.html":{}}}],["openjourney",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openjourneycommunicator",{"_index":1074,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["openjourneyurl",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opennav",{"_index":1199,"title":{},"body":{"components/SidenavComponent.html":{}}}],["opennavbar",{"_index":1332,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["opennavdrawer",{"_index":1066,"title":{},"body":{"injectables/NavigationService.html":{}}}],["operations",{"_index":12,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["optional",{"_index":32,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["orange",{"_index":909,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/SidenavComponent.html":{}}}],["order",{"_index":87,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["originated",{"_index":1035,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["otherwise",{"_index":576,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["oups",{"_index":758,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["out",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["outline",{"_index":904,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["output",{"_index":874,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["outputs",{"_index":854,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["overflow",{"_index":666,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["override",{"_index":86,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["overriding",{"_index":77,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["overview",{"_index":1491,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1392,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":252,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["page",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paramaters",{"_index":1155,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["paremeters",{"_index":241,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["parent",{"_index":1033,"title":{},"body":{"components/MessageSuggestionsComponent.html":{},"injectables/SuggestionsService.html":{}}}],["parsearguments",{"_index":21,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["parsearguments(message",{"_index":27,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["passed",{"_index":559,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["path",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":1436,"title":{},"body":{"index.html":{}}}],["piano",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["picture",{"_index":325,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"components/SidenavComponent.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["picture.jpg",{"_index":974,"title":{},"body":{"components/MessageListComponent.html":{}}}],["picturegen",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["picturegenactions",{"_index":1277,"title":{},"body":{"interfaces/State-1.html":{}}}],["picturegencontainercomponent",{"_index":324,"title":{"components/PictureGenContainerComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["picturegeneffects",{"_index":447,"title":{"injectables/PictureGenEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/PictureGenEffects.html":{},"coverage.html":{}}}],["picturegenfeature",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturegenfeature.reducer",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["picturegenfeaturekey",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturegenreducer",{"_index":1284,"title":{},"body":{"interfaces/State-1.html":{}}}],["picturemessage",{"_index":553,"title":{"interfaces/PictureMessage.html":{}},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"interfaces/State-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["picturemessageservice",{"_index":1079,"title":{"injectables/PictureMessageService.html":{}},"body":{"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"coverage.html":{}}}],["picturemessagesugestions",{"_index":1095,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pictures",{"_index":780,"title":{},"body":{"components/HomeComponent.html":{},"components/PictureGenContainerComponent.html":{},"index.html":{}}}],["pictureurl",{"_index":947,"title":{},"body":{"components/MessageListComponent.html":{}}}],["picure",{"_index":1149,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["pipe",{"_index":1161,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["pitures",{"_index":784,"title":{},"body":{"components/HomeComponent.html":{}}}],["playing",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pointer",{"_index":812,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["position",{"_index":836,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{}}}],["post",{"_index":1124,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["post(message",{"_index":1133,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["poster",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["presentanional",{"_index":524,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["presentational",{"_index":1409,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":895,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["prevents",{"_index":1290,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["primary",{"_index":65,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["principles",{"_index":1440,"title":{},"body":{"index.html":{}}}],["private",{"_index":480,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}}}],["product",{"_index":10,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["product's",{"_index":89,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["product.getapiurl",{"_index":84,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["product.parsearguments(message",{"_index":63,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["products",{"_index":14,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["profile",{"_index":835,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["programming",{"_index":1462,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"properties.html":{}}}],["props",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":52,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"modules/AppModule.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["providedin",{"_index":1054,"title":{},"body":{"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}}}],["providers",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providestore",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":59,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/ModelDetailsService.html":{},"injectables/SuggestionsService.html":{}}}],["queries",{"_index":1474,"title":{},"body":{"index.html":{}}}],["question",{"_index":851,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"miscellaneous/variables.html":{}}}],["questions",{"_index":564,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["radius",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["re",{"_index":611,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["react",{"_index":602,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["reactive",{"_index":1461,"title":{},"body":{"index.html":{}}}],["read",{"_index":953,"title":{},"body":{"components/MessageListComponent.html":{}}}],["readonly",{"_index":481,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["receive",{"_index":1148,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}}}],["redirectto",{"_index":474,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["reducer.ts",{"_index":1276,"title":{},"body":{"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":1472,"title":{},"body":{"index.html":{}}}],["regular",{"_index":279,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["related",{"_index":958,"title":{},"body":{"components/MessageListComponent.html":{}}}],["relative",{"_index":837,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["relies",{"_index":72,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["reload",{"_index":1485,"title":{},"body":{"index.html":{}}}],["remove",{"_index":906,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["rendered",{"_index":612,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["repeat",{"_index":1015,"title":{},"body":{"components/MessageListComponent.html":{}}}],["request",{"_index":566,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["require",{"_index":1443,"title":{},"body":{"index.html":{}}}],["required",{"_index":961,"title":{},"body":{"components/MessageListComponent.html":{}}}],["reset",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":885,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["resource.service",{"_index":1146,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["resourceservice",{"_index":1120,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{},"coverage.html":{}}}],["resourceservice:13",{"_index":1144,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["resourceservice:21",{"_index":1132,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["resourceservice:22",{"_index":1320,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["resourceservice:25",{"_index":1322,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["resourceservice:34",{"_index":1138,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["resourceservice:35",{"_index":1131,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["resourceservice:36",{"_index":1319,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["resourceservice:38",{"_index":1142,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["resourceservice:44",{"_index":1134,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["resourceurl",{"_index":1137,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["responsetype",{"_index":1160,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["responsibility",{"_index":66,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["responsible",{"_index":1296,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["responsive",{"_index":1473,"title":{},"body":{"index.html":{}}}],["responsive_width",{"_index":1223,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restrict",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["resulting",{"_index":88,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["results",{"_index":133,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["retreived",{"_index":600,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["return",{"_index":47,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageListComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["returned",{"_index":74,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["returning",{"_index":78,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["returns",{"_index":24,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["rgb(231",{"_index":813,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(241",{"_index":801,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(99",{"_index":285,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["rgba(0",{"_index":806,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageListComponent.html":{}}}],["rgba(194",{"_index":680,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["rgba(36",{"_index":1349,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["right",{"_index":217,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["road",{"_index":1455,"title":{},"body":{"index.html":{}}}],["root",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}}}],["root'},{'name",{"_index":307,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["routermodule",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":472,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":1297,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["routing.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{}}}],["rows",{"_index":787,"title":{},"body":{"components/HomeComponent.html":{}}}],["rows:auto",{"_index":670,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["run",{"_index":1477,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"injectables/ModelDetailsService.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/internal/observable",{"_index":533,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["rxjs/operators",{"_index":718,"title":{},"body":{"injectables/ChatbotEffects.html":{},"components/MessageBoxComponent.html":{},"injectables/ResourceService.html":{}}}],["safari",{"_index":893,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["safeurl",{"_index":945,"title":{},"body":{"components/MessageListComponent.html":{},"interfaces/PictureMessage.html":{}}}],["sans",{"_index":273,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{}}}],["scale(2",{"_index":1018,"title":{},"body":{"components/MessageListComponent.html":{}}}],["screen",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["screenheight",{"_index":1194,"title":{},"body":{"components/SidenavComponent.html":{}}}],["screenwidth",{"_index":1195,"title":{},"body":{"components/SidenavComponent.html":{}}}],["scroll",{"_index":962,"title":{},"body":{"components/MessageListComponent.html":{},"index.html":{}}}],["scrollbar",{"_index":686,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["scrollingtobottom",{"_index":1002,"title":{},"body":{"components/MessageListComponent.html":{}}}],["scrolls",{"_index":1431,"title":{},"body":{"index.html":{}}}],["scrolltobottom",{"_index":922,"title":{},"body":{"components/MessageListComponent.html":{}}}],["select",{"_index":223,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["selectaimodelname",{"_index":548,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{}}}],["selected",{"_index":571,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["selectedmodel",{"_index":164,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["selectedmodel.datasize",{"_index":240,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["selectedmodel.name",{"_index":239,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["selectedmodelname",{"_index":170,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["selection",{"_index":1294,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["selectisnewconversation",{"_index":549,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{}}}],["selectmessagelist",{"_index":550,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{}}}],["selectmessagestate",{"_index":551,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{}}}],["selector",{"_index":151,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["selects",{"_index":639,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["send",{"_index":607,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"index.html":{}}}],["sendmessage",{"_index":855,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["sends",{"_index":622,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"index.html":{}}}],["sent",{"_index":618,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["serif",{"_index":274,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/HomeComponent.html":{}}}],["serve",{"_index":1479,"title":{},"body":{"index.html":{}}}],["server",{"_index":1476,"title":{},"body":{"index.html":{}}}],["service",{"_index":582,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{}}}],["services/text",{"_index":38,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["set",{"_index":627,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["setaimodelname",{"_index":546,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setmodelcommunicator",{"_index":496,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["setreourceurl",{"_index":1125,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["setreourceurl(resourceurl",{"_index":1135,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["settings",{"_index":1345,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["shadow",{"_index":674,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["short",{"_index":830,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["shot",{"_index":792,"title":{},"body":{"components/HomeComponent.html":{}}}],["show",{"_index":574,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["showpicturefullpage",{"_index":923,"title":{},"body":{"components/MessageListComponent.html":{}}}],["showpicturefullpage(pictureurl",{"_index":944,"title":{},"body":{"components/MessageListComponent.html":{}}}],["side",{"_index":1061,"title":{},"body":{"injectables/NavigationService.html":{},"components/SidenavComponent.html":{}}}],["sidenav",{"_index":1186,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":328,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["sidenav.component.html",{"_index":1188,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":1187,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav/sidenav.component",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["sidenavcomponent",{"_index":327,"title":{"components/SidenavComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signature",{"_index":92,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["simplechange",{"_index":956,"title":{},"body":{"components/MessageListComponent.html":{}}}],["simplechanges",{"_index":185,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/MessageListComponent.html":{}}}],["size",{"_index":251,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["small",{"_index":790,"title":{},"body":{"components/HomeComponent.html":{}}}],["smooth",{"_index":978,"title":{},"body":{"components/MessageListComponent.html":{}}}],["solid",{"_index":993,"title":{},"body":{"components/MessageListComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["something",{"_index":759,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["soon",{"_index":1413,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["space",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spacing",{"_index":1354,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["span",{"_index":288,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["specify",{"_index":1034,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["split",{"_index":1463,"title":{},"body":{"index.html":{}}}],["src/.../chatbot.actions.ts",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chatbot.reducer.ts",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message",{"_index":1502,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../picture",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sidenav.component.ts",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/factories/aimodel",{"_index":6,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["src/app/common/models/ai",{"_index":202,"title":{},"body":{"components/AiModelDetailComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"coverage.html":{}}}],["src/app/common/models/message",{"_index":537,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/common/models/picture",{"_index":554,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"interfaces/State-1.html":{},"coverage.html":{}}}],["src/app/common/models/text",{"_index":539,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/TextMessage.html":{},"coverage.html":{}}}],["src/app/common/services/model",{"_index":200,"title":{},"body":{"components/AiModelDetailComponent.html":{},"injectables/ModelDetailsService.html":{},"coverage.html":{}}}],["src/app/common/services/navigation.service",{"_index":1341,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["src/app/common/services/navigation.service.ts",{"_index":1058,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["src/app/common/services/navigation.service.ts:13",{"_index":1067,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/common/services/navigation.service.ts:17",{"_index":1069,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/common/services/navigation.service.ts:21",{"_index":1068,"title":{},"body":{"injectables/NavigationService.html":{}}}],["src/app/common/services/picture",{"_index":1094,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"coverage.html":{}}}],["src/app/common/services/resource.service.ts",{"_index":1165,"title":{},"body":{"injectables/ResourceService.html":{},"coverage.html":{}}}],["src/app/common/services/resource.service.ts:13",{"_index":1166,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/common/services/resource.service.ts:18",{"_index":1170,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/common/services/resource.service.ts:21",{"_index":1167,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/common/services/resource.service.ts:25",{"_index":1172,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/common/services/resource.service.ts:34",{"_index":1169,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/common/services/resource.service.ts:38",{"_index":1171,"title":{},"body":{"injectables/ResourceService.html":{}}}],["src/app/common/services/suggestions.service",{"_index":555,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["src/app/common/services/suggestions.service.ts",{"_index":1285,"title":{},"body":{"injectables/SuggestionsService.html":{},"coverage.html":{}}}],["src/app/common/services/suggestions.service.ts:19",{"_index":1302,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["src/app/common/services/suggestions.service.ts:24",{"_index":1310,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["src/app/common/services/suggestions.service.ts:25",{"_index":1307,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["src/app/common/services/suggestions.service.ts:28",{"_index":1311,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["src/app/common/services/suggestions.service.ts:29",{"_index":1309,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["src/app/common/services/suggestions.service.ts:31",{"_index":1305,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["src/app/common/services/text",{"_index":540,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"injectables/TextMessageService.html":{},"coverage.html":{}}}],["src/app/components/ai",{"_index":145,"title":{},"body":{"components/AiModelDetailComponent.html":{},"coverage.html":{}}}],["src/app/components/error",{"_index":754,"title":{},"body":{"components/ErrorMessageComponent.html":{},"coverage.html":{}}}],["src/app/components/loading",{"_index":826,"title":{},"body":{"components/LoadingMessageComponent.html":{},"coverage.html":{}}}],["src/app/components/message",{"_index":557,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"coverage.html":{}}}],["src/app/components/title",{"_index":1327,"title":{},"body":{"components/TitleTopBarComponent.html":{},"coverage.html":{}}}],["src/app/containers/chatbot",{"_index":476,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"coverage.html":{}}}],["src/app/containers/picture",{"_index":1073,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":771,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:9",{"_index":775,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts",{"_index":1185,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/sidenav/sidenav.component.ts:16",{"_index":1213,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:17",{"_index":1212,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:18",{"_index":1216,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:19",{"_index":1214,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:21",{"_index":1218,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:22",{"_index":1219,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:23",{"_index":1215,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:24",{"_index":1204,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:38",{"_index":1206,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:53",{"_index":1211,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:57",{"_index":1210,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:63",{"_index":1208,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/sidenav/sidenav.component.ts:68",{"_index":1207,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/state/chatbot/chatbot.actions",{"_index":547,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["src/app/state/chatbot/chatbot.actions.ts",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/state/chatbot/chatbot.effects.ts",{"_index":696,"title":{},"body":{"injectables/ChatbotEffects.html":{},"coverage.html":{}}}],["src/app/state/chatbot/chatbot.effects.ts:12",{"_index":700,"title":{},"body":{"injectables/ChatbotEffects.html":{}}}],["src/app/state/chatbot/chatbot.effects.ts:19",{"_index":709,"title":{},"body":{"injectables/ChatbotEffects.html":{}}}],["src/app/state/chatbot/chatbot.reducer",{"_index":552,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["src/app/state/chatbot/chatbot.reducer.ts",{"_index":1257,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/state/picture",{"_index":1097,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment",{"_index":36,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{}}}],["src/environments/environment.development",{"_index":205,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":1417,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["stable_diffusion_1_5",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stable_diffusion_xl",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stablediffusion1_5communicator",{"_index":1075,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["stablediffusion1_5url",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stablediffusionxlcommunicator",{"_index":1076,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["stablediffusionxlurl",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":1102,"title":{"index.html":{}},"body":{"components/PictureGenContainerComponent.html":{}}}],["starter",{"_index":575,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["state",{"_index":538,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{}},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state.messagelist",{"_index":1270,"title":{},"body":{"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["state.ts",{"_index":1503,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["state/chatbot/chatbot.effects",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["state/chatbot/chatbot.reducer",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["state/picture",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["statements",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["status",{"_index":1471,"title":{},"body":{"index.html":{}}}],["stay",{"_index":99,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["stays",{"_index":609,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["still",{"_index":93,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["store",{"_index":500,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"index.html":{}}}],["stored",{"_index":595,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["storedevtoolsmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forfeature(chatbotfeaturekey",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forfeature(picturegenfeaturekey",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["story",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":26,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"interfaces/Models.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":685,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":142,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["styleurl",{"_index":1022,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["styleurls",{"_index":155,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["subclasses",{"_index":50,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["subject",{"_index":1064,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/SuggestionsService.html":{}}}],["subscription",{"_index":490,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["subtitle",{"_index":262,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["success",{"_index":567,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["successmessagestate",{"_index":536,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["suggested",{"_index":604,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{}}}],["suggestion",{"_index":525,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{}}}],["suggestionclicked",{"_index":959,"title":{},"body":{"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{}}}],["suggestionorigin",{"_index":925,"title":{},"body":{"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{}}}],["suggestions",{"_index":523,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["suggestions'},{'name",{"_index":323,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["suggestions.component",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{}}}],["suggestions.component.html",{"_index":1021,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions.component.scss",{"_index":1023,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions.component.ts",{"_index":1020,"title":{},"body":{"components/MessageSuggestionsComponent.html":{},"coverage.html":{}}}],["suggestions.component.ts:12",{"_index":1027,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions.component.ts:15",{"_index":1028,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions.component.ts:16",{"_index":1026,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions.component.ts:22",{"_index":1029,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions.component.ts:26",{"_index":1031,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["suggestions/message",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"coverage.html":{}}}],["suggestionservice",{"_index":498,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["suggestionsservice",{"_index":499,"title":{"injectables/SuggestionsService.html":{}},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/SuggestionsService.html":{},"coverage.html":{}}}],["suit",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(httpclient",{"_index":1151,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["support",{"_index":1487,"title":{},"body":{"modules.html":{}}}],["supposed",{"_index":46,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["svg",{"_index":1488,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":650,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["switchmap",{"_index":714,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["switchmap((action",{"_index":704,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["t",{"_index":1168,"title":{},"body":{"injectables/ResourceService.html":{}}}],["table",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":875,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["takes",{"_index":879,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["tap",{"_index":532,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["target",{"_index":1304,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["tell",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temp",{"_index":1323,"title":{},"body":{"injectables/TextMessageService.html":{}}}],["temperature",{"_index":1451,"title":{},"body":{"index.html":{}}}],["template",{"_index":141,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["templateurl",{"_index":157,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["text",{"_index":289,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["textarea",{"_index":878,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["textfieldmodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["textmessage",{"_index":40,"title":{"interfaces/TextMessage.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/ResourceService.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textmessageservice",{"_index":37,"title":{"injectables/TextMessageService.html":{}},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/TextMessageService.html":{},"coverage.html":{}}}],["textmessagesugestions",{"_index":542,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["texttoimagemodelsname",{"_index":1096,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"interfaces/State-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["texttoimagemodelsname.openjourney",{"_index":1107,"title":{},"body":{"components/PictureGenContainerComponent.html":{},"interfaces/State-1.html":{},"miscellaneous/variables.html":{}}}],["texttoimagemodelsname.stable_diffusion_1_5",{"_index":1109,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["texttoimagemodelsname.stable_diffusion_xl",{"_index":1111,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["textual",{"_index":1147,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["think",{"_index":833,"title":{},"body":{"components/LoadingMessageComponent.html":{}}}],["this._ngzone.onstable.pipe(take(1)).subscribe",{"_index":886,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.actions$.pipe",{"_index":702,"title":{},"body":{"injectables/ChatbotEffects.html":{},"injectables/PictureGenEffects.html":{}}}],["this.addmessagetolist(usermessage",{"_index":1104,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.addusermessagetolist(usermessage",{"_index":626,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.aimodelcommunicatorcreator",{"_index":653,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.aiprofileicon",{"_index":829,"title":{},"body":{"components/LoadingMessageComponent.html":{},"components/MessageListComponent.html":{}}}],["this.apikey",{"_index":1178,"title":{},"body":{"injectables/ResourceService.html":{}}}],["this.apiurl",{"_index":122,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["this.autosize.resizetofitcontent(true",{"_index":887,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.blenderbot3bcommunicator",{"_index":657,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.blenderbotcommunicator",{"_index":654,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.changeselectedmodel(changes[\"selectedmodelname\"].currentvalue",{"_index":230,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.choosenmodel.emit(model",{"_index":1343,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["this.createusermessage(message",{"_index":624,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.dialogptcommunicator",{"_index":659,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.factorymethod",{"_index":62,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["this.forminput.nativeelement.blur",{"_index":894,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.fromservermodel(json",{"_index":1163,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["this.fullscreenpictureurl",{"_index":980,"title":{},"body":{"components/MessageListComponent.html":{}}}],["this.getheaders",{"_index":1158,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["this.getmodelbyname(modelname",{"_index":232,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.getmodelbyname(selectedmodelname",{"_index":219,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.getscreensize",{"_index":1225,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.hasnewmessagearrived",{"_index":969,"title":{},"body":{"components/MessageListComponent.html":{}}}],["this.homeiconpath",{"_index":1227,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.http.get(\"./assets/models",{"_index":1055,"title":{},"body":{"injectables/ModelDetailsService.html":{}}}],["this.httpclient.post(this.getresourceurl",{"_index":1159,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{}}}],["this.imagepath",{"_index":776,"title":{},"body":{"components/HomeComponent.html":{},"components/MessageBoxComponent.html":{},"components/SidenavComponent.html":{}}}],["this.ismobilesize",{"_index":1239,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.ispicturefullscreen",{"_index":981,"title":{},"body":{"components/MessageListComponent.html":{}}}],["this.issuggestionshowned",{"_index":591,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.issuggestionsshowed",{"_index":1040,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["this.messagelist",{"_index":587,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.messagestate",{"_index":585,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.messagesuggestionslist",{"_index":601,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.messagesuggestionslist.length",{"_index":1103,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.modeldetailsservice.getjson().subscribe(data",{"_index":211,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.modellist",{"_index":212,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.modellist.models",{"_index":236,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.modellist?.push(value",{"_index":598,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.myscrollcontainer.nativeelement.scroll",{"_index":975,"title":{},"body":{"components/MessageListComponent.html":{}}}],["this.myscrollcontainer.nativeelement.scrollheight",{"_index":976,"title":{},"body":{"components/MessageListComponent.html":{}}}],["this.navigationservice.getopennavdrawerevent().subscribe",{"_index":1231,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.navigationservice.opennavdrawer",{"_index":1342,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["this.notificationtochatbotcontainer.asobservable",{"_index":1306,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["this.notificationtochatbotcontainer.next(suggestion",{"_index":1314,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["this.notificationtopicturegencontainer.asobservable",{"_index":1308,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["this.notificationtopicturegencontainer.next(suggestion",{"_index":1317,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["this.onsendmessage(suggestion",{"_index":608,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.openeventsubscription",{"_index":1230,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.openjourneycommunicator",{"_index":1108,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.opennav",{"_index":1233,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.picturemessageservice.post(action.message).pipe",{"_index":1116,"title":{},"body":{"injectables/PictureGenEffects.html":{}}}],["this.picturemessageservice.setreourceurl(this.aimodelcommunicatorcreator.getapiurl",{"_index":1105,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.question",{"_index":888,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.screenheight",{"_index":1234,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.screenwidth",{"_index":1236,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.scrolltobottom",{"_index":971,"title":{},"body":{"components/MessageListComponent.html":{}}}],["this.selectedmodel",{"_index":220,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.selectedmodelname",{"_index":589,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.selectedmodelname$.subscribe((selectedmodelname",{"_index":649,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.selectedmodelname.subscribe((selectedmodelname",{"_index":218,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["this.sendmessage.emit(this.question",{"_index":889,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["this.setmodelcommunicator",{"_index":593,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.stablediffusion1_5communicator",{"_index":1110,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.stablediffusionxlcommunicator",{"_index":1112,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.store.dispatch(adduserquestion",{"_index":664,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.store.dispatch(adduserquestion({textmessage",{"_index":1113,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.store.dispatch(askanswerai",{"_index":638,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.store.dispatch(setaimodelname",{"_index":646,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.store.pipe(select(selectaimodelname",{"_index":590,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.store.pipe(select(selectisnewconversation",{"_index":592,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.store.pipe(select(selectmessagelist",{"_index":588,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.store.pipe(select(selectmessagestate",{"_index":586,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.subject.asobservable",{"_index":1072,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.subject.next",{"_index":1071,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.subscription",{"_index":605,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":621,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["this.suggestionorigin",{"_index":1044,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["this.suggestionservice.notificationforchatbotcontainerreceived.subscribe",{"_index":606,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.suggestionservice.notificationforpicturecontainerreceived.subscribe",{"_index":1100,"title":{},"body":{"components/PictureGenContainerComponent.html":{}}}],["this.suggestionservice.notify(suggestion",{"_index":1043,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["this.textmessageservice.post(action.message).pipe",{"_index":705,"title":{},"body":{"injectables/ChatbotEffects.html":{}}}],["this.textmessageservice.setreourceurl(this.aimodelcommunicatorcreator.getapiurl",{"_index":630,"title":{},"body":{"components/ChatbotContainerComponent.html":{}}}],["this.usericon",{"_index":972,"title":{},"body":{"components/MessageListComponent.html":{}}}],["though",{"_index":96,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["through",{"_index":1038,"title":{},"body":{"components/MessageSuggestionsComponent.html":{}}}],["throw",{"_index":1152,"title":{},"body":{"injectables/PictureMessageService.html":{},"injectables/TextMessageService.html":{}}}],["throwerror",{"_index":1175,"title":{},"body":{"injectables/ResourceService.html":{},"injectables/TextMessageService.html":{}}}],["throwerror(error.message",{"_index":1184,"title":{},"body":{"injectables/ResourceService.html":{}}}],["title",{"_index":255,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"index.html":{}}}],["titletopbarcomponent",{"_index":329,"title":{"components/TitleTopBarComponent.html":{}},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todo",{"_index":997,"title":{},"body":{"components/MessageListComponent.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/TextMessageService.html":{}}}],["togglenav",{"_index":1200,"title":{},"body":{"components/SidenavComponent.html":{}}}],["top",{"_index":258,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{}}}],["torwards",{"_index":1312,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["transform",{"_index":1017,"title":{},"body":{"components/MessageListComponent.html":{}}}],["treack",{"_index":562,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["tree",{"_index":144,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"components/TitleTopBarComponent.html":{}}}],["trigger",{"_index":884,"title":{},"body":{"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"injectables/NavigationService.html":{},"injectables/SuggestionsService.html":{}}}],["triggered",{"_index":226,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["triggerresize",{"_index":853,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["true",{"_index":970,"title":{},"body":{"components/MessageListComponent.html":{},"injectables/PictureMessageService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/TextMessageService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":762,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["tslib",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":1448,"title":{},"body":{"index.html":{}}}],["type",{"_index":31,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"interfaces/Model.html":{},"injectables/ModelDetailsService.html":{},"interfaces/Models.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"interfaces/PictureMessage.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"interfaces/TextMessage.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1500,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1470,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":183,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["underline",{"_index":291,"title":{},"body":{"components/AiModelDetailComponent.html":{}}}],["union",{"_index":1468,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":583,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["up",{"_index":1295,"title":{},"body":{"injectables/SuggestionsService.html":{}}}],["update",{"_index":645,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["updated",{"_index":640,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["url",{"_index":629,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["url.createobjecturl(json",{"_index":1153,"title":{},"body":{"injectables/PictureMessageService.html":{}}}],["use",{"_index":83,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"components/HomeComponent.html":{},"injectables/SuggestionsService.html":{}}}],["useclass",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":561,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":222,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["usericon",{"_index":917,"title":{},"body":{"components/MessageListComponent.html":{}}}],["usermessage",{"_index":623,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["users",{"_index":1447,"title":{},"body":{"index.html":{}}}],["uses",{"_index":94,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["using",{"_index":1042,"title":{},"body":{"components/MessageSuggestionsComponent.html":{},"injectables/SuggestionsService.html":{},"index.html":{}}}],["usually",{"_index":51,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["v1",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"injectables/ChatbotEffects.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureGenEffects.html":{},"injectables/PictureMessageService.html":{},"injectables/ResourceService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":303,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["variable",{"_index":596,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1505,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":118,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{}}}],["version",{"_index":1497,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1355,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["via",{"_index":635,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["video",{"_index":1420,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":531,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["viewchild('autosize",{"_index":869,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["viewchild('forminput",{"_index":871,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["viewchild('messagelisttarget",{"_index":952,"title":{},"body":{"components/MessageListComponent.html":{}}}],["visibility",{"_index":1358,"title":{},"body":{"components/TitleTopBarComponent.html":{}}}],["visible",{"_index":1432,"title":{},"body":{"index.html":{}}}],["void",{"_index":180,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/MessageSuggestionsComponent.html":{},"injectables/NavigationService.html":{},"components/PictureGenContainerComponent.html":{},"injectables/PictureMessageService.html":{},"components/SidenavComponent.html":{},"injectables/SuggestionsService.html":{},"injectables/TextMessageService.html":{},"components/TitleTopBarComponent.html":{}}}],["wait",{"_index":882,"title":{},"body":{"components/MessageBoxComponent.html":{}}}],["want",{"_index":1446,"title":{},"body":{"index.html":{}}}],["way",{"_index":98,"title":{},"body":{"interfaces/AiModelCommunicator.html":{},"classes/AiModelCommunicatorCreator.html":{},"classes/ConcreteBlenderbot3BCommunicator.html":{},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{},"classes/ConcreteBlenderbotCommunicator.html":{},"classes/ConcreteBlenderbotCommunicatorCreator.html":{},"classes/ConcreteDialogptCommunicator.html":{},"classes/ConcreteDialogptCommunicatorCreator.html":{},"classes/ConcreteFalconCommunicator.html":{},"classes/ConcreteFalconCommunicatorCreator.html":{},"classes/ConcreteLlamaCommunicator.html":{},"classes/ConcreteLlamaCommunicatorCreator.html":{},"classes/ConcreteOpenjourneyCommunicator.html":{},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{},"classes/ConcreteStableDiffusion1_5Communicator.html":{},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{},"classes/ConcreteStableDiffusionXLCommunicator.html":{},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{},"index.html":{}}}],["webkit",{"_index":687,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["weight",{"_index":805,"title":{},"body":{"components/HomeComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["went",{"_index":760,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["what's",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["width",{"_index":246,"title":{},"body":{"components/AiModelDetailComponent.html":{},"components/AppComponent.html":{},"components/ChatbotContainerComponent.html":{},"components/ErrorMessageComponent.html":{},"components/HomeComponent.html":{},"components/LoadingMessageComponent.html":{},"components/MessageBoxComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{},"components/SidenavComponent.html":{},"components/TitleTopBarComponent.html":{}}}],["window.innerheight",{"_index":1235,"title":{},"body":{"components/SidenavComponent.html":{}}}],["window.innerwidth",{"_index":1237,"title":{},"body":{"components/SidenavComponent.html":{}}}],["window:resize",{"_index":1202,"title":{},"body":{"components/SidenavComponent.html":{}}}],["within",{"_index":1428,"title":{},"body":{"index.html":{}}}],["withlatestfrom",{"_index":717,"title":{},"body":{"injectables/ChatbotEffects.html":{}}}],["work",{"_index":1003,"title":{},"body":{"components/MessageListComponent.html":{}}}],["working",{"_index":1004,"title":{},"body":{"components/MessageListComponent.html":{}}}],["wrong",{"_index":761,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["xl",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":683,"title":{},"body":{"components/ChatbotContainerComponent.html":{},"components/MessageListComponent.html":{},"components/PictureGenContainerComponent.html":{}}}],["z",{"_index":1008,"title":{},"body":{"components/MessageListComponent.html":{}}}],["zone.js",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AiModelCommunicator.html":{"url":"interfaces/AiModelCommunicator.html","title":"interface - AiModelCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiModelCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n            \n                Description\n            \n            \n                The Product interface declares the operations that all concrete products must\nimplement.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiUrl\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAPIUrl\n                                    \n                                \n                                \n                                    \n                                        parseArguments\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \ngetAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseArguments\n                        \n                    \n                \n            \n            \n                \nparseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AiModelCommunicatorCreator.html":{"url":"classes/AiModelCommunicatorCreator.html","title":"class - AiModelCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AiModelCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n            \n                Description\n            \n            \n                The Creator class declares the factory method that is supposed to return an\nobject of a Product class. The Creator's subclasses usually provide the\nimplementation of this method.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:15\n                        \n                    \n\n\n            \n                \n                        Note that the Creator may also provide some default implementation of the\nfactory method.\n\n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:29\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiModelDetailComponent.html":{"url":"components/AiModelDetailComponent.html","title":"component - AiModelDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AiModelDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ai-model-detail/ai-model-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai-model-detail\n            \n\n\n\n            \n                styleUrls\n                ./ai-model-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ai-model-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blenderBot3BModel\n                            \n                            \n                                blenderBotModel\n                            \n                            \n                                dialoGptModel\n                            \n                            \n                                LLaMAModel\n                            \n                            \n                                modelList\n                            \n                            \n                                selectedModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSelectedModel\n                            \n                            \n                                getModelByName\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedModelName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelDetailsService: ModelDetailsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelDetailsService\n                                                  \n                                                        \n                                                                        ModelDetailsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedModelName\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeSelectedModel\n                        \n                    \n                \n            \n            \n                \nchangeSelectedModel(modelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                modelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getModelByName\n                        \n                    \n                \n            \n            \n                \ngetModelByName(modelName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                modelName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Model | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blenderBot3BModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blenderBotModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialoGptModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LLaMAModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Models\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/ai-model-detail/ai-model-detail.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ModelDetailsService } from 'src/app/common/services/model-details.service';\nimport { Model, Models } from 'src/app/common/models/ai-model-details';\nimport { conversationalModelsName } from 'src/environments/environment.development';\n\n@Component({\n  selector: 'app-ai-model-detail',\n  templateUrl: './ai-model-detail.component.html',\n  styleUrls: ['./ai-model-detail.component.scss']\n})\nexport class AiModelDetailComponent implements OnInit {\n\n  @Input() selectedModelName!: Observable;\n  modelList!: Models;\n  selectedModel!: Model;\n  blenderBotModel!: Model;\n  blenderBot3BModel!: Model;\n  LLaMAModel!: Model;\n  dialoGptModel!: Model;\n\n  constructor(private modelDetailsService: ModelDetailsService) {\n  }\n\n  ngOnInit() {\n    // Load model information from local JSON\n    this.modelDetailsService.getJSON().subscribe(data => {\n      this.modelList = data;\n      // Once all models are loaded we assign the right model\n      this.selectedModelName.subscribe((selectedModelName) => {\n        let selectedModel = this.getModelByName(selectedModelName);\n        if (selectedModel) {\n          this.selectedModel = selectedModel;\n        }\n      })\n    })\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Detect when user select a different model\n    if (changes['selectedModelName'].previousValue != changes['selectedModelName'].currentValue) {\n      // Change selectedModelName with new model name. This is triggered always after user change, not at component init.\n      if(this.modelList) {\n        this.changeSelectedModel(changes[\"selectedModelName\"].currentValue);\n      }\n    }\n  }\n\n  // Change current model\n  changeSelectedModel(modelName: string) {\n    let selectedModel = this.getModelByName(modelName);\n    if (selectedModel) {\n      this.selectedModel = selectedModel;\n    }\n  }\n\n  // Returns the corresponding Model based on the given name\n  getModelByName(modelName: string): Model | undefined {\n    for (let model of this.modelList.models) {\n      if (model.name == modelName) {\n        return model;\n      }\n    }\n    // If no model with matching name found return undefined\n    return undefined;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{selectedModel.name}}\n    {{selectedModel.dataSize}} paremeters\n  \n  \n    \n      {{description}}\n    \n    \n      More information\n      launch\n    \n  \n\n    \n\n    \n                \n                    ./ai-model-detail.component.scss\n                \n                .container {\n  //min-width: 330px;\n  //max-width: 25vw;\n  container-type: inline-size;\n  container-name: ai-model-detail-container;\n  padding-left: 25px;\n  padding-right: 25px;\n}\n\n.title-block {\n  margin-top: 60px;\n  margin-bottom: 40px;\n}\n\n.title, .subtitle {\n  display: flex;\n  justify-content: center;\n}\n\n.title {\n  font-size: 1.8rem;\n  font-family: 'Gilroy-Medium', sans-serif;\n}\n\n.subtitle {\n  font-size: 0.95rem;\n  font-family: 'Gilroy-Light', sans-serif;\n  margin-top: 10px;\n}\n\n.description-block {\n  margin-right: 3%;\n  font-size: 0.95rem;\n  font-family: 'Gilroy-Regular', sans-serif;\n  max-width: 280px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.description-link {\n  display: flex;\n  margin-top: 20px;\n  color: rgb(99, 99, 214);\n}\n\n.description-link > span {\n  text-decoration: underline;\n}\n\n.description-link > mat-icon {\n  font-size: 0.95rem;\n  margin-left: 5px;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\n@container ai-model-detail-container (min-width: 424px) {\n  .description-block {\n    max-width: 80%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{selectedModel.name}}    {{selectedModel.dataSize}} paremeters              {{description}}              More information      launch      '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiModelDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                links\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        links\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: '/home', icon: 'home', title: 'Home'},\n    { path: '/chatbot', icon: 'chat', title: 'Chatbot'},\n    { path: '/picture-gen', icon: 'picture', title: 'PictureGen'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ChatAI'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ChatAI';\n  links = [\n    { path: '/home', icon: 'home', title: 'Home'},\n    { path: '/chatbot', icon: 'chat', title: 'Chatbot'},\n    { path: '/picture-gen', icon: 'picture', title: 'PictureGen'}\n  ];\n}\n\n    \n\n    \n        \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n  display: flex;\n  height: 100%;\n}\n\n.container {\n  background-color: white;\n  width: 100%;\n  border-radius: 20px;\n  //margin: 15px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  margin-right: 15px;\n}\n\n@media only screen and (max-width: 700px) {\n  .container {\n    margin-left: 15px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAiModelDetailComponent\n\nAiModelDetailComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiModelDetailComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatbotContainerComponent\n\nChatbotContainerComponent\n\nAppModule -->\n\nChatbotContainerComponent->AppModule\n\n\n\n\n\nErrorMessageComponent\n\nErrorMessageComponent\n\nAppModule -->\n\nErrorMessageComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingMessageComponent\n\nLoadingMessageComponent\n\nAppModule -->\n\nLoadingMessageComponent->AppModule\n\n\n\n\n\nMessageBoxComponent\n\nMessageBoxComponent\n\nAppModule -->\n\nMessageBoxComponent->AppModule\n\n\n\n\n\nMessageListComponent\n\nMessageListComponent\n\nAppModule -->\n\nMessageListComponent->AppModule\n\n\n\n\n\nMessageSuggestionsComponent\n\nMessageSuggestionsComponent\n\nAppModule -->\n\nMessageSuggestionsComponent->AppModule\n\n\n\n\n\nPictureGenContainerComponent\n\nPictureGenContainerComponent\n\nAppModule -->\n\nPictureGenContainerComponent->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nTitleTopBarComponent\n\nTitleTopBarComponent\n\nAppModule -->\n\nTitleTopBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AiModelDetailComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ChatbotContainerComponent\n                        \n                        \n                            ErrorMessageComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingMessageComponent\n                        \n                        \n                            MessageBoxComponent\n                        \n                        \n                            MessageListComponent\n                        \n                        \n                            MessageSuggestionsComponent\n                        \n                        \n                            PictureGenContainerComponent\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            TitleTopBarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, isDevMode  } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SidenavComponent } from './sidenav/sidenav.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { ChatbotContainerComponent } from './containers/chatbot-container/chatbot-container.component';\nimport { MessageListComponent } from './components/message-list/message-list.component';\nimport { MessageBoxComponent } from './components/message-box/message-box.component';\nimport { PictureGenContainerComponent } from './containers/picture-gen-container/picture-gen-container.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { TitleTopBarComponent } from './components/title-top-bar/title-top-bar.component';\nimport { LoadingMessageComponent } from './components/loading-message/loading-message.component';\nimport { ErrorMessageComponent } from './components/error-message/error-message.component';\nimport { AiModelDetailComponent } from './components/ai-model-detail/ai-model-detail.component';\n\nimport { StoreModule, provideStore } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment'; // Angular CLI environment\nimport { chatbotFeatureKey, chatbotFeature } from './state/chatbot/chatbot.reducer';\nimport { pictureGenFeature, pictureGenFeatureKey } from './state/picture-gen/picture-gen-reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ChatbotEffects } from './state/chatbot/chatbot.effects';\nimport { PictureGenEffects } from './state/picture-gen/picture-gen.effects';\nimport { MessageSuggestionsComponent } from './components/message-suggestions/message-suggestions.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidenavComponent,\n    ChatbotContainerComponent,\n    MessageListComponent,\n    MessageBoxComponent,\n    PictureGenContainerComponent,\n    HomeComponent,\n    TitleTopBarComponent,\n    LoadingMessageComponent,\n    ErrorMessageComponent,\n    AiModelDetailComponent,\n    MessageSuggestionsComponent\n  ],\n  imports: [\n    StoreModule.forRoot({}),\n    StoreModule.forFeature(chatbotFeatureKey, chatbotFeature.reducer),\n    StoreModule.forFeature(pictureGenFeatureKey, pictureGenFeature.reducer),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: !isDevMode(), // Restrict extension to log-only mode\n    }),\n    EffectsModule.forRoot([ChatbotEffects, PictureGenEffects]),\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    TextFieldModule,\n    MatSelectModule,\n    MatMenuModule,\n    \n  ],\n  providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ChatbotContainerComponent } from './containers/chatbot-container/chatbot-container.component';\nimport { PictureGenContainerComponent } from './containers/picture-gen-container/picture-gen-container.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'chatbot', component: ChatbotContainerComponent },\n  { path: 'picture-gen', component: PictureGenContainerComponent },\n  { path: '**', redirectTo: '/home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatbotContainerComponent.html":{"url":"components/ChatbotContainerComponent.html","title":"component - ChatbotContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatbotContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/containers/chatbot-container/chatbot-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chatbot-container\n            \n\n\n\n            \n                styleUrls\n                ./chatbot-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chatbot-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aiModelCommunicatorCreator\n                            \n                            \n                                    Private\n                                    Readonly\n                                blenderbot3BCommunicator\n                            \n                            \n                                    Private\n                                    Readonly\n                                blenderbotCommunicator\n                            \n                            \n                                containerName\n                            \n                            \n                                    Private\n                                    Readonly\n                                dialogptCommunicator\n                            \n                            \n                                isSuggestionShowned$\n                            \n                            \n                                messageList$\n                            \n                            \n                                messageState$\n                            \n                            \n                                messageSuggestionsList\n                            \n                            \n                                modelList\n                            \n                            \n                                selectedModelName$\n                            \n                            \n                                    Optional\n                                subscription\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserMessageToList\n                            \n                            \n                                createUserMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onChoosenModel\n                            \n                            \n                                onSendMessage\n                            \n                            \n                                setModelCommunicator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(textMessageService: TextMessageService, suggestionService: SuggestionsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        textMessageService\n                                                  \n                                                        \n                                                                        TextMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        suggestionService\n                                                  \n                                                        \n                                                                        SuggestionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserMessageToList\n                        \n                    \n                \n            \n            \n                \naddUserMessageToList(message: TextMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            TextMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserMessage\n                        \n                    \n                \n            \n            \n                \ncreateUserMessage(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TextMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChoosenModel\n                        \n                    \n                \n            \n            \n                \nonChoosenModel(model: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSendMessage\n                        \n                    \n                \n            \n            \n                \nonSendMessage(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelCommunicator\n                        \n                    \n                \n            \n            \n                \nsetModelCommunicator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        aiModelCommunicatorCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiModelCommunicatorCreator\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blenderbot3BCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConcreteBlenderbot3BCommunicatorCreator()\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blenderbotCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConcreteBlenderbotCommunicatorCreator()\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : containersName.CHATBOT\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dialogptCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConcreteDialogptCommunicatorCreator()\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuggestionShowned$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSuggestionsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:51\n                        \n                    \n\n            \n                \n                    Handle Suggestions from presentanional component : message-suggestion-component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModelName$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Chatbot  AI\"\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/chatbot-container/chatbot-container.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subscription, tap } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { AiModelCommunicatorCreator, ConcreteBlenderbot3BCommunicatorCreator, ConcreteBlenderbotCommunicatorCreator, ConcreteDialogptCommunicatorCreator, ConcreteFalconCommunicatorCreator, ConcreteLlamaCommunicatorCreator } from 'src/app/common/factories/aimodel-communicator-factory';\nimport { ErrorMessageState, LoadingMessageState, MessageState, SuccessMessageState } from 'src/app/common/models/message-state';\nimport { TextMessage } from 'src/app/common/models/text-message';\nimport { TextMessageService } from 'src/app/common/services/text-message.service';\nimport { containersName, environment, textMessageSugestions } from 'src/environments/environment';\nimport { conversationalModelsName } from 'src/environments/environment.development';\nimport { Store, select } from '@ngrx/store';\n\nimport { addAnswerAI, addUserQuestion, askAnswerAI, setAiModelName } from 'src/app/state/chatbot/chatbot.actions';\nimport { selectAiModelName, selectIsNewConversation, selectMessageList, selectMessageState } from 'src/app/state/chatbot/chatbot.reducer';\nimport { PictureMessage } from 'src/app/common/models/picture-message';\nimport { SuggestionsService } from 'src/app/common/services/suggestions.service';\n//import { mySignal } from 'src/app/components/message-suggestions/message-suggestions.component';\n\n@Component({\n  selector: 'app-chatbot-container',\n  templateUrl: './chatbot-container.component.html',\n  styleUrls: ['./chatbot-container.component.scss']\n})\nexport class ChatbotContainerComponent {\n  // Title displayed in the top bar\n  title: string = \"Chatbot  AI\";\n  // Name of this container passed down to message-suggestion component. Used to treack down the source of the suggestions.\n  containerName = containersName.CHATBOT;\n\n  // Contains all messages, user questions and AI answers\n  messageList$: Observable;\n\n  // Contains request state (success, loading or failed)\n  messageState$: Observable;\n\n  // Contains the names of the available models\n  modelList: string[] = [];\n  // Name of the selected model used to generate answers\n  selectedModelName$: Observable;\n\n  // If this is a new conversation show suggestions for conversation starter, otherwise hide suggestions (message-suggestions-component)\n  isSuggestionShowned$: Observable;\n\n  // Instantiate all concrete items from factory\n  private aiModelCommunicatorCreator!: AiModelCommunicatorCreator;\n  private readonly blenderbotCommunicator = new ConcreteBlenderbotCommunicatorCreator();\n  private readonly blenderbot3BCommunicator = new ConcreteBlenderbot3BCommunicatorCreator();\n  private readonly dialogptCommunicator = new ConcreteDialogptCommunicatorCreator();\n\n  /** Handle Suggestions from presentanional component : message-suggestion-component */\n  // Holds the suggestions of messages displayed in message-list component\n  messageSuggestionsList: string[];\n  // Store the subscription from the service observable to be able to unsubscribe when the component get destroyed\n  subscription?: Subscription;\n\n  constructor(private textMessageService: TextMessageService, private suggestionService: SuggestionsService, private store: Store) {\n    // Assign all observable\n    this.messageState$ = this.store.pipe(select(selectMessageState));\n    this.messageList$ = this.store.pipe(select(selectMessageList));\n    this.selectedModelName$ = this.store.pipe(select(selectAiModelName));\n    this.isSuggestionShowned$ = this.store.pipe(select(selectIsNewConversation));\n    this.setModelCommunicator();\n\n    // Fill modelList with the names of the models stored in environment variable\n    Object.entries(conversationalModelsName).forEach(([key, value]) => {\n      this.modelList?.push(value);\n    });\n\n    // Fill array of suggestions of messages based on data retreived from local JSON\n    this.messageSuggestionsList = textMessageSugestions;\n\n    // React when user click on suggested message\n    this.subscription = this.suggestionService.notificationForChatbotContainerReceived.subscribe(\n      suggestion => {\n        // When click on suggested message, the corresponding message is send\n        this.onSendMessage(suggestion);\n      }\n    )\n  }\n\n  ngOnDestroy(){\n    // Unsubscribe from observable otherwise it stays alive when the component is re-rendered and leads to multiple cast of \n    // event (ie : multiple messages sent when the user clicks on the suggestion if the component has already been rendered at least once)\n    this.subscription?.unsubscribe();\n  }\n\n  // When user sends a message\n  onSendMessage(message: string) {\n    // Create TextMessage Object with user message\n    let userMessage = this.createUserMessage(message);\n\n    // Add user message to the list of messages\n    this.addUserMessageToList(userMessage);\n\n    // Set the API URL for the model\n    this.textMessageService.setReourceUrl(this.aiModelCommunicatorCreator.getAPIUrl());\n\n    // Dispatch action to ask answer to AI via dedicated effect\n    this.store.dispatch(askAnswerAI({ message: message }));\n  }\n\n  // When user selects a model, the selected model is updated and the conresponding concrete builder is asigned as global variable\n  onChoosenModel(model: string) {\n    // Update the selected model name\n    this.store.dispatch(setAiModelName({ aiModelName: model }));\n    // Update the communicator\n    this.setModelCommunicator();\n  }\n\n  // Selects right concrete builder according to the selected model\n  setModelCommunicator() {\n    this.selectedModelName$.subscribe((selectedModelName) => {\n      switch (selectedModelName) {\n        case (conversationalModelsName.BLENDER_BOT): {\n          this.aiModelCommunicatorCreator = this.blenderbotCommunicator;\n          break;\n        }\n        case (conversationalModelsName.BLENDER_BOT_3B): {\n          this.aiModelCommunicatorCreator = this.blenderbot3BCommunicator;\n          break;\n        }\n        case conversationalModelsName.DIALOGPT: {\n          this.aiModelCommunicatorCreator = this.dialogptCommunicator;\n          break;\n        }\n      }\n    })\n  }\n\n  // Creates user message object\n  createUserMessage(message: string): TextMessage {\n    return {\n      type: \"text\",\n      isAnswer: false,\n      text: message\n    };\n  }\n\n  // Adds a user message to the list of message displayed in the template\n  addUserMessageToList(message: TextMessage) {\n    this.store.dispatch(addUserQuestion({ textMessage: message }))\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./chatbot-container.component.scss\n                \n                .chatbot-container {\n  container-type: inline-size;\n  container-name: chatbot-container;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  background-color: #f0f0f0;\n  justify-content: center;\n  border-radius: 15px;\n  overflow: hidden;\n}\n\n.chatbot-content {\n  display:grid;\n  grid-template-rows:auto 1fr auto;\n  grid-template-columns:100%;\n  width: 100%;\n  background-color: white;\n  box-shadow: 0 9px 0px 0px white, 0 -9px 0px 0px white, 12px 0 15px -4px rgba(194, 194, 194, 0.8), -12px 0 15px -4px rgba(194, 194, 194, 0.8);\n}\n\n.message-list {\n  height: 100%;\n  overflow-y: hidden;\n  -ms-overflow-style: none; \n  scrollbar-width: none;\n}\n\n.message-list::-webkit-scrollbar { \n  display: none;\n}\n\n.ai-model-detail {\n  max-width: 480px;\n}\n\n\n@container chatbot-container (max-width: 972px) {\n  .ai-model-detail {\n    display: none;\n  }\n}\n\n@container chatbot-container (min-width: 972px) and (max-width: 1599px) {\n  .ai-model-detail {\n    width: 34%;\n  }\n}\n\n\n@container chatbot-container (min-width: 1600px) {\n  .ai-model-detail {\n    //width: 40%;\n    width: 34%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatbotContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatbotEffects.html":{"url":"injectables/ChatbotEffects.html","title":"injectable - ChatbotEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatbotEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/chatbot/chatbot.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getAIAnswer$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, textMessageService: TextMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state/chatbot/chatbot.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textMessageService\n                                                  \n                                                        \n                                                                        TextMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getAIAnswer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(askAnswerAI),\n      switchMap((action) => (\n        this.textMessageService.post(action.message).pipe(\n          map((answer: TextMessage) => addAnswerAI({ textMessage: answer })),\n          catchError((error) => of(addAnswerAIError({errorMessageState: {state: \"Error\", error: { message: error }}})))\n        ))\n      )\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/state/chatbot/chatbot.effects.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { State } from \"./chatbot.reducer\";\nimport { addAnswerAI, addAnswerAIError, askAnswerAI } from \"./chatbot.actions\";\nimport { from, of } from \"rxjs\";\nimport { switchMap, map, catchError, withLatestFrom } from 'rxjs/operators';\nimport { TextMessageService } from \"src/app/common/services/text-message.service\";\nimport { TextMessage } from \"src/app/common/models/text-message\";\n\n@Injectable()\nexport class ChatbotEffects {\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private textMessageService: TextMessageService\n  ) { }\n\n  getAIAnswer$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(askAnswerAI),\n      switchMap((action) => (\n        this.textMessageService.post(action.message).pipe(\n          map((answer: TextMessage) => addAnswerAI({ textMessage: answer })),\n          catchError((error) => of(addAnswerAIError({errorMessageState: {state: \"Error\", error: { message: error }}})))\n        ))\n      )\n    ));\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteBlenderbot3BCommunicator.html":{"url":"classes/ConcreteBlenderbot3BCommunicator.html","title":"class - ConcreteBlenderbot3BCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteBlenderbot3BCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.blenderbot3BAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:122\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseArguments\n                        \n                    \n                \n            \n            \n                \nparseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteBlenderbot3BCommunicatorCreator.html":{"url":"classes/ConcreteBlenderbot3BCommunicatorCreator.html","title":"class - ConcreteBlenderbot3BCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteBlenderbot3BCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:54\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteBlenderbotCommunicator.html":{"url":"classes/ConcreteBlenderbotCommunicator.html","title":"class - ConcreteBlenderbotCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteBlenderbotCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Concrete Products provide various implementations of the Product interface.\n\n            \n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.blenderbotAPIUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:110\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseArguments\n                        \n                    \n                \n            \n            \n                \nparseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteBlenderbotCommunicatorCreator.html":{"url":"classes/ConcreteBlenderbotCommunicatorCreator.html","title":"class - ConcreteBlenderbotCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteBlenderbotCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Concrete Creators override the factory method in order to change the\nresulting product's type.\n\n            \n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:48\n\n                        \n                    \n\n\n            \n                \n                        Note that the signature of the method still uses the abstract product\ntype, even though the concrete product is actually returned from the\nmethod. This way the Creator can stay independent of concrete product\nclasses.\n\n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteDialogptCommunicator.html":{"url":"classes/ConcreteDialogptCommunicator.html","title":"class - ConcreteDialogptCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteDialogptCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.dialoGptUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:146\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseArguments\n                        \n                    \n                \n            \n            \n                \nparseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteDialogptCommunicatorCreator.html":{"url":"classes/ConcreteDialogptCommunicatorCreator.html","title":"class - ConcreteDialogptCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteDialogptCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:66\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteFalconCommunicator.html":{"url":"classes/ConcreteFalconCommunicator.html","title":"class - ConcreteFalconCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteFalconCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.falconUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:158\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteFalconCommunicatorCreator.html":{"url":"classes/ConcreteFalconCommunicatorCreator.html","title":"class - ConcreteFalconCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteFalconCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:72\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteLlamaCommunicator.html":{"url":"classes/ConcreteLlamaCommunicator.html","title":"class - ConcreteLlamaCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteLlamaCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:134\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseArguments\n                        \n                    \n                \n            \n            \n                \nparseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteLlamaCommunicatorCreator.html":{"url":"classes/ConcreteLlamaCommunicatorCreator.html","title":"class - ConcreteLlamaCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteLlamaCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:60\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteOpenjourneyCommunicator.html":{"url":"classes/ConcreteOpenjourneyCommunicator.html","title":"class - ConcreteOpenjourneyCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteOpenjourneyCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.openjourneyUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:171\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteOpenjourneyCommunicatorCreator.html":{"url":"classes/ConcreteOpenjourneyCommunicatorCreator.html","title":"class - ConcreteOpenjourneyCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteOpenjourneyCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:78\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteStableDiffusion1_5Communicator.html":{"url":"classes/ConcreteStableDiffusion1_5Communicator.html","title":"class - ConcreteStableDiffusion1_5Communicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteStableDiffusion1_5Communicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.stableDiffusion1_5Url\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:197\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:199\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:203\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html":{"url":"classes/ConcreteStableDiffusion1_5CommunicatorCreator.html","title":"class - ConcreteStableDiffusion1_5CommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteStableDiffusion1_5CommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:90\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteStableDiffusionXLCommunicator.html":{"url":"classes/ConcreteStableDiffusionXLCommunicator.html","title":"class - ConcreteStableDiffusionXLCommunicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteStableDiffusionXLCommunicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AiModelCommunicator\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.stableDiffusionXlUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/common/factories/aimodel-communicator-factory.ts:184\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/factories/aimodel-communicator-factory.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcreteStableDiffusionXLCommunicatorCreator.html":{"url":"classes/ConcreteStableDiffusionXLCommunicatorCreator.html","title":"class - ConcreteStableDiffusionXLCommunicatorCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcreteStableDiffusionXLCommunicatorCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/factories/aimodel-communicator-factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AiModelCommunicatorCreator\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                factoryMethod\n                            \n                            \n                                    Public\n                                getAPIUrl\n                            \n                            \n                                    Public\n                                parseArguments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        factoryMethod\n                        \n                    \n                \n            \n            \n                \n                        \n                    factoryMethod()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:84\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         AiModelCommunicator\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAPIUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAPIUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:29\n\n                        \n                    \n\n\n            \n                \n                        Also note that, despite its name, the Creator's primary responsibility is\nnot creating products. Usually, it contains some core business logic that\nrelies on Product objects, returned by the factory method. Subclasses can\nindirectly change that business logic by overriding the factory method\nand returning a different type of product from it.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseArguments(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AiModelCommunicatorCreator\n\n                        \n                    \n                    \n                        \n                                Defined in         AiModelCommunicatorCreator:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"src/environments/environment\";\nimport { TextMessageService } from \"../services/text-message.service\";\nimport { TextMessage } from \"../models/text-message\";\n\n/**\n * The Creator class declares the factory method that is supposed to return an\n * object of a Product class. The Creator's subclasses usually provide the\n * implementation of this method.\n */\nexport abstract class AiModelCommunicatorCreator {\n  /**\n   * Note that the Creator may also provide some default implementation of the\n   * factory method.\n   */\n  public abstract factoryMethod(): AiModelCommunicator;\n\n  public parseArguments(message: string): string {\n    const product = this.factoryMethod();\n    return product.parseArguments(message);\n  }\n\n  /**\n   * Also note that, despite its name, the Creator's primary responsibility is\n   * not creating products. Usually, it contains some core business logic that\n   * relies on Product objects, returned by the factory method. Subclasses can\n   * indirectly change that business logic by overriding the factory method\n   * and returning a different type of product from it.\n   */\n  public getAPIUrl(): string {\n      // Call the factory method to create a Product object.\n      const product = this.factoryMethod();\n      // Now, use the product.\n      return product.getAPIUrl();\n  }\n}\n\n/**\n * Concrete Creators override the factory method in order to change the\n * resulting product's type.\n */\nexport class ConcreteBlenderbotCommunicatorCreator extends AiModelCommunicatorCreator {\n  /**\n   * Note that the signature of the method still uses the abstract product\n   * type, even though the concrete product is actually returned from the\n   * method. This way the Creator can stay independent of concrete product\n   * classes.\n   */\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbotCommunicator();\n  }\n}\n\nexport class ConcreteBlenderbot3BCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteBlenderbot3BCommunicator();\n  }\n}\n\nexport class ConcreteLlamaCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteLlamaCommunicator();\n  }\n}\n\nexport class ConcreteDialogptCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteDialogptCommunicator();\n  }\n}\n\nexport class ConcreteFalconCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteFalconCommunicator();\n  }\n}\n\nexport class ConcreteOpenjourneyCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteOpenjourneyCommunicator();\n  }\n}\n\nexport class ConcreteStableDiffusionXLCommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusionXLCommunicator;\n  }\n}\n\nexport class ConcreteStableDiffusion1_5CommunicatorCreator extends AiModelCommunicatorCreator {\n  public factoryMethod(): AiModelCommunicator {\n      return new ConcreteStableDiffusion1_5Communicator;\n  }\n}\n\n/**\n * The Product interface declares the operations that all concrete products must\n * implement.\n */\ninterface AiModelCommunicator {\n  apiUrl: string;\n  getAPIUrl(): string;\n  parseArguments(message: string): string;\n}\n\n\n/**\n * Concrete Products provide various implementations of the Product interface.\n */\nclass ConcreteBlenderbotCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbotAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteBlenderbot3BCommunicator implements AiModelCommunicator {\n  apiUrl = environment.blenderbot3BAPIUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteLlamaCommunicator implements AiModelCommunicator {\n  apiUrl = environment.apiUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteDialogptCommunicator implements AiModelCommunicator {\n  apiUrl = environment.dialoGptUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  parseArguments(message: string): string {\n    return JSON.stringify(message);\n  }\n}\n\nclass ConcreteFalconCommunicator implements AiModelCommunicator {\n  apiUrl = environment.falconUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteOpenjourneyCommunicator implements AiModelCommunicator {\n  apiUrl = environment.openjourneyUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusionXLCommunicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusionXlUrl;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n\nclass ConcreteStableDiffusion1_5Communicator implements AiModelCommunicator {\n  apiUrl = environment.stableDiffusion1_5Url;\n\n  public getAPIUrl(): string {\n      return this.apiUrl;\n  }\n\n  public parseArguments(message: string): string {\n    console.log(JSON.stringify({inputs: message}));\n    return JSON.stringify({inputs: message});\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorMessageComponent.html":{"url":"components/ErrorMessageComponent.html","title":"component - ErrorMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/error-message/error-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-message\n            \n\n\n\n            \n                styleUrls\n                ./error-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.scss']\n})\nexport class ErrorMessageComponent {\n\n}\n\n    \n\n    \n        \n  Oups something went wrong, try again\n\n\n    \n\n    \n                \n                    ./error-message.component.scss\n                \n                .error-message-container {\n  border-radius: 15px;\n  width: fit-content;\n  min-height: 45px;\n  min-width: 100px;\n  max-width: 650px;\n  background-color: #dda1a1;  \n}\n\n.error-message {\n  padding-top: 25px;\n  padding-bottom: 25px;\n  padding-left: 25px;\n  padding-right: 25px;\n  font-size: 1.25rem;\n  color: #713c3c;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Oups something went wrong, try again'\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ImagePath\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ImagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  ImagePath: string;\n\n  constructor() {\n    this.ImagePath = '/assets/logo-2.jpg';\n  }\n\n}\n\n    \n\n    \n         \n-->\n  \n\n  \n    \n    \n      Use your imagination to create pictures with the help of AI or chat with a bot\n    \n  \n\n\n\n  \n    \n      Chat with Facebook bot\n      Generate pitures with AI\n    \n  \n-->\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                a { color: inherit; } \n\nbutton {\n  color: inherit;\n}\n\n.grid {\n  container-type: inline-size;\n  container-name: homeComponentContainer;\n  height: 100%;\n  display: grid;\n  grid-template-rows: 1fr 2fr 1fr;\n}\n\n.item-small {\n  min-height: 10px;\n  display: flex;\n  justify-content: center;\n}\n\n.hero-shot-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-left: 10%;\n  padding-right: 10%;\n  text-align: center;\n}\n\n.hero-shot {\n  width: 100%;\n}\n\n.description {\n  font-size: 1rem;\n}\n\n.call-to-action {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n}\n\n.cta-button {\n  margin-top: 25px;\n  margin-left: 35px;\n  margin-right: 35px;\n  height: 60px;\n  width: 270px;\n  background-color: rgb(241, 241, 241);\n  border-radius: 16px;\n  border-style: none;\n  font-family: 'Gilroy-Light', sans-serif;\n  font-size: 1.05rem;\n  font-weight: 100;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n}\n\n.cta-button:hover {\n  cursor: pointer;\n  background-color: rgb(231, 231, 231);\n}\n\n@container homeComponentContainer (min-width: 600px) and (max-width: 959.98px) {\n  .hero-shot {\n    width: 450px;\n  }\n\n  .description {\n    font-size: 1.2rem;\n  }\n\n  .cta-button {\n    height: 72px;\n    width: 320px;\n  }\n\n  .call-to-action {\n    flex-direction: column;\n  }\n}\n\n@container homeComponentContainer (min-width: 960px) and (max-width: 1279.98px) {\n  .hero-shot {\n    width: 450px;\n  }\n\n  .description {\n    font-size: 1.2rem;\n  }\n\n  .cta-button {\n    height: 60px;\n    width: 270px;\n  }\n\n  .call-to-action { \n    flex-direction: row;\n  }\n}\n\n@container homeComponentContainer (min-width: 1280px) {\n  .hero-shot {\n    width: 450px;\n  }\n\n  .description {\n    font-size: 1.2rem;\n  }\n\n  .call-to-action { \n    flex-direction: row;\n  }\n\n  .cta-button {\n    height: 72px;\n    width: 290px;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->                  Use your imagination to create pictures with the help of AI or chat with a bot                  Chat with Facebook bot      Generate pitures with AI      -->'\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingMessageComponent.html":{"url":"components/LoadingMessageComponent.html","title":"component - LoadingMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loading-message/loading-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-message\n            \n\n\n\n            \n                styleUrls\n                ./loading-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AIProfileIcon\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loading-message/loading-message.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AIProfileIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/loading-message/loading-message.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-message',\n  templateUrl: './loading-message.component.html',\n  styleUrls: ['./loading-message.component.scss']\n})\nexport class LoadingMessageComponent {\n\n  AIProfileIcon: string;\n\n  constructor() {\n    this.AIProfileIcon = '/assets/logo-short-bw-2.png';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  Let me think about it...  \n\n\n    \n\n    \n                \n                    ./loading-message.component.scss\n                \n                .loading-message-container {\n  display: flex;\n  align-items: center;\n  container-type: inline-size;\n  container-name: loadingMessage;\n}\n\n.ai-profile-icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 48px;\n  height: 48px;\n  margin-right: 15px;\n  background-color: #24252d;\n  border-radius: 15px;\n}\n\n.ai-profile-icon {\n  height: 38px;\n}\n\n.loading-message {\n  font-size: 1.15rem;\n  color: #8d8c8c;\n}\n\n@container loadingMessage (min-width: 535px) { \n  .ai-profile-icon-container { \n    width: 55px;\n    height: 55px;\n  }\n\n  .ai-profile-icon {\n    height: 42px;\n  }\n\n  .loading-message {\n    font-size: 1.25rem;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Let me think about it...  '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageBoxComponent.html":{"url":"components/MessageBoxComponent.html","title":"component - MessageBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/message-box/message-box.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-box\n            \n\n\n\n            \n                styleUrls\n                ./message-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                autosize\n                            \n                            \n                                    \n                                formInput\n                            \n                            \n                                ImagePath\n                            \n                            \n                                question\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onKeydown\n                            \n                            \n                                onSendMessage\n                            \n                            \n                                triggerResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messageState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/message-box/message-box.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messageState\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-box/message-box.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sendMessage\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-box/message-box.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onKeydown\n                        \n                    \n                \n            \n            \n                \nonKeydown(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-box/message-box.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSendMessage\n                        \n                    \n                \n            \n            \n                \nonSendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-box/message-box.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerResize\n                        \n                    \n                \n            \n            \n                \ntriggerResize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-box/message-box.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        autosize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkTextareaAutosize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('autosize')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-box/message-box.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        formInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('formInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-box/message-box.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ImagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-box/message-box.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-box/message-box.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CdkTextareaAutosize } from '@angular/cdk/text-field';\nimport { Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport { MessageState } from 'src/app/common/models/message-state';\n\n@Component({\n  selector: 'app-message-box',\n  templateUrl: './message-box.component.html',\n  styleUrls: ['./message-box.component.scss']\n})\nexport class MessageBoxComponent {\n  @Input() messageState!: Observable;\n  @Output() sendMessage = new EventEmitter();\n\n  @ViewChild('autosize')\n  autosize!: CdkTextareaAutosize;\n\n  @ViewChild('formInput')\n  formInput!: ElementRef;\n  \n  question: string = \"\";\n  ImagePath: string;\n\n  constructor(private _ngZone: NgZone) {\n    this.ImagePath = '/assets/send.png';\n  }\n\n  // Expand textarea when text takes multiples lines\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n\n  onSendMessage() {\n    if (this.question != '') {\n      this.sendMessage.emit(this.question);\n      this.question = \"\";\n    }\n\n    // Dismiss keyboard on iOS Safari Webkit\n    this.formInput.nativeElement.blur();\n  }\n\n  onKeydown(event: Event){\n    // Prevent enter key from creating a new line\n    event.preventDefault();\n  }\n}\n\n    \n\n    \n        \n\n  -->\n    \n  -->\n\n\n\n\n  \n\n\n\n    \n\n    \n                \n                    ./message-box.component.scss\n                \n                .message-box-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 15px;\n}\n\n.message-box-form {\n  display: flex;\n  flex-grow: 1;\n}\n\n.message-box-input {\n  flex-grow: 1;\n  width: 100%;\n  border-radius: 15px;\n  //min-height: 45px;\n  //height: 45px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  font-size: 16px;\n\n  background-color: #d8d8d8;\n  //border-color: inherit;\n  border-style: none;\n  resize: none;\n\n  border: none;\n  overflow: auto;\n  outline: none;\n\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n\n  resize: none; /*remove the resize handle on the bottom right*/\n}\n\n.message-box-input:focus {\n  background-color: #c0c0c0;\n}\n\n.button-send-container {\n  margin-left: 15px;\n}\n\n.button-send {\n  width: 45px;\n  height: 45px;\n  display: flex;\n  background-color: orange;\n  border-style: none;\n  border-radius: 12px;\n  cursor: pointer;\n}\n\n.button-send-picture {\n  margin: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  -->      -->  '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageListComponent.html":{"url":"components/MessageListComponent.html","title":"component - MessageListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/message-list/message-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-list\n            \n\n\n\n            \n                styleUrls\n                ./message-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AIProfileIcon\n                            \n                            \n                                fullScreenPictureUrl\n                            \n                            \n                                hasNewMessageArrived\n                            \n                            \n                                isPictureFullScreen\n                            \n                            \n                                    \n                                    Private\n                                myScrollContainer\n                            \n                            \n                                UserIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                castMessageAsPictureMessage\n                            \n                            \n                                castMessageAsTextMessage\n                            \n                            \n                                closeFullScreenPicture\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scrollToBottom\n                            \n                            \n                                showPictureFullPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSuggestionsShowed\n                            \n                            \n                                messageList\n                            \n                            \n                                messageState\n                            \n                            \n                                messageSuggestionsList\n                            \n                            \n                                suggestionOrigin\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/message-list/message-list.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isSuggestionsShowed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-list/message-list.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageList\n                    \n                \n                \n                    \n                        Type :     (TextMessage | PictureMessage)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-list/message-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageState\n                    \n                \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-list/message-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageSuggestionsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-list/message-list.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suggestionOrigin\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-list/message-list.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        castMessageAsPictureMessage\n                        \n                    \n                \n            \n            \n                \ncastMessageAsPictureMessage(message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PictureMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        castMessageAsTextMessage\n                        \n                    \n                \n            \n            \n                \ncastMessageAsTextMessage(message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TextMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeFullScreenPicture\n                        \n                    \n                \n            \n            \n                \ncloseFullScreenPicture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToBottom\n                        \n                    \n                \n            \n            \n                \nscrollToBottom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPictureFullPage\n                        \n                    \n                \n            \n            \n                \nshowPictureFullPage(pictureUrl: SafeUrl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-list/message-list.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pictureUrl\n                                            \n                                                        SafeUrl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        AIProfileIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-list/message-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullScreenPictureUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeUrl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-list/message-list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNewMessageArrived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-list/message-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPictureFullScreen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-list/message-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        myScrollContainer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('messageListTarget', {read: ElementRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-list/message-list.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/message-list/message-list.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, OnInit, Output, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport { TextMessage } from 'src/app/common/models/text-message';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { MessageState, SuccessMessageState } from 'src/app/common/models/message-state';\nimport { PictureMessage } from 'src/app/common/models/picture-message';\nimport { SafeUrl } from '@angular/platform-browser';\nimport { Observable, distinctUntilChanged } from 'rxjs';\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message-list.component.scss']\n})\nexport class MessageListComponent {\n\n  @Input()\n  messageState!: Observable;\n  // List of messages displayed\n  @Input() messageList!: (TextMessage | PictureMessage)[];\n\n  // SUggestions related inputs\n  @Input() messageSuggestionsList: string[] = [];\n  @Input() suggestionOrigin!: string;\n  @Input() isSuggestionsShowed!: boolean;\n  //@Output() suggestionClicked = new EventEmitter();\n\n  // Used to access the list height in DOM (required to scroll to bottom of conversation)\n  @ViewChild('messageListTarget', { read: ElementRef }) private myScrollContainer!: ElementRef;\n\n  hasNewMessageArrived: boolean = false;\n  isPictureFullScreen: boolean = false;\n  fullScreenPictureUrl!: SafeUrl;\n\n  AIProfileIcon: string;\n  UserIcon: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    console.log(changes);\n    // Detect new message has arrived to trigger auto-scroll\n    if (changes[\"messageList\"].currentValue != changes[\"messageList\"].previousValue) {\n      console.log(\"value changed\");\n      this.hasNewMessageArrived = true;\n    }\n  }\n\n  ngAfterViewChecked() {\n    // Scroll to bottom when new message has arrived\n    if (this.hasNewMessageArrived) {\n      this.hasNewMessageArrived = false;\n      this.scrollToBottom();\n    }\n  }\n\n  constructor(private cdRef: ChangeDetectorRef) {\n    this.AIProfileIcon = '/assets/logo-short-bw-2.png';\n    this.UserIcon = '/assets/user-picture.jpg';\n  }\n\n  // Scroll list to bottom of ViewChild\n  scrollToBottom(): void {\n    this.myScrollContainer.nativeElement.scroll({\n      top: this.myScrollContainer.nativeElement.scrollHeight,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  // Display the picture in full screen\n  showPictureFullPage(pictureUrl: SafeUrl) {\n    this.fullScreenPictureUrl = pictureUrl;\n    this.isPictureFullScreen = true;\n  }\n\n  closeFullScreenPicture() {\n    console.log(\"close\");\n    this.isPictureFullScreen = false;\n  }\n\n  castMessageAsPictureMessage(message: any): PictureMessage {\n    return message;\n  }\n\n  castMessageAsTextMessage(message: any): TextMessage {\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        \n          \n            {{ message.text }}\n            \n              \n            \n          \n        \n        \n        \n          \n            {{ castMessageAsPictureMessage(message).picture }}-->\n            \n            \n              \n            \n          \n        \n      \n\n      \n      \n        \n          \n            {{ castMessageAsTextMessage(message).text }} \n            \n              \n            \n          \n        \n      \n    \n  \n\n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n\n\n  close\n  \n\n    \n\n    \n                \n                    ./message-list.component.scss\n                \n                #message-list-container {\n  container-type: inline-size;\n  container-name: messageListContainer;\n  height: 100%;\n  border-radius: 15px;\n  padding-left: 15px;\n  padding-right: 15px;\n  overflow-y: scroll;\n  -ms-overflow-style: none; \n  scrollbar-width: none;\n}\n\n#message-list-container::-webkit-scrollbar { \n  display: none;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  padding-top: 25px;\n}\n\n.answer-container, .question-container {\n  border-radius: 15px;\n  width: fit-content;\n  min-height: 45px;\n  min-width: 86px;\n  max-width: 650px;\n  margin-bottom: 15px;\n}\n\n.question-container {\n  align-items: flex-end;\n  position: relative;\n  float: right;\n}\n\n.answer, .question {\n  border-radius: 15px;\n  padding-top: 15px;\n  padding-bottom: 24px;\n  padding-left: 15px;\n  padding-right: 15px;\n  font-size: 1.15rem;\n}\n\n.answer {\n  background-color: #f3f5f7;\n}\n\n.question {\n  background-color: white;\n  border-style: solid;\n  border-color: #f3f5f7;\n  border-width: 2px;\n}\n\n.ai-profile-icon-container, .user-profile-icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 48px;\n  height: 48px;\n  margin-top: -18px;\n  border-radius: 15px;\n}\n\n.ai-profile-icon-container {\n  margin-left: 20px;\n  background-color: #24252d;\n}\n\n.ai-profile-icon {\n  height: 38px;\n}\n\n.user-profile-icon-container {\n  float: right;\n  margin-right: 20px;\n}\n\n.user-profile-icon {\n  width: 100%;\n  border-radius: 15px;\n}\n\n.generated-picture {\n  display: block;\n  \n  //TODO: a fixed height is used here instead of 100% to make scrollingToBottom work, otherwise auto scroll not working\n  height: 300px;\n  max-width: 450px;\n  border-radius: 15px;\n  cursor: pointer;\n}\n\n.fullpagePictureContainer {\n  position: absolute;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.849);\n}\n\n#fullpagePicture {\n  //height: fit-content;\n  width: 100%;\n  max-width: 550px;\n  //background-size: cover;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-repeat: no-repeat no-repeat;\n  background-position: center center;\n  background-color: black;\n}\n\n.close-icon {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  color: white;\n  transform: scale(2);\n  cursor: pointer;\n}\n\napp-message-suggestions {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n}\n\n@container messageListContainer (min-width: 535px) {\n  .container {\n    padding-top: 45px;\n  }\n\n  .answer-container, .question-container {\n    margin-bottom: 45px;\n    min-width: 100px;\n  }\n\n  .answer, .question {\n    padding-top: 25px;\n    padding-bottom: 30px;\n    padding-left: 25px;\n    padding-right: 25px;\n    font-size: 1.15rem;\n  }\n\n  .ai-profile-icon-container, .user-profile-icon-container {\n    width: 55px;\n    height: 55px;\n    margin-top: -18px;\n  }\n\n  .ai-profile-icon {\n    height: 42px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ message.text }}                                                                                              {{ castMessageAsPictureMessage(message).picture }}-->                                                                                                                    {{ castMessageAsTextMessage(message).text }}                                                                                                         close  '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageSuggestionsComponent.html":{"url":"components/MessageSuggestionsComponent.html","title":"component - MessageSuggestionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageSuggestionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/message-suggestions/message-suggestions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-suggestions\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./message-suggestions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./message-suggestions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSuggestionClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSuggestionsShowed\n                            \n                            \n                                messageSuggestionsList\n                            \n                            \n                                suggestionOrigin\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, suggestionService: SuggestionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/message-suggestions/message-suggestions.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        suggestionService\n                                                  \n                                                        \n                                                                        SuggestionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isSuggestionsShowed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-suggestions/message-suggestions.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageSuggestionsList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-suggestions/message-suggestions.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suggestionOrigin\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/message-suggestions/message-suggestions.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-suggestions/message-suggestions.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSuggestionClick\n                        \n                    \n                \n            \n            \n                \nonSuggestionClick(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/message-suggestions/message-suggestions.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SuggestionsService } from 'src/app/common/services/suggestions.service';\n\n@Component({\n  selector: 'app-message-suggestions',\n  templateUrl: './message-suggestions.component.html',\n  styleUrl: './message-suggestions.component.scss'\n})\nexport class MessageSuggestionsComponent implements OnInit {\n  // List of message suggestions send from parent container\n  @Input() messageSuggestionsList: string[] = [];\n  // Specify the container from where the suggestion originated (ex: chatbot-container, picture-gen-container...)\n  // Used when send notification through the service to the right parent container\n  @Input() suggestionOrigin!: string;\n  @Input() isSuggestionsShowed!: boolean;\n  //@Output() suggestionClicked = new EventEmitter();\n  \n\n  constructor(private elementRef: ElementRef, private suggestionService: SuggestionsService) {}\n\n  ngOnInit() {\n    console.log(this.isSuggestionsShowed);\n  }\n\n  onSuggestionClick(suggestion: string) {\n    // Hide suggestions\n    //this.isSuggestionsShowed = false;\n    // Notify top parent container using SuggestionService\n    this.suggestionService.notify(suggestion, this.suggestionOrigin);\n  }\n}\n    \n\n    \n        \n  \n    \n      {{suggestion}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{suggestion}}      '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageSuggestionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/models/ai-model-details.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            dataSize\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Models {\n  models: Model[]\n}\n\nexport interface Model {\n  name: string\n  author: string\n  dataSize: string\n  description: string[]\n  link: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelDetailsService.html":{"url":"injectables/ModelDetailsService.html","title":"injectable - ModelDetailsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModelDetailsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/services/model-details.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/services/model-details.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    getJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/model-details.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelDetailsService {\n\n  constructor(private http: HttpClient) { }\n\n  public getJSON(): Observable {\n    return this.http.get(\"./assets/models-info.json\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Models.html":{"url":"interfaces/Models.html","title":"interface - Models","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Models\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/models/ai-model-details.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            models\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        models\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        models:         Model[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Models {\n  models: Model[]\n}\n\nexport interface Model {\n  name: string\n  author: string\n  dataSize: string\n  description: string[]\n  link: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/services/navigation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that allows any component to trigger (open) the side navigation drawer\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOpenNavDrawerEvent\n                            \n                            \n                                openNavDrawer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/services/navigation.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOpenNavDrawerEvent\n                        \n                    \n                \n            \n            \n                \ngetOpenNavDrawerEvent()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/navigation.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNavDrawer\n                        \n                    \n                \n            \n            \n                \nopenNavDrawer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/navigation.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/navigation.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n/**\n * Service that allows any component to trigger (open) the side navigation drawer\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigationService {\n\n  private subject = new Subject();\n\n  constructor() { }\n\n  openNavDrawer() {\n    this.subject.next(\"\");\n  }\n\n  getOpenNavDrawerEvent(): Observable{ \n    return this.subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureGenContainerComponent.html":{"url":"components/PictureGenContainerComponent.html","title":"component - PictureGenContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureGenContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/containers/picture-gen-container/picture-gen-container.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-picture-gen-container\n            \n\n\n\n            \n                styleUrls\n                ./picture-gen-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-gen-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aiModelCommunicatorCreator\n                            \n                            \n                                containerName\n                            \n                            \n                                isSuggestionShowned$\n                            \n                            \n                                messageList$\n                            \n                            \n                                messageState$\n                            \n                            \n                                messageSuggestionsList\n                            \n                            \n                                modelList\n                            \n                            \n                                    Private\n                                    Readonly\n                                openjourneyCommunicator\n                            \n                            \n                                selectedModelName$\n                            \n                            \n                                    Private\n                                    Readonly\n                                stableDiffusion1_5Communicator\n                            \n                            \n                                    Private\n                                    Readonly\n                                stableDiffusionXLCommunicator\n                            \n                            \n                                    Optional\n                                subscription\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMessageToList\n                            \n                            \n                                castMessageAsPictureMessage\n                            \n                            \n                                createUserMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onChoosenModel\n                            \n                            \n                                onSendMessage\n                            \n                            \n                                setModelCommunicator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureMessageService: PictureMessageService, suggestionService: SuggestionsService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pictureMessageService\n                                                  \n                                                        \n                                                                        PictureMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        suggestionService\n                                                  \n                                                        \n                                                                        SuggestionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMessageToList\n                        \n                    \n                \n            \n            \n                \naddMessageToList(message: TextMessage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            TextMessage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        castMessageAsPictureMessage\n                        \n                    \n                \n            \n            \n                \ncastMessageAsPictureMessage(message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PictureMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserMessage\n                        \n                    \n                \n            \n            \n                \ncreateUserMessage(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TextMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChoosenModel\n                        \n                    \n                \n            \n            \n                \nonChoosenModel(model: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSendMessage\n                        \n                    \n                \n            \n            \n                \nonSendMessage(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setModelCommunicator\n                        \n                    \n                \n            \n            \n                \nsetModelCommunicator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        aiModelCommunicatorCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiModelCommunicatorCreator\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        containerName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : containersName.PICTUREGEN\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuggestionShowned$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageList$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSuggestionsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:51\n                        \n                    \n\n            \n                \n                    Handle Suggestions from presentanional component : message-suggestion-component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modelList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        openjourneyCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConcreteOpenjourneyCommunicatorCreator()\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedModelName$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        stableDiffusion1_5Communicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConcreteStableDiffusion1_5CommunicatorCreator()\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        stableDiffusionXLCommunicator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConcreteStableDiffusionXLCommunicatorCreator()\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Image Generator\"\n                    \n                \n                    \n                        \n                                Defined in src/app/containers/picture-gen-container/picture-gen-container.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AiModelCommunicatorCreator, ConcreteOpenjourneyCommunicatorCreator, ConcreteStableDiffusion1_5CommunicatorCreator, ConcreteStableDiffusionXLCommunicatorCreator } from 'src/app/common/factories/aimodel-communicator-factory';\nimport { ErrorMessageState, LoadingMessageState, MessageState, SuccessMessageState } from 'src/app/common/models/message-state';\nimport { PictureMessage } from 'src/app/common/models/picture-message';\nimport { TextMessage } from 'src/app/common/models/text-message';\nimport { PictureMessageService } from 'src/app/common/services/picture-message.service';\nimport { containersName, pictureMessageSugestions, textToImageModelsName } from 'src/environments/environment';\nimport { Store, select } from '@ngrx/store';\nimport { addUserQuestion, askAnswerAI, setAiModelName } from 'src/app/state/picture-gen/picture-gen.actions';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { selectAiModelName, selectMessageState, selectMessageList, selectIsNewConversation } from 'src/app/state/picture-gen/picture-gen-reducer';\nimport { SuggestionsService } from 'src/app/common/services/suggestions.service';\nimport { Subscription } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-picture-gen-container',\n  templateUrl: './picture-gen-container.component.html',\n  styleUrls: ['./picture-gen-container.component.scss']\n})\nexport class PictureGenContainerComponent {\n  // Title displayed in the top bar\n  title: string = \"Image Generator\";\n  // Name of this container passed down to message-suggestion component. Used to treack down the source of the suggestions.\n  containerName = containersName.PICTUREGEN;\n\n  // List of messages send by user (TextMessage) and AI pictures answers (PictureMessage)\n  messageList$: Observable;\n\n  // Contains request state (success, loading or failed)\n  messageState$: Observable;\n\n  // Contains the names of the available models\n  modelList: string[] = [];\n  \n  // Name of the selected model used to generate answers\n  selectedModelName$: Observable;\n\n  // If this is a new conversation show suggestions for conversation starter, otherwise hide suggestions (message-suggestions-component)\n  isSuggestionShowned$: Observable;\n\n  // Instantiate all concrete items from factory\n  private aiModelCommunicatorCreator!: AiModelCommunicatorCreator;\n  private readonly openjourneyCommunicator = new ConcreteOpenjourneyCommunicatorCreator();\n  private readonly stableDiffusion1_5Communicator = new ConcreteStableDiffusion1_5CommunicatorCreator();\n  private readonly stableDiffusionXLCommunicator = new ConcreteStableDiffusionXLCommunicatorCreator();\n\n  /** Handle Suggestions from presentanional component : message-suggestion-component */\n  // Holds the suggestions of messages displayed in message-list component\n  messageSuggestionsList: string[];\n  // Store the subscription from the service observable to be able to unsubscribe when the component get destroyed\n  subscription?: Subscription;\n\n  constructor(private pictureMessageService: PictureMessageService, private suggestionService: SuggestionsService, private store: Store) {\n    // Assign all observable\n    this.messageState$ = this.store.pipe(select(selectMessageState));\n    this.messageList$ = this.store.pipe(select(selectMessageList));\n    this.selectedModelName$ = this.store.pipe(select(selectAiModelName));\n    this.isSuggestionShowned$ = this.store.pipe(select(selectIsNewConversation));\n    this.setModelCommunicator();\n\n    // Fill modelList with the names of the models stored in environment variable\n    Object.entries(textToImageModelsName).forEach(([key, value]) => {\n      this.modelList?.push(value);\n    });\n\n    // Fill array of suggestions of messages based on data retreived from local JSON\n    this.messageSuggestionsList = pictureMessageSugestions;\n\n    // React when user click on suggested message\n    this.subscription = this.suggestionService.notificationForPictureContainerReceived.subscribe(\n      suggestion => {\n        // When click on suggested message, the corresponding message is send\n        this.onSendMessage(suggestion);\n      }\n    )\n  }\n\n  ngOnDestroy(){\n    // Unsubscribe from observable otherwise it stays alive when the component is re-rendered and leads to multiple cast of \n    // event (ie : multiple messages sent when the user clicks on the suggestion if the component has already been rendered at least once)\n    this.subscription?.unsubscribe();\n  }\n\n  // When user sends a message\n  onSendMessage(message: string) {\n    // Hides suggestions when a message is send (once a conversation is started)\n    if (this.messageSuggestionsList.length != 0) {\n      this.messageSuggestionsList = [];\n    }\n\n    // Create TextMessage Object with user message\n    let userMessage = this.createUserMessage(message);\n\n    // Add user message to the list of messages\n    this.addMessageToList(userMessage);\n\n    // Set the API URL for the model\n    this.pictureMessageService.setReourceUrl(this.aiModelCommunicatorCreator.getAPIUrl());\n\n    // Dispatch action to ask answer to AI via dedicated effect\n    this.store.dispatch(askAnswerAI({ message: message }));\n  }\n\n  // When user selects a model the selected model is updated and the conresponding concrete builder is asign as global variable\n  onChoosenModel(model: string) {\n    // Update the selected model name\n    this.store.dispatch(setAiModelName({ aiModelName: model }));\n    // Update the communicator\n    this.setModelCommunicator();\n  }\n\n  // Selects right concrete builder according to the selected model\n  setModelCommunicator() {\n    this.selectedModelName$.subscribe((selectedModelName) => {\n      switch (selectedModelName) {\n        case textToImageModelsName.OPENJOURNEY: {\n          this.aiModelCommunicatorCreator = this.openjourneyCommunicator;\n          break;\n        }\n        case textToImageModelsName.STABLE_DIFFUSION_1_5: {\n          this.aiModelCommunicatorCreator = this.stableDiffusion1_5Communicator;\n          break;\n        }\n        case textToImageModelsName.STABLE_DIFFUSION_XL: {\n          this.aiModelCommunicatorCreator = this.stableDiffusionXLCommunicator;\n          break;\n        }\n      }\n    })\n  }\n\n  // Creates user message object\n  createUserMessage(message: string): TextMessage {\n    return {\n      type: \"text\",\n      isAnswer: false,\n      text: message\n    };\n  }\n\n  // Adds user message to the list of message displayed in the template\n  addMessageToList(message: TextMessage) {\n    this.store.dispatch(addUserQuestion({textMessage: message}))\n  }\n\n\n  castMessageAsPictureMessage(message: any): PictureMessage {\n    return message;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-gen-container.component.scss\n                \n                .chatbot-container {\n  container-type: inline-size;\n  container-name: chatbot-container;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  background-color: #f0f0f0;\n  justify-content: center;\n  border-radius: 15px;\n  overflow: hidden;\n}\n\n.chatbot-content {\n  display:grid;\n  grid-template-rows:auto 1fr auto;\n  grid-template-columns:100%;\n  width: 100%;\n  background-color: white;\n  box-shadow: 0 9px 0px 0px white, 0 -9px 0px 0px white, 12px 0 15px -4px rgba(194, 194, 194, 0.8), -12px 0 15px -4px rgba(194, 194, 194, 0.8);\n}\n\n.message-list {\n  height: 100%;\n  overflow-y: hidden;\n  -ms-overflow-style: none; \n  scrollbar-width: none;\n}\n\n.message-list::-webkit-scrollbar { \n  display: none;\n}\n\n.ai-model-detail {\n  max-width: 480px;\n}\n\n\n@container chatbot-container (max-width: 972px) {\n  .ai-model-detail {\n    display: none;\n  }\n}\n\n@container chatbot-container (min-width: 972px) and (max-width: 1599px) {\n  .ai-model-detail {\n    width: 34%;\n  }\n}\n\n\n@container chatbot-container (min-width: 1600px) {\n  .ai-model-detail {\n    //width: 40%;\n    width: 34%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PictureGenContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PictureGenEffects.html":{"url":"injectables/PictureGenEffects.html","title":"injectable - PictureGenEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PictureGenEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/picture-gen/picture-gen.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getAIAnswer$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store: Store, pictureMessageService: PictureMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state/picture-gen/picture-gen.effects.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pictureMessageService\n                                                  \n                                                        \n                                                                        PictureMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getAIAnswer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(askAnswerAI),\n      switchMap((action) => (\n        this.pictureMessageService.post(action.message).pipe(\n          map((answer: PictureMessage) => addAnswerAI({ pictureMessage: answer })),\n          catchError((error) => of(addAnswerAIError({errorMessageState: {state: \"Error\", error: { message: error }}})))\n        ))\n      )\n    ))\n                    \n                \n                    \n                        \n                                Defined in src/app/state/picture-gen/picture-gen.effects.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\nimport { askAnswerAI, addAnswerAI, addAnswerAIError } from \"./picture-gen.actions\";\nimport { State } from \"./picture-gen-reducer\";\nimport { PictureMessageService } from \"src/app/common/services/picture-message.service\";\nimport { PictureMessage } from \"src/app/common/models/picture-message\";\n\n@Injectable()\nexport class PictureGenEffects {\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private pictureMessageService: PictureMessageService\n  ) { }\n\n  getAIAnswer$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(askAnswerAI),\n      switchMap((action) => (\n        this.pictureMessageService.post(action.message).pipe(\n          map((answer: PictureMessage) => addAnswerAI({ pictureMessage: answer })),\n          catchError((error) => of(addAnswerAIError({errorMessageState: {state: \"Error\", error: { message: error }}})))\n        ))\n      )\n    ));\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PictureMessage.html":{"url":"interfaces/PictureMessage.html","title":"interface - PictureMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PictureMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/models/picture-message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAnswer\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAnswer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAnswer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SafeUrl } from \"@angular/platform-browser\";\n\nexport interface PictureMessage {\n  type: \"picture\",\n  isAnswer: boolean,\n  picture: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PictureMessageService.html":{"url":"injectables/PictureMessageService.html","title":"injectable - PictureMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PictureMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/services/picture-message.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ResourceService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                APIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                APIKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fromServerModel\n                            \n                            \n                                getResourceUrl\n                            \n                            \n                                    \n                                post\n                            \n                            \n                                setReourceUrl\n                            \n                            \n                                getHeaders\n                            \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/services/picture-message.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fromServerModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromServerModel(json: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PictureMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResourceUrl\n                        \n                    \n                \n            \n            \n                \ngetResourceUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:21\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:44\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReourceUrl\n                        \n                    \n                \n            \n            \n                \nsetReourceUrl(resourceUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/picture-message.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:34\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        APIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/picture-message.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        APIKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiKey\n                    \n                \n                        \n                            \n                                Inherited from         ResourceService\n\n                            \n                        \n                    \n                        \n                                Defined in         ResourceService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PictureMessage } from '../models/picture-message';\nimport { ResourceService } from './resource.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map, catchError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Used to send textual messages and receive picure (input: text, output: picture)\n */\nexport class PictureMessageService extends ResourceService {\n  private APIUrl?: string;\n\n  constructor(protected override httpClient: HttpClient) {\n    super(httpClient);\n   }\n\n   getResourceUrl(): string {\n    if (this.APIUrl) {\n      return this.APIUrl;\n    } else {\n      //TODO: throw error\n      return \"\";\n    }\n  }\n\n  setReourceUrl(resourceUrl: string) {\n    this.APIUrl = resourceUrl;\n  }\n\n  // cast the answer into the right type\n  override fromServerModel(json: any): PictureMessage {\n    return {\n      type: \"picture\",\n      isAnswer: true,\n      picture: URL.createObjectURL(json)\n    };\n  }\n\n  // Override post function to add optional paramaters to receive the answer as a blob\n  override post(message: string): Observable {\n    let headers = this.getHeaders();\n\n    return this.httpClient.post(this.getResourceUrl(), message, { headers, responseType: 'blob' as 'json' })\n      .pipe(\n        map((json) => this.fromServerModel(json)),\n        catchError(this.handleError)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/services/resource.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                APIKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromServerModel\n                            \n                            \n                                getHeaders\n                            \n                            \n                                    Abstract\n                                getResourceUrl\n                            \n                            \n                                handleError\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/services/resource.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fromServerModel\n                        \n                    \n                \n            \n            \n                \nfromServerModel(json: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/resource.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/resource.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getResourceUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResourceUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/resource.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/resource.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/resource.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        APIKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiKey\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/resource.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { TextMessage } from '../models/text-message';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class ResourceService {\n  private readonly APIKey = environment.apiKey;\n\n  constructor(protected httpClient: HttpClient) {\n  }\n\n  abstract getResourceUrl(): string;\n\n  // Override this to cast the answer into the right type\n  fromServerModel(json: any): T {\n    return json;\n  }\n  \n  post(message: string): Observable {\n    let headers = this.getHeaders();\n    return this.httpClient.post(this.getResourceUrl(), message, { headers })\n      .pipe(\n        map((json) => this.fromServerModel(json)),\n        catchError(this.handleError)\n      );\n  }\n\n  getHeaders(): HttpHeaders {\n    return new HttpHeaders({ 'Authorization': `Bearer ${this.APIKey}`, 'Content-Type': 'application/json'});\n  }\n\n  handleError(error: HttpErrorResponse) {\n    //TODO: handle error depending on HuggingFace Inference API\n    console.log(error);\n    return throwError(error.message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sidenav/sidenav.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n\n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homeIconPath\n                            \n                            \n                                imagePath\n                            \n                            \n                                isExpanded\n                            \n                            \n                                isMobileDrawerOpen\n                            \n                            \n                                isMobileSize\n                            \n                            \n                                openEventsubscription\n                            \n                            \n                                screenHeight\n                            \n                            \n                                screenWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMobileDrawer\n                            \n                            \n                                closeNav\n                            \n                            \n                                    \n                                getScreenSize\n                            \n                            \n                                openNav\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sidenav/sidenav.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidenav/sidenav.component.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMobileDrawer\n                        \n                    \n                \n            \n            \n                \ncloseMobileDrawer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidenav/sidenav.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeNav\n                        \n                    \n                \n            \n            \n                \ncloseNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidenav/sidenav.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScreenSize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/sidenav/sidenav.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNav\n                        \n                    \n                \n            \n            \n                \nopenNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidenav/sidenav.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleNav\n                        \n                    \n                \n            \n            \n                \ntoggleNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/sidenav/sidenav.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        homeIconPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobileDrawerOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobileSize\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventsubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/sidenav/sidenav.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { NavigationService } from '../common/services/navigation.service';\nimport { Subscription } from 'rxjs';\nimport { HostListener } from \"@angular/core\";\n\n//TODO: move to env file\nconst RESPONSIVE_WIDTH = 700;\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n  imagePath: string;\n  homeIconPath: string;\n  openEventsubscription: Subscription;\n  isExpanded = true;\n\n  screenHeight: number = 0;\n  screenWidth: number = 0;\n  isMobileSize = false;\n  isMobileDrawerOpen = false;\n\n\n  constructor(private navigationService: NavigationService) {\n    this.getScreenSize();\n    this.imagePath = '/assets/logo-short-no-bg.png';\n    this.homeIconPath = \"/assets/icons/home-alt.svg\";\n    this.openEventsubscription = this.navigationService.getOpenNavDrawerEvent().subscribe(()=>{\n      console.log(\"1\");\n      this.openNav();\n      })\n  }\n  \n  @HostListener('window:resize', ['$event'])\n  getScreenSize() {\n        this.screenHeight = window.innerHeight;\n        this.screenWidth = window.innerWidth;\n        //console.log(this.screenHeight, this.screenWidth);\n        if (this.screenWidth >= RESPONSIVE_WIDTH && this.isMobileSize) {\n          this.isMobileSize = false;\n          console.log(\"isMobileSize false\");\n        }\n\n        if (this.screenWidth \n    \n\n    \n        \n  \n    \n      \n        \n        LLaMA\n        \n          \n        \n      \n\n      \n        \n          \n            \n              \n            \n          \n          Home\n        \n\n        \n          \n          Chat\n        \n\n        \n          \n            \n              \n              \n            \n          \n          Image Builder\n        \n      \n    \n\n  \n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                .sidenav-container {\n    height: 100%;\n    background-color: #24252d;\n}\n\n.mat-drawer {\n    background-color: #24252d;\n}\n\n.side-nav-logo {\n    width: 50px;\n    padding-left: 25px;\n    padding-right: 15px;\n    background-color: #24252d;\n    cursor: pointer;\n}\n\n.nav-link-opened {\n    display: flex;\n    align-items: center;\n}\n\n.nav-link-closed {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.side-nav-title-block {\n    display: flex;\n    align-items: center;\n    margin-top: 25px;\n    margin-bottom: 35px;\n}\n\n.side-nav-title {\n    font-size: 1.7rem;\n    padding-left: 5px;\n    margin-right: 15px;\n    color: #f6f6f7;\n}\n\na {\n    color: #f6f6f7;\n}\n\n.side-nav-icon {\n    font-size: 30px;\n    height: 30px;\n    width: 30px;\n    color: inherit;\n}\n\n.side-nav-link {\n    color: #f6f6f7;\n}\n\n.side-nav-expdanded {\n    padding-left: 35px;\n    padding-right: 15px;\n}\n\n.nav-close-icon {\n    font-size: 30px;\n    height: 30px;\n    width: 30px;\n    color: #f6f6f7;\n    cursor: pointer;\n}\n\n.nav-close-icon-container {\n    display: flex;\n}\n\n.mat-drawer-side {\n    border-right-style: none;\n}\n\n.nav-link {\n    &.active-list-item {\n        color: orange;\n    }\n}\n\n\n@media only screen and (min-width: 700px) {\n    .nav-close-icon {\n        margin-right: 15px;\n    }\n\n    .side-nav-title-block {\n        margin-bottom: 55px;\n    }\n\n    .nav-link-block a {\n        margin-bottom: 25px;\n    }\n\n    .side-nav-link {\n        font-size: 1.2rem;\n        font-family: 'Gilroy-Bold';\n    }\n}\n\n@media only screen and (max-width: 700px) {\n    .sidenav-container  {\n        position: absolute;\n        width: 100%;\n    }\n\n    .sidenav-drawer {\n        width: 100%;\n    }\n\n    .nav-close-icon {\n        position: absolute;\n        top: 20px;\n        right: 20px;\n        height: 55px;\n        width: 55px;\n        font-size: 55px;\n    }\n\n    .side-nav-title-block {\n        justify-content: center;\n        margin-top: 12dvh;\n    }\n\n    .nav-link-block {\n        display: flex;\n        flex-direction: column;\n        margin-top: 15dvh;\n    }\n\n    .nav-link-block a {\n        margin-bottom: 5vh;\n    }\n\n    .sidenav-drawer nav{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .side-nav-logo {\n        width: 75px;\n        margin-right: 30px;\n    }\n\n    .side-nav-title {\n        font-size: 2.9rem;\n    }\n\n    .side-nav-icon {\n        margin-right: 15px;\n        font-size: 40px;\n        height: 40px;\n        width: 40px;\n    }\n\n    .side-nav-link {\n        font-size: 1.8rem;\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            LLaMA                                                                                                                  Home                                    Chat                                                                                                  Image Builder                    '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/chatbot/chatbot.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aiModelName\n                                        \n                                \n                                \n                                        \n                                            isNewConversation\n                                        \n                                \n                                \n                                        \n                                            messageList\n                                        \n                                \n                                \n                                        \n                                            messageState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aiModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aiModelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewConversation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNewConversation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageList:         TextMessage[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TextMessage[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageState:         MessageState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createFeature, createFeatureSelector, createReducer, createSelector, on } from '@ngrx/store';\nimport * as ChatbotActions from './chatbot.actions';\nimport { MessageState, LoadingMessageState, SuccessMessageState, ErrorMessageState } from 'src/app/common/models/message-state';\nimport { TextMessage } from 'src/app/common/models/text-message';\nimport { conversationalModelsName } from 'src/environments/environment';\n\nexport const chatbotFeatureKey = 'chatbot';\n\nconst successMessageState: SuccessMessageState = { state: \"Success\" };\nconst loadingMessageState: LoadingMessageState = { state: \"Loading\" };\n\nexport interface State {\n  aiModelName: string;\n  messageState: MessageState;\n  messageList: TextMessage[];\n  isNewConversation: boolean;\n}\n\nexport const initialState: State = {\n  aiModelName: conversationalModelsName.BLENDER_BOT,\n  messageState: successMessageState,\n  messageList: [],\n  // Used to know if suggestions should be displayed (they are dipslayed only for new conversations)\n  isNewConversation: true\n};\n\nexport const chatbotFeature = createFeature({\n  name: \"chatbot\",\n  reducer: createReducer(\n    initialState,\n    on(ChatbotActions.askAnswerAI, state => ({ ...state, messageState: loadingMessageState })),\n    on(ChatbotActions.addAnswerAI, (state, { textMessage }) => ({ ...state, messageList: [...state.messageList, textMessage], messageState: successMessageState })),\n    on(ChatbotActions.addAnswerAIError, (state, { errorMessageState }) => ({ ...state, messageState: errorMessageState })),\n    on(ChatbotActions.addUserQuestion, (state, { textMessage }) => ({ ...state, messageList: [...state.messageList, textMessage], isNewConversation: false })),\n    on(ChatbotActions.setAiModelName, (state, { aiModelName }) => ({ ...state, aiModelName: aiModelName })),\n  ),\n});\n\nexport const {\n  name: _chatbotFeatureKey,\n  reducer: chatbotReducer,\n  selectMessageList,\n  selectMessageState,\n  selectAiModelName,\n  selectIsNewConversation\n} = chatbotFeature;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/picture-gen/picture-gen-reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aiModelName\n                                        \n                                \n                                \n                                        \n                                            isNewConversation\n                                        \n                                \n                                \n                                        \n                                            messageList\n                                        \n                                \n                                \n                                        \n                                            messageState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aiModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aiModelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewConversation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNewConversation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageList:     (TextMessage | PictureMessage)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (TextMessage | PictureMessage)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messageState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messageState:         MessageState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createFeature, createReducer, on } from '@ngrx/store';\nimport * as PictureGenActions from './picture-gen.actions';\nimport { LoadingMessageState, MessageState, SuccessMessageState } from 'src/app/common/models/message-state';\nimport { TextMessage } from 'src/app/common/models/text-message';\nimport { textToImageModelsName } from 'src/environments/environment';\nimport { PictureMessage } from 'src/app/common/models/picture-message';\n\nexport const pictureGenFeatureKey = 'pictureGen';\n\nconst successMessageState: SuccessMessageState = { state: \"Success\" };\nconst loadingMessageState: LoadingMessageState = { state: \"Loading\" };\n\nexport interface State {\n  aiModelName: string;\n  messageState: MessageState;\n  messageList: (TextMessage | PictureMessage)[];\n  isNewConversation: boolean;\n}\n\nexport const initialState: State = {\n  aiModelName: textToImageModelsName.OPENJOURNEY,\n  messageState: successMessageState,\n  messageList: [],\n  // Used to know if suggestions should be displayed (they are dipslayed only for new conversations)\n  isNewConversation: true\n};\n\nexport const pictureGenFeature = createFeature({\n  name: \"pictureGen\",\n  reducer: createReducer(\n    initialState,\n    on(PictureGenActions.askAnswerAI, state => ({ ...state, messageState: loadingMessageState })),\n    on(PictureGenActions.addAnswerAI, (state, { pictureMessage }) => ({ ...state, messageList: [...state.messageList, pictureMessage], messageState: successMessageState })),\n    on(PictureGenActions.addAnswerAIError, (state, { errorMessageState }) => ({ ...state, messageState: errorMessageState })),\n    on(PictureGenActions.addUserQuestion, (state, { textMessage }) => ({ ...state, messageList: [...state.messageList, textMessage], isNewConversation: false })),\n    on(PictureGenActions.setAiModelName, (state, { aiModelName }) => ({ ...state, aiModelName: aiModelName })),\n  ),\n});\n\nexport const {\n  name: _pictureGenFeatureKey,\n  reducer: pictureGenReducer,\n  selectMessageList,\n  selectMessageState,\n  selectAiModelName,\n  selectIsNewConversation\n} = pictureGenFeature;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SuggestionsService.html":{"url":"injectables/SuggestionsService.html","title":"injectable - SuggestionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SuggestionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/services/suggestions.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service used to allow message-suggestion component to send data to parent container (chatbot-container, picture-gen-container...).\nI use a service here to allow communication between components that are deep down the component tree and parent container.\nUsing a service prevents nested Input and Output in multiple child components.\nchatbot-container and picture-gen-container use Inputs() to communicate the list of suggested messages. This service is used to\ntrigger selection event up to the parent container.\nThis service is responsible for routing the selection event to the right container.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notificationForChatbotContainerReceived\n                            \n                            \n                                    Public\n                                notificationForPictureContainerReceived\n                            \n                            \n                                    Private\n                                notificationToChatbotContainer\n                            \n                            \n                                    Private\n                                notificationToPictureGenContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/services/suggestions.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notify\n                        \n                    \n                \n            \n            \n                \nnotify(suggestion: string, target: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/suggestions.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notificationForChatbotContainerReceived\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.notificationToChatbotContainer.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/suggestions.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notificationForPictureContainerReceived\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.notificationToPictureGenContainer.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/suggestions.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notificationToChatbotContainer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/suggestions.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notificationToPictureGenContainer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/suggestions.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { containersName } from 'src/environments/environment';\n\n/**\n * Service used to allow message-suggestion component to send data to parent container (chatbot-container, picture-gen-container...).\n * I use a service here to allow communication between components that are deep down the component tree and parent container.\n * Using a service prevents nested Input and Output in multiple child components.\n * \n * chatbot-container and picture-gen-container use Inputs() to communicate the list of suggested messages. This service is used to \n * trigger selection event up to the parent container.\n * \n * This service is responsible for routing the selection event to the right container. \n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuggestionsService {\n\n  constructor() { }\n\n  // Notification torwards Chatbot container\n  private notificationToChatbotContainer = new Subject();\n  public notificationForChatbotContainerReceived = this.notificationToChatbotContainer.asObservable();\n\n  // Notification torwards Picture-Gen container\n  private notificationToPictureGenContainer = new Subject();\n  public notificationForPictureContainerReceived = this.notificationToPictureGenContainer.asObservable();\n\n  notify(suggestion: string, target: string) {\n    // This is where the logic choose which container should receive the event\n    if (target == containersName.CHATBOT) {\n      this.notificationToChatbotContainer.next(suggestion);\n    }\n    if (target == containersName.PICTUREGEN) {\n      console.log(\"service send notif\");\n      this.notificationToPictureGenContainer.next(suggestion);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextMessage.html":{"url":"interfaces/TextMessage.html","title":"interface - TextMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/models/text-message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isAnswer\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isAnswer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAnswer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TextMessage {\n  type: \"text\",\n  isAnswer: boolean,\n  text: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextMessageService.html":{"url":"injectables/TextMessageService.html","title":"injectable - TextMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TextMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/services/text-message.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ResourceService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                APIUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                APIKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fromServerModel\n                            \n                            \n                                getResourceUrl\n                            \n                            \n                                setReourceUrl\n                            \n                            \n                                getHeaders\n                            \n                            \n                                handleError\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/common/services/text-message.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fromServerModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromServerModel(json: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                json\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TextMessage\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResourceUrl\n                        \n                    \n                \n            \n            \n                \ngetResourceUrl()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReourceUrl\n                        \n                    \n                \n            \n            \n                \nsetReourceUrl(resourceUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/common/services/text-message.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resourceUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeaders\n                        \n                    \n                \n            \n            \n                \ngetHeaders()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:34\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n            \n                \npost(message: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ResourceService\n\n                        \n                    \n                    \n                        \n                                Defined in         ResourceService:25\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        APIUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/common/services/text-message.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        APIKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiKey\n                    \n                \n                        \n                            \n                                Inherited from         ResourceService\n\n                            \n                        \n                    \n                        \n                                Defined in         ResourceService:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ResourceService } from './resource.service';\nimport { TextMessage } from '../models/text-message';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Used to send and receive textual messages (input: text, output: text)\n */\nexport class TextMessageService extends ResourceService {\n  private APIUrl?: string;\n\n  constructor(protected override httpClient: HttpClient) {\n    super(httpClient);\n  }\n\n  getResourceUrl(): string {\n    if (this.APIUrl) {\n      return this.APIUrl;\n    } else {\n      //TODO: throw error\n      return \"\";\n    }\n  }\n\n  setReourceUrl(resourceUrl: string) {\n    this.APIUrl = resourceUrl;\n  }\n\n  // cast the answer into the right type\n  override fromServerModel(json: any): TextMessage {\n    return {\n      type: \"text\",\n      isAnswer: true,\n      // temp fix due to changes in API\n      text: json[0].generated_text\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleTopBarComponent.html":{"url":"components/TitleTopBarComponent.html","title":"component - TitleTopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleTopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title-top-bar/title-top-bar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-title-top-bar\n            \n\n\n\n            \n                styleUrls\n                ./title-top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title-top-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelectedModel\n                            \n                            \n                                openNavBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelList\n                            \n                            \n                                selectedModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choosenModel\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigationService: NavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/title-top-bar/title-top-bar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigationService\n                                                  \n                                                        \n                                                                        NavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modelList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/title-top-bar/title-top-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedModel\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/title-top-bar/title-top-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/title-top-bar/title-top-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        choosenModel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/title-top-bar/title-top-bar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectedModel\n                        \n                    \n                \n            \n            \n                \nonSelectedModel(model: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/title-top-bar/title-top-bar.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNavBar\n                        \n                    \n                \n            \n            \n                \nopenNavBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/title-top-bar/title-top-bar.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NavigationService } from 'src/app/common/services/navigation.service';\n\n@Component({\n  selector: 'app-title-top-bar',\n  templateUrl: './title-top-bar.component.html',\n  styleUrls: ['./title-top-bar.component.scss']\n})\nexport class TitleTopBarComponent {\n  @Input() title: string = \"\";\n  @Input() modelList!: string[];\n  @Input() selectedModel!: Observable;\n\n  // Output selected model\n  @Output() choosenModel = new EventEmitter();\n\n\n  constructor(private navigationService: NavigationService) {}\n\n\n  openNavBar() {\n    this.navigationService.openNavDrawer();\n  }\n  \n  onSelectedModel(model: string) {\n    this.choosenModel.emit(model);\n  }\n}\n\n    \n\n    \n        \n  \n    menu\n  \n  \n    {{title}}\n  \n  \n    \n      settings\n    \n    \n    \n      \n        check\n        {{model}}\n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./title-top-bar.component.scss\n                \n                .container {\n  height: 55px;\n  padding-left: 15px;\n  padding-right: 15px;\n  border-bottom: solid 1px #c4c4c4;\n  display: flex;\n  align-items: center;\n  box-shadow: rgba(36, 36, 36, 0.12) 0px 1px 3px, rgba(36, 36, 36, 0.12) 0px 1px 2px;\n}\n\n.title {\n  height: fit-content;\n  font-family: 'Gilroy-Bold';\n  font-weight: 400;\n  font-size: 1.7rem;\n  letter-spacing: 1px;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.menu-icon{\n  font-size: 30px;\n  margin-right: 15px;\n}\n\n.model-select-dropdown {\n  margin-left: auto;\n}\n\n.hide-icon {\n  visibility: hidden;\n}\n\n.model-select-dropdown {\n  cursor: pointer;\n}\n\n@media only screen and (min-width: 700px) {\n  .menu-icon {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        {{title}}              settings                          check        {{model}}              '\n    var COMPONENTS = [{'name': 'AiModelDetailComponent', 'selector': 'app-ai-model-detail'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatbotContainerComponent', 'selector': 'app-chatbot-container'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingMessageComponent', 'selector': 'app-loading-message'},{'name': 'MessageBoxComponent', 'selector': 'app-message-box'},{'name': 'MessageListComponent', 'selector': 'app-message-list'},{'name': 'MessageSuggestionsComponent', 'selector': 'app-message-suggestions'},{'name': 'PictureGenContainerComponent', 'selector': 'app-picture-gen-container'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'TitleTopBarComponent', 'selector': 'app-title-top-bar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleTopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            AiModelCommunicatorCreator\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteBlenderbot3BCommunicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteBlenderbot3BCommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteBlenderbotCommunicator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteBlenderbotCommunicatorCreator\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteDialogptCommunicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteDialogptCommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteFalconCommunicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteFalconCommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteLlamaCommunicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteLlamaCommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteOpenjourneyCommunicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteOpenjourneyCommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteStableDiffusion1_5Communicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteStableDiffusion1_5CommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteStableDiffusionXLCommunicator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            class\n            ConcreteStableDiffusionXLCommunicatorCreator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/factories/aimodel-communicator-factory.ts\n            \n            interface\n            AiModelCommunicator\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/common/models/ai-model-details.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/common/models/ai-model-details.ts\n            \n            interface\n            Models\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/common/models/picture-message.ts\n            \n            interface\n            PictureMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/models/text-message.ts\n            \n            interface\n            TextMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/common/services/model-details.service.ts\n            \n            injectable\n            ModelDetailsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/common/services/picture-message.service.ts\n            \n            injectable\n            PictureMessageService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/common/services/resource.service.ts\n            \n            injectable\n            ResourceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/common/services/suggestions.service.ts\n            \n            injectable\n            SuggestionsService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/common/services/text-message.service.ts\n            \n            injectable\n            TextMessageService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/ai-model-detail/ai-model-detail.component.ts\n            \n            component\n            AiModelDetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/error-message/error-message.component.ts\n            \n            component\n            ErrorMessageComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/loading-message/loading-message.component.ts\n            \n            component\n            LoadingMessageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/message-box/message-box.component.ts\n            \n            component\n            MessageBoxComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/message-list/message-list.component.ts\n            \n            component\n            MessageListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/message-suggestions/message-suggestions.component.ts\n            \n            component\n            MessageSuggestionsComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/title-top-bar/title-top-bar.component.ts\n            \n            component\n            TitleTopBarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/containers/chatbot-container/chatbot-container.component.ts\n            \n            component\n            ChatbotContainerComponent\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/containers/picture-gen-container/picture-gen-container.component.ts\n            \n            component\n            PictureGenContainerComponent\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/sidenav/sidenav.component.ts\n            \n            variable\n            RESPONSIVE_WIDTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.actions.ts\n            \n            variable\n            addAnswerAI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.actions.ts\n            \n            variable\n            addAnswerAIError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.actions.ts\n            \n            variable\n            addUserQuestion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.actions.ts\n            \n            variable\n            askAnswerAI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.actions.ts\n            \n            variable\n            setAiModelName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.effects.ts\n            \n            injectable\n            ChatbotEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            variable\n            chatbotFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            variable\n            chatbotFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            variable\n            loadingMessageState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            variable\n            successMessageState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/chatbot/chatbot.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            interface\n            State\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            variable\n            loadingMessageState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            variable\n            pictureGenFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            variable\n            pictureGenFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            variable\n            successMessageState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen-reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen.actions.ts\n            \n            variable\n            addAnswerAI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen.actions.ts\n            \n            variable\n            addAnswerAIError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen.actions.ts\n            \n            variable\n            addUserQuestion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen.actions.ts\n            \n            variable\n            askAnswerAI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen.actions.ts\n            \n            variable\n            setAiModelName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/state/picture-gen/picture-gen.effects.ts\n            \n            injectable\n            PictureGenEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            containersName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            conversationalModelsName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            pictureMessageSugestions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            textMessageSugestions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            textToImageModelsName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            containersName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            conversationalModelsName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            pictureMessageSugestions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            textMessageSugestions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            textToImageModelsName\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.4\n        \n            @angular/cdk : ^16.2.10\n        \n            @angular/common : ^17.0.4\n        \n            @angular/compiler : ^17.0.4\n        \n            @angular/core : ^17.0.4\n        \n            @angular/forms : ^17.0.4\n        \n            @angular/material : ^16.2.10\n        \n            @angular/platform-browser : ^17.0.4\n        \n            @angular/platform-browser-dynamic : ^17.0.4\n        \n            @angular/router : ^17.0.4\n        \n            @ngrx/effects : ^17.0.1\n        \n            @ngrx/store : ^17.0.1\n        \n            @ngrx/store-devtools : ^17.0.1\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nChatAI with Angular, Component Driven Architecture, Container & Presentational Components, RxJS, NgRx\nThis is a chatbot using Facebook BlenderBot (400M) and soon LLaMA.\nHosted on : https://chat.loroscio.com/\nList of features\n\nChatbot with Facebook BlenderBot AI (soon other models)\nText-to-Picture (generate pictures with text input) using Stable Diffusion (soon)\n\nDemo Video\nhttps://github.com/oranthony/ChatAI/assets/6161861/46a48633-bfe0-4091-b3f2-88de6998d3b5\nChatbot\nThe chatbot feature is bundle within a Container handling all the logic. It sends data to 3 children Presentational Components: Title Bar, Message List and Message Box.\n\nThe chatbot features auto-scroll: when a new message is displayed, the list scrolls to the bottom to make it visible. I'm using Angular ViewChild decorator to access the DOM.\nFactory Method Design Pattern\nFactory used to abstract API management. Following OPEN/CLOSED principles, adding a new Language Model just require to add its endpoint to the Factory. If later on, we want to allow users to tweak parameters for each Language Model, the Concrete Factory can host the parameters for each Language Model (Temperature, length....).\nFactory Pattern can come in handy if down the road we want to add multimodal LLM. This way we would be able to combine multiples LLM and manage each individually.\nState Management with NgRx and Reactive Programming with RxJS\nStore split in features, using of effects to send calls to API.\nGenerics for the API calls\nMy main class used to communicate with the API is an abstract class with generics for each type of data manipulated : TextMessage and PictureMessage.\n\nUnion Type\nCustom types for status of message (Loading, Success, Error). Union type to reflect the status of the message. \n\n\nResponsive Queries\nUsed to make each container responsive.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAiModelDetailComponent\n\nAiModelDetailComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiModelDetailComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatbotContainerComponent\n\nChatbotContainerComponent\n\nAppModule -->\n\nChatbotContainerComponent->AppModule\n\n\n\n\n\nErrorMessageComponent\n\nErrorMessageComponent\n\nAppModule -->\n\nErrorMessageComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingMessageComponent\n\nLoadingMessageComponent\n\nAppModule -->\n\nLoadingMessageComponent->AppModule\n\n\n\n\n\nMessageBoxComponent\n\nMessageBoxComponent\n\nAppModule -->\n\nMessageBoxComponent->AppModule\n\n\n\n\n\nMessageListComponent\n\nMessageListComponent\n\nAppModule -->\n\nMessageListComponent->AppModule\n\n\n\n\n\nMessageSuggestionsComponent\n\nMessageSuggestionsComponent\n\nAppModule -->\n\nMessageSuggestionsComponent->AppModule\n\n\n\n\n\nPictureGenContainerComponent\n\nPictureGenContainerComponent\n\nAppModule -->\n\nPictureGenContainerComponent->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nTitleTopBarComponent\n\nTitleTopBarComponent\n\nAppModule -->\n\nTitleTopBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorMessageState   (src/.../message-state.ts)\n                        \n                        \n                            LoadingMessageState   (src/.../message-state.ts)\n                        \n                        \n                            MessageState   (src/.../message-state.ts)\n                        \n                        \n                            SuccessMessageState   (src/.../message-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/common/models/message-state.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorMessageState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LoadingMessageState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageState\n                \n            \n            \n                \n                        LoadingMessageState | SuccessMessageState | ErrorMessageState\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SuccessMessageState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addAnswerAI   (src/.../chatbot.actions.ts)\n                        \n                        \n                            addAnswerAI   (src/.../picture-gen.actions.ts)\n                        \n                        \n                            addAnswerAIError   (src/.../chatbot.actions.ts)\n                        \n                        \n                            addAnswerAIError   (src/.../picture-gen.actions.ts)\n                        \n                        \n                            addUserQuestion   (src/.../chatbot.actions.ts)\n                        \n                        \n                            addUserQuestion   (src/.../picture-gen.actions.ts)\n                        \n                        \n                            askAnswerAI   (src/.../chatbot.actions.ts)\n                        \n                        \n                            askAnswerAI   (src/.../picture-gen.actions.ts)\n                        \n                        \n                            chatbotFeature   (src/.../chatbot.reducer.ts)\n                        \n                        \n                            chatbotFeatureKey   (src/.../chatbot.reducer.ts)\n                        \n                        \n                            containersName   (src/.../environment.development.ts)\n                        \n                        \n                            containersName   (src/.../environment.ts)\n                        \n                        \n                            conversationalModelsName   (src/.../environment.development.ts)\n                        \n                        \n                            conversationalModelsName   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initialState   (src/.../chatbot.reducer.ts)\n                        \n                        \n                            initialState   (src/.../picture-gen-reducer.ts)\n                        \n                        \n                            loadingMessageState   (src/.../chatbot.reducer.ts)\n                        \n                        \n                            loadingMessageState   (src/.../picture-gen-reducer.ts)\n                        \n                        \n                            pictureGenFeature   (src/.../picture-gen-reducer.ts)\n                        \n                        \n                            pictureGenFeatureKey   (src/.../picture-gen-reducer.ts)\n                        \n                        \n                            pictureMessageSugestions   (src/.../environment.development.ts)\n                        \n                        \n                            pictureMessageSugestions   (src/.../environment.ts)\n                        \n                        \n                            RESPONSIVE_WIDTH   (src/.../sidenav.component.ts)\n                        \n                        \n                            setAiModelName   (src/.../chatbot.actions.ts)\n                        \n                        \n                            setAiModelName   (src/.../picture-gen.actions.ts)\n                        \n                        \n                            successMessageState   (src/.../chatbot.reducer.ts)\n                        \n                        \n                            successMessageState   (src/.../picture-gen-reducer.ts)\n                        \n                        \n                            textMessageSugestions   (src/.../environment.development.ts)\n                        \n                        \n                            textMessageSugestions   (src/.../environment.ts)\n                        \n                        \n                            textToImageModelsName   (src/.../environment.development.ts)\n                        \n                        \n                            textToImageModelsName   (src/.../environment.ts)\n                        \n                        \n                               (src/.../chatbot.reducer.ts)\n                        \n                        \n                               (src/.../picture-gen-reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/state/chatbot/chatbot.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addAnswerAI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[chatbot Page] Add AI answer', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addAnswerAIError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[chatbot Page] Error on API request', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[chatbot Page] Add user question', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        askAnswerAI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[chatbot Page] Ask AI a question', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAiModelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[chatbot Page] Error on API request', props())\n                    \n                \n\n\n        \n    \n\n    src/app/state/picture-gen/picture-gen.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addAnswerAI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[PictureGen Page] Add AI answer', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addAnswerAIError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[PictureGen Page] Error on API request', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[PictureGen Page] Add user question', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        askAnswerAI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[PictureGen Page] Ask AI a question', props())\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAiModelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[PictureGen Page] Error on API request', props())\n                    \n                \n\n\n        \n    \n\n    src/app/state/chatbot/chatbot.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        chatbotFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeature({\n  name: \"chatbot\",\n  reducer: createReducer(\n    initialState,\n    on(ChatbotActions.askAnswerAI, state => ({ ...state, messageState: loadingMessageState })),\n    on(ChatbotActions.addAnswerAI, (state, { textMessage }) => ({ ...state, messageList: [...state.messageList, textMessage], messageState: successMessageState })),\n    on(ChatbotActions.addAnswerAIError, (state, { errorMessageState }) => ({ ...state, messageState: errorMessageState })),\n    on(ChatbotActions.addUserQuestion, (state, { textMessage }) => ({ ...state, messageList: [...state.messageList, textMessage], isNewConversation: false })),\n    on(ChatbotActions.setAiModelName, (state, { aiModelName }) => ({ ...state, aiModelName: aiModelName })),\n  ),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chatbotFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'chatbot'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         State\n\n                    \n                \n                \n                    \n                        Default value : {\n  aiModelName: conversationalModelsName.BLENDER_BOT,\n  messageState: successMessageState,\n  messageList: [],\n  // Used to know if suggestions should be displayed (they are dipslayed only for new conversations)\n  isNewConversation: true\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingMessageState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingMessageState\n\n                    \n                \n                \n                    \n                        Default value : { state: \"Loading\" }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessageState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SuccessMessageState\n\n                    \n                \n                \n                    \n                        Default value : { state: \"Success\" }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : chatbotFeature\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        containersName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  CHATBOT: \"chatbot\",\n  PICTUREGEN: \"picturegen\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversationalModelsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  BLENDER_BOT: \"BlenderBot\",\n  BLENDER_BOT_3B: \"BlenderBot 3B\",\n  //LLAMA: \"LLaMA\",\n  DIALOGPT: \"DialoGPT\",\n  //FALCON: \"falcon\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\",\n  blenderbotAPIUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\",\n  blenderbot3BAPIUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-3B\",\n  llamaAPIUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\",\n  dialoGptUrl: \"https://api-inference.huggingface.co/models/microsoft/DialoGPT-large\",\n  falconUrl: \"https://api-inference.huggingface.co/models/tiiuae/falcon-7b-instruct\",\n  stableDiffusionXlUrl: \"https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-xl-base-1.0\",\n  stableDiffusion1_5Url: \"https://api-inference.huggingface.co/models/runwayml/stable-diffusion-v1-5\",\n  openjourneyUrl: \"https://api-inference.huggingface.co/models/prompthero/openjourney\",\n  apiKey: \"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\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictureMessageSugestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"A cat in a space suit\", \"Captain America poster style\", \"A monkey playing the piano\"]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textMessageSugestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"How are you?\", \"Do you like movies?\", \"Tell me a short story\", \"What's your favorite color?\"]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textToImageModelsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  OPENJOURNEY: \"openjourney\",\n  STABLE_DIFFUSION_XL: \"Stable Diffusion XL\",\n  STABLE_DIFFUSION_1_5: \"Stable Diffusion 1.5\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        containersName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  CHATBOT: \"chatbot\",\n  PICTUREGEN: \"picturegen\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conversationalModelsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  BLENDER_BOT: \"BlenderBot\",\n  BLENDER_BOT_3B: \"BlenderBot 3B\",\n  //LLAMA: \"LLaMA\",\n  DIALOGPT: \"DialoGPT\",\n  //FALCON: \"falcon\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\",\n  blenderbotAPIUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\",\n  blenderbot3BAPIUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-3B\",\n  llamaAPIUrl: \"https://api-inference.huggingface.co/models/facebook/blenderbot-400M-distill\",\n  dialoGptUrl: \"https://api-inference.huggingface.co/models/microsoft/DialoGPT-large\",\n  falconUrl: \"https://api-inference.huggingface.co/models/tiiuae/falcon-7b-instruct\",\n  stableDiffusionXlUrl: \"https://api-inference.huggingface.co/models/stabilityai/stable-diffusion-xl-base-1.0\",\n  stableDiffusion1_5Url: \"https://api-inference.huggingface.co/models/runwayml/stable-diffusion-v1-5\",\n  openjourneyUrl: \"https://api-inference.huggingface.co/models/prompthero/openjourney\",\n  apiKey: \"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\"\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictureMessageSugestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"A cat in a space suit\", \"Captain America poster style\", \"A monkey playing the piano\"]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textMessageSugestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"How are you?\", \"Do you like movies?\", \"Tell me a short story\", \"What's your favorite color?\"]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textToImageModelsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  OPENJOURNEY: \"openjourney\",\n  STABLE_DIFFUSION_XL: \"Stable Diffusion XL\",\n  STABLE_DIFFUSION_1_5: \"Stable Diffusion 1.5\"\n}\n                    \n                \n\n\n        \n    \n\n    src/app/state/picture-gen/picture-gen-reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         State\n\n                    \n                \n                \n                    \n                        Default value : {\n  aiModelName: textToImageModelsName.OPENJOURNEY,\n  messageState: successMessageState,\n  messageList: [],\n  // Used to know if suggestions should be displayed (they are dipslayed only for new conversations)\n  isNewConversation: true\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingMessageState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoadingMessageState\n\n                    \n                \n                \n                    \n                        Default value : { state: \"Loading\" }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictureGenFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeature({\n  name: \"pictureGen\",\n  reducer: createReducer(\n    initialState,\n    on(PictureGenActions.askAnswerAI, state => ({ ...state, messageState: loadingMessageState })),\n    on(PictureGenActions.addAnswerAI, (state, { pictureMessage }) => ({ ...state, messageList: [...state.messageList, pictureMessage], messageState: successMessageState })),\n    on(PictureGenActions.addAnswerAIError, (state, { errorMessageState }) => ({ ...state, messageState: errorMessageState })),\n    on(PictureGenActions.addUserQuestion, (state, { textMessage }) => ({ ...state, messageList: [...state.messageList, textMessage], isNewConversation: false })),\n    on(PictureGenActions.setAiModelName, (state, { aiModelName }) => ({ ...state, aiModelName: aiModelName })),\n  ),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pictureGenFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pictureGen'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessageState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SuccessMessageState\n\n                    \n                \n                \n                    \n                        Default value : { state: \"Success\" }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : pictureGenFeature\n                    \n                \n\n\n        \n    \n\n    src/app/sidenav/sidenav.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RESPONSIVE_WIDTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 700\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
